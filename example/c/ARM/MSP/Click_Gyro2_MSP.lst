;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17.9.2018. 15:42:42
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x35590000  	13657
0x0008	0x35110000  	13585
0x000C	0x35110000  	13585
0x0010	0x35110000  	13585
0x0014	0x35110000  	13585
0x0018	0x35110000  	13585
0x001C	0x35110000  	13585
0x0020	0x35110000  	13585
0x0024	0x35110000  	13585
0x0028	0x35110000  	13585
0x002C	0x35110000  	13585
0x0030	0x35110000  	13585
0x0034	0x35110000  	13585
0x0038	0x35110000  	13585
0x003C	0x35110000  	13585
0x0040	0x35110000  	13585
0x0044	0x35110000  	13585
0x0048	0x35110000  	13585
0x004C	0x35110000  	13585
0x0050	0x35110000  	13585
0x0054	0x35110000  	13585
0x0058	0x35110000  	13585
0x005C	0x35110000  	13585
0x0060	0x35110000  	13585
0x0064	0x35110000  	13585
0x0068	0x35110000  	13585
0x006C	0x35110000  	13585
0x0070	0x35110000  	13585
0x0074	0x35110000  	13585
0x0078	0x35110000  	13585
0x007C	0x35110000  	13585
0x0080	0x35110000  	13585
0x0084	0x35110000  	13585
0x0088	0x35110000  	13585
0x008C	0x35110000  	13585
0x0090	0x35110000  	13585
0x0094	0x35110000  	13585
0x0098	0x35110000  	13585
0x009C	0x35110000  	13585
0x00A0	0x35110000  	13585
0x00A4	0x35110000  	13585
0x00A8	0x35110000  	13585
0x00AC	0x35110000  	13585
0x00B0	0x35110000  	13585
0x00B4	0x35110000  	13585
0x00B8	0x35110000  	13585
0x00BC	0x35110000  	13585
0x00C0	0x35110000  	13585
0x00C4	0x35110000  	13585
0x00C8	0x35110000  	13585
0x00CC	0x35110000  	13585
0x00D0	0x35110000  	13585
0x00D4	0x35110000  	13585
0x00D8	0x35110000  	13585
0x00DC	0x35110000  	13585
0x00E0	0x35110000  	13585
0x00E4	0x35110000  	13585
0x00E8	0x35110000  	13585
0x00EC	0x35110000  	13585
0x00F0	0x35110000  	13585
0x00F4	0x35110000  	13585
0x00F8	0x35110000  	13585
0x00FC	0x35110000  	13585
; end of ____SysVT
_main:
;Click_Gyro2_MSP.c, 106 :: 		void main()
0x3558	0xB081    SUB	SP, SP, #4
0x355A	0xF000F811  BL	13696
0x355E	0xF7FFFFDB  BL	13592
0x3562	0xF000FBDB  BL	15644
0x3566	0xF7FFFFED  BL	13636
0x356A	0xF000FB89  BL	15488
;Click_Gyro2_MSP.c, 108 :: 		systemInit();
0x356E	0xF7FFFF97  BL	_systemInit+0
;Click_Gyro2_MSP.c, 109 :: 		applicationInit();
0x3572	0xF7FFFF0D  BL	_applicationInit+0
;Click_Gyro2_MSP.c, 111 :: 		while (1)
L_main11:
;Click_Gyro2_MSP.c, 113 :: 		applicationTask();
0x3576	0xF7FFFE93  BL	_applicationTask+0
;Click_Gyro2_MSP.c, 114 :: 		}
0x357A	0xE7FC    B	L_main11
;Click_Gyro2_MSP.c, 115 :: 		}
L_end_main:
L__main_end_loop:
0x357C	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_MSP432P.c, 39 :: 		
0x328C	0xB081    SUB	SP, SP, #4
;__Lib_System_MSP432P.c, 41 :: 		
L_loopDW:
;__Lib_System_MSP432P.c, 42 :: 		
0x328E	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_MSP432P.c, 43 :: 		
0x3292	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_MSP432P.c, 44 :: 		
0x3296	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_MSP432P.c, 45 :: 		
0x329A	0xD1F8    BNE	L_loopDW
;__Lib_System_MSP432P.c, 47 :: 		
L_end___CC2DW:
0x329C	0xB001    ADD	SP, SP, #4
0x329E	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_MSP432P.c, 82 :: 		
0x3350	0xB081    SUB	SP, SP, #4
;__Lib_System_MSP432P.c, 84 :: 		
0x3352	0xF04F0900  MOV	R9, #0
;__Lib_System_MSP432P.c, 85 :: 		
0x3356	0xF04F0C00  MOV	R12, #0
;__Lib_System_MSP432P.c, 86 :: 		
0x335A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_MSP432P.c, 87 :: 		
0x335E	0xDC04    BGT	L_loopFZs
;__Lib_System_MSP432P.c, 88 :: 		
0x3360	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_MSP432P.c, 89 :: 		
0x3364	0xDB01    BLT	L_loopFZs
;__Lib_System_MSP432P.c, 90 :: 		
0x3366	0x46D4    MOV	R12, R10
;__Lib_System_MSP432P.c, 91 :: 		
0x3368	0x46EA    MOV	R10, SP
;__Lib_System_MSP432P.c, 92 :: 		
L_loopFZs:
;__Lib_System_MSP432P.c, 93 :: 		
0x336A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_MSP432P.c, 94 :: 		
0x336E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_MSP432P.c, 95 :: 		
0x3372	0xD1FA    BNE	L_loopFZs
;__Lib_System_MSP432P.c, 96 :: 		
0x3374	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_MSP432P.c, 97 :: 		
0x3378	0xDD05    BLE	L_norep
;__Lib_System_MSP432P.c, 98 :: 		
0x337A	0x46E2    MOV	R10, R12
;__Lib_System_MSP432P.c, 99 :: 		
0x337C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_MSP432P.c, 100 :: 		
0x3380	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_MSP432P.c, 101 :: 		
0x3384	0xE7F1    B	L_loopFZs
;__Lib_System_MSP432P.c, 102 :: 		
L_norep:
;__Lib_System_MSP432P.c, 105 :: 		
L_end___FillZeros:
0x3386	0xB001    ADD	SP, SP, #4
0x3388	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Gyro2_MSP.c, 38 :: 		void systemInit()
0x34A0	0xB081    SUB	SP, SP, #4
0x34A2	0xF8CDE000  STR	LR, [SP, #0]
;Click_Gyro2_MSP.c, 40 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x34A6	0x2201    MOVS	R2, #1
0x34A8	0x2107    MOVS	R1, #7
0x34AA	0x2000    MOVS	R0, #0
0x34AC	0xF7FFFB72  BL	_mikrobus_gpioInit+0
;Click_Gyro2_MSP.c, 41 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x34B0	0x2200    MOVS	R2, #0
0x34B2	0x2101    MOVS	R1, #1
0x34B4	0x2000    MOVS	R0, #0
0x34B6	0xF7FFFB6D  BL	_mikrobus_gpioInit+0
;Click_Gyro2_MSP.c, 42 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x34BA	0x2200    MOVS	R2, #0
0x34BC	0x2102    MOVS	R1, #2
0x34BE	0x2000    MOVS	R0, #0
0x34C0	0xF7FFFB68  BL	_mikrobus_gpioInit+0
;Click_Gyro2_MSP.c, 43 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_OUTPUT );
0x34C4	0x2200    MOVS	R2, #0
0x34C6	0x2100    MOVS	R1, #0
0x34C8	0x2000    MOVS	R0, #0
0x34CA	0xF7FFFB63  BL	_mikrobus_gpioInit+0
;Click_Gyro2_MSP.c, 44 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_INPUT );
0x34CE	0x2201    MOVS	R2, #1
0x34D0	0x2106    MOVS	R1, #6
0x34D2	0x2000    MOVS	R0, #0
0x34D4	0xF7FFFB5E  BL	_mikrobus_gpioInit+0
;Click_Gyro2_MSP.c, 47 :: 		mikrobus_i2cInit( _MIKROBUS1, &_GYRO2_I2C_CFG[0] );
0x34D8	0x480C    LDR	R0, [PC, #48]
0x34DA	0x4601    MOV	R1, R0
0x34DC	0x2000    MOVS	R0, #0
0x34DE	0xF7FFFB9B  BL	_mikrobus_i2cInit+0
;Click_Gyro2_MSP.c, 50 :: 		mikrobus_logInit( _MIKROBUS2, 9600 );
0x34E2	0xF2425180  MOVW	R1, #9600
0x34E6	0x2001    MOVS	R0, #1
0x34E8	0xF7FFFDC6  BL	_mikrobus_logInit+0
;Click_Gyro2_MSP.c, 52 :: 		Delay_ms( 100 );
0x34EC	0xF644777D  MOVW	R7, #20349
0x34F0	0xF2C00712  MOVT	R7, #18
0x34F4	0xBF00    NOP
0x34F6	0xBF00    NOP
L_systemInit0:
0x34F8	0x1E7F    SUBS	R7, R7, #1
0x34FA	0xD1FD    BNE	L_systemInit0
0x34FC	0xBF00    NOP
0x34FE	0xBF00    NOP
0x3500	0xBF00    NOP
;Click_Gyro2_MSP.c, 53 :: 		}
L_end_systemInit:
0x3502	0xF8DDE000  LDR	LR, [SP, #0]
0x3506	0xB001    ADD	SP, SP, #4
0x3508	0x4770    BX	LR
0x350A	0xBF00    NOP
0x350C	0x338C0000  	__GYRO2_I2C_CFG+0
; end of _systemInit
_mikrobus_gpioInit:
;clicker_2_MSP432.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2B94	0xB081    SUB	SP, SP, #4
0x2B96	0xF8CDE000  STR	LR, [SP, #0]
0x2B9A	0xFA5FF981  UXTB	R9, R1
0x2B9E	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;clicker_2_MSP432.c, 164 :: 		switch( bus )
0x2BA2	0xE01D    B	L_mikrobus_gpioInit156
; bus end address is: 0 (R0)
;clicker_2_MSP432.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit158:
0x2BA4	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2BA8	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2BAC	0xF7FFFB2C  BL	clicker_2_MSP432__gpioInit_1+0
0x2BB0	0xE01F    B	L_end_mikrobus_gpioInit
;clicker_2_MSP432.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit159:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x2BB2	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2BB6	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2BBA	0xF7FFFA3D  BL	clicker_2_MSP432__gpioInit_2+0
0x2BBE	0xE018    B	L_end_mikrobus_gpioInit
;clicker_2_MSP432.c, 173 :: 		case _MIKROBUS3 : return _gpioInit_3(pin, direction);
L_mikrobus_gpioInit160:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x2BC0	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2BC4	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2BC8	0xF7FFF914  BL	clicker_2_MSP432__gpioInit_3+0
0x2BCC	0xE011    B	L_end_mikrobus_gpioInit
;clicker_2_MSP432.c, 176 :: 		case _MIKROBUS4 : return _gpioInit_4(pin, direction);
L_mikrobus_gpioInit161:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x2BCE	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x2BD2	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x2BD6	0xF7FFF829  BL	clicker_2_MSP432__gpioInit_4+0
0x2BDA	0xE00A    B	L_end_mikrobus_gpioInit
;clicker_2_MSP432.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit162:
0x2BDC	0x2001    MOVS	R0, #1
0x2BDE	0xE008    B	L_end_mikrobus_gpioInit
;clicker_2_MSP432.c, 185 :: 		}
L_mikrobus_gpioInit156:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x2BE0	0x2800    CMP	R0, #0
0x2BE2	0xD0DF    BEQ	L_mikrobus_gpioInit158
0x2BE4	0x2801    CMP	R0, #1
0x2BE6	0xD0E4    BEQ	L_mikrobus_gpioInit159
0x2BE8	0x2802    CMP	R0, #2
0x2BEA	0xD0E9    BEQ	L_mikrobus_gpioInit160
0x2BEC	0x2803    CMP	R0, #3
0x2BEE	0xD0EE    BEQ	L_mikrobus_gpioInit161
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x2BF0	0xE7F4    B	L_mikrobus_gpioInit162
;clicker_2_MSP432.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x2BF2	0xF8DDE000  LDR	LR, [SP, #0]
0x2BF6	0xB001    ADD	SP, SP, #4
0x2BF8	0x4770    BX	LR
; end of _mikrobus_gpioInit
clicker_2_MSP432__gpioInit_1:
;__c2_msp432_gpio.c, 131 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2208	0xB081    SUB	SP, SP, #4
0x220A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__c2_msp432_gpio.c, 133 :: 		switch( pin )
0x220E	0xE0A9    B	L_clicker_2_MSP432__gpioInit_10
; pin end address is: 0 (R0)
;__c2_msp432_gpio.c, 135 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_0); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_0); break;
L_clicker_2_MSP432__gpioInit_12:
0x2210	0x2901    CMP	R1, #1
0x2212	0xD105    BNE	L_clicker_2_MSP432__gpioInit_13
; dir end address is: 4 (R1)
0x2214	0xF2400101  MOVW	R1, #1
0x2218	0x4865    LDR	R0, [PC, #404]
0x221A	0xF7FFFC15  BL	_GPIO_Digital_Input+0
0x221E	0xE004    B	L_clicker_2_MSP432__gpioInit_14
L_clicker_2_MSP432__gpioInit_13:
0x2220	0xF2400101  MOVW	R1, #1
0x2224	0x4863    LDR	R0, [PC, #396]
0x2226	0xF7FFFC41  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_14:
0x222A	0xE0BB    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 136 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P5IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P5OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_15:
; dir start address is: 4 (R1)
0x222C	0x2901    CMP	R1, #1
0x222E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_16
; dir end address is: 4 (R1)
0x2230	0xF2400140  MOVW	R1, #64
0x2234	0x4860    LDR	R0, [PC, #384]
0x2236	0xF7FFFC07  BL	_GPIO_Digital_Input+0
0x223A	0xE004    B	L_clicker_2_MSP432__gpioInit_17
L_clicker_2_MSP432__gpioInit_16:
0x223C	0xF2400140  MOVW	R1, #64
0x2240	0x485E    LDR	R0, [PC, #376]
0x2242	0xF7FFFC33  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_17:
0x2246	0xE0AD    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 137 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P5IN, _GPIO_PINMASK_0); else GPIO_Digital_Output(&DIO_P5OUT, _GPIO_PINMASK_0); break;
L_clicker_2_MSP432__gpioInit_18:
; dir start address is: 4 (R1)
0x2248	0x2901    CMP	R1, #1
0x224A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_19
; dir end address is: 4 (R1)
0x224C	0xF2400101  MOVW	R1, #1
0x2250	0x4859    LDR	R0, [PC, #356]
0x2252	0xF7FFFBF9  BL	_GPIO_Digital_Input+0
0x2256	0xE004    B	L_clicker_2_MSP432__gpioInit_110
L_clicker_2_MSP432__gpioInit_19:
0x2258	0xF2400101  MOVW	R1, #1
0x225C	0x4857    LDR	R0, [PC, #348]
0x225E	0xF7FFFC25  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_110:
0x2262	0xE09F    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 138 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_111:
; dir start address is: 4 (R1)
0x2264	0x2901    CMP	R1, #1
0x2266	0xD105    BNE	L_clicker_2_MSP432__gpioInit_112
; dir end address is: 4 (R1)
0x2268	0xF2400120  MOVW	R1, #32
0x226C	0x4854    LDR	R0, [PC, #336]
0x226E	0xF7FFFBEB  BL	_GPIO_Digital_Input+0
0x2272	0xE004    B	L_clicker_2_MSP432__gpioInit_113
L_clicker_2_MSP432__gpioInit_112:
0x2274	0xF2400120  MOVW	R1, #32
0x2278	0x4852    LDR	R0, [PC, #328]
0x227A	0xF7FFFC17  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_113:
0x227E	0xE091    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 139 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_114:
; dir start address is: 4 (R1)
0x2280	0x2901    CMP	R1, #1
0x2282	0xD105    BNE	L_clicker_2_MSP432__gpioInit_115
; dir end address is: 4 (R1)
0x2284	0xF2400180  MOVW	R1, #128
0x2288	0x484D    LDR	R0, [PC, #308]
0x228A	0xF7FFFBDD  BL	_GPIO_Digital_Input+0
0x228E	0xE004    B	L_clicker_2_MSP432__gpioInit_116
L_clicker_2_MSP432__gpioInit_115:
0x2290	0xF2400180  MOVW	R1, #128
0x2294	0x484B    LDR	R0, [PC, #300]
0x2296	0xF7FFFC09  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_116:
0x229A	0xE083    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 140 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_117:
; dir start address is: 4 (R1)
0x229C	0x2901    CMP	R1, #1
0x229E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_118
; dir end address is: 4 (R1)
0x22A0	0xF2400140  MOVW	R1, #64
0x22A4	0x4846    LDR	R0, [PC, #280]
0x22A6	0xF7FFFBCF  BL	_GPIO_Digital_Input+0
0x22AA	0xE004    B	L_clicker_2_MSP432__gpioInit_119
L_clicker_2_MSP432__gpioInit_118:
0x22AC	0xF2400140  MOVW	R1, #64
0x22B0	0x4844    LDR	R0, [PC, #272]
0x22B2	0xF7FFFBFB  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_119:
0x22B6	0xE075    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 141 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_120:
; dir start address is: 4 (R1)
0x22B8	0x2901    CMP	R1, #1
0x22BA	0xD105    BNE	L_clicker_2_MSP432__gpioInit_121
; dir end address is: 4 (R1)
0x22BC	0xF2400180  MOVW	R1, #128
0x22C0	0x4841    LDR	R0, [PC, #260]
0x22C2	0xF7FFFBC1  BL	_GPIO_Digital_Input+0
0x22C6	0xE004    B	L_clicker_2_MSP432__gpioInit_122
L_clicker_2_MSP432__gpioInit_121:
0x22C8	0xF2400180  MOVW	R1, #128
0x22CC	0x483F    LDR	R0, [PC, #252]
0x22CE	0xF7FFFBED  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_122:
0x22D2	0xE067    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 142 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_4); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_4); break;
L_clicker_2_MSP432__gpioInit_123:
; dir start address is: 4 (R1)
0x22D4	0x2901    CMP	R1, #1
0x22D6	0xD105    BNE	L_clicker_2_MSP432__gpioInit_124
; dir end address is: 4 (R1)
0x22D8	0xF2400110  MOVW	R1, #16
0x22DC	0x483A    LDR	R0, [PC, #232]
0x22DE	0xF7FFFBB3  BL	_GPIO_Digital_Input+0
0x22E2	0xE004    B	L_clicker_2_MSP432__gpioInit_125
L_clicker_2_MSP432__gpioInit_124:
0x22E4	0xF2400110  MOVW	R1, #16
0x22E8	0x4838    LDR	R0, [PC, #224]
0x22EA	0xF7FFFBDF  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_125:
0x22EE	0xE059    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 143 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_2); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_2); break;
L_clicker_2_MSP432__gpioInit_126:
; dir start address is: 4 (R1)
0x22F0	0x2901    CMP	R1, #1
0x22F2	0xD105    BNE	L_clicker_2_MSP432__gpioInit_127
; dir end address is: 4 (R1)
0x22F4	0xF2400104  MOVW	R1, #4
0x22F8	0x4835    LDR	R0, [PC, #212]
0x22FA	0xF7FFFBA5  BL	_GPIO_Digital_Input+0
0x22FE	0xE004    B	L_clicker_2_MSP432__gpioInit_128
L_clicker_2_MSP432__gpioInit_127:
0x2300	0xF2400104  MOVW	R1, #4
0x2304	0x4833    LDR	R0, [PC, #204]
0x2306	0xF7FFFBD1  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_128:
0x230A	0xE04B    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 144 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_129:
; dir start address is: 4 (R1)
0x230C	0x2901    CMP	R1, #1
0x230E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_130
; dir end address is: 4 (R1)
0x2310	0xF2400108  MOVW	R1, #8
0x2314	0x482E    LDR	R0, [PC, #184]
0x2316	0xF7FFFB97  BL	_GPIO_Digital_Input+0
0x231A	0xE004    B	L_clicker_2_MSP432__gpioInit_131
L_clicker_2_MSP432__gpioInit_130:
0x231C	0xF2400108  MOVW	R1, #8
0x2320	0x482C    LDR	R0, [PC, #176]
0x2322	0xF7FFFBC3  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_131:
0x2326	0xE03D    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 145 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_132:
; dir start address is: 4 (R1)
0x2328	0x2901    CMP	R1, #1
0x232A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_133
; dir end address is: 4 (R1)
0x232C	0xF2400120  MOVW	R1, #32
0x2330	0x481F    LDR	R0, [PC, #124]
0x2332	0xF7FFFB89  BL	_GPIO_Digital_Input+0
0x2336	0xE004    B	L_clicker_2_MSP432__gpioInit_134
L_clicker_2_MSP432__gpioInit_133:
0x2338	0xF2400120  MOVW	R1, #32
0x233C	0x481D    LDR	R0, [PC, #116]
0x233E	0xF7FFFBB5  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_134:
0x2342	0xE02F    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 146 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_4); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_4); break;
L_clicker_2_MSP432__gpioInit_135:
; dir start address is: 4 (R1)
0x2344	0x2901    CMP	R1, #1
0x2346	0xD105    BNE	L_clicker_2_MSP432__gpioInit_136
; dir end address is: 4 (R1)
0x2348	0xF2400110  MOVW	R1, #16
0x234C	0x4818    LDR	R0, [PC, #96]
0x234E	0xF7FFFB7B  BL	_GPIO_Digital_Input+0
0x2352	0xE004    B	L_clicker_2_MSP432__gpioInit_137
L_clicker_2_MSP432__gpioInit_136:
0x2354	0xF2400110  MOVW	R1, #16
0x2358	0x4816    LDR	R0, [PC, #88]
0x235A	0xF7FFFBA7  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_137:
0x235E	0xE021    B	L_clicker_2_MSP432__gpioInit_11
;__c2_msp432_gpio.c, 147 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_clicker_2_MSP432__gpioInit_138:
0x2360	0x2001    MOVS	R0, #1
0x2362	0xE020    B	L_end__gpioInit_1
;__c2_msp432_gpio.c, 148 :: 		}
L_clicker_2_MSP432__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2364	0x2800    CMP	R0, #0
0x2366	0xF43FAF53  BEQ	L_clicker_2_MSP432__gpioInit_12
0x236A	0x2801    CMP	R0, #1
0x236C	0xF43FAF5E  BEQ	L_clicker_2_MSP432__gpioInit_15
0x2370	0x2802    CMP	R0, #2
0x2372	0xF43FAF69  BEQ	L_clicker_2_MSP432__gpioInit_18
0x2376	0x2803    CMP	R0, #3
0x2378	0xF43FAF74  BEQ	L_clicker_2_MSP432__gpioInit_111
0x237C	0x2804    CMP	R0, #4
0x237E	0xF43FAF7F  BEQ	L_clicker_2_MSP432__gpioInit_114
0x2382	0x2805    CMP	R0, #5
0x2384	0xF43FAF8A  BEQ	L_clicker_2_MSP432__gpioInit_117
0x2388	0x2806    CMP	R0, #6
0x238A	0xF43FAF95  BEQ	L_clicker_2_MSP432__gpioInit_120
0x238E	0x2807    CMP	R0, #7
0x2390	0xD0A0    BEQ	L_clicker_2_MSP432__gpioInit_123
0x2392	0x2808    CMP	R0, #8
0x2394	0xD0AC    BEQ	L_clicker_2_MSP432__gpioInit_126
0x2396	0x2809    CMP	R0, #9
0x2398	0xD0B8    BEQ	L_clicker_2_MSP432__gpioInit_129
0x239A	0x280A    CMP	R0, #10
0x239C	0xD0C4    BEQ	L_clicker_2_MSP432__gpioInit_132
0x239E	0x280B    CMP	R0, #11
0x23A0	0xD0D0    BEQ	L_clicker_2_MSP432__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x23A2	0xE7DD    B	L_clicker_2_MSP432__gpioInit_138
L_clicker_2_MSP432__gpioInit_11:
;__c2_msp432_gpio.c, 149 :: 		return _MIKROBUS_OK;
0x23A4	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_gpio.c, 150 :: 		}
L_end__gpioInit_1:
0x23A6	0xF8DDE000  LDR	LR, [SP, #0]
0x23AA	0xB001    ADD	SP, SP, #4
0x23AC	0x4770    BX	LR
0x23AE	0xBF00    NOP
0x23B0	0x4C414000  	DIO_P6IN+0
0x23B4	0x4C434000  	DIO_P6OUT+0
0x23B8	0x4C404000  	DIO_P5IN+0
0x23BC	0x4C424000  	DIO_P5OUT+0
0x23C0	0x4C004000  	DIO_P1IN+0
0x23C4	0x4C024000  	DIO_P1OUT+0
0x23C8	0x4C014000  	DIO_P2IN+0
0x23CC	0x4C034000  	DIO_P2OUT+0
0x23D0	0x4C204000  	DIO_P3IN+0
0x23D4	0x4C224000  	DIO_P3OUT+0
; end of clicker_2_MSP432__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_MSP.c, 234 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1A48	0xB081    SUB	SP, SP, #4
0x1A4A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_MSP.c, 235 :: 		
0x1A4E	0x2400    MOVS	R4, #0
0x1A50	0xB224    SXTH	R4, R4
0x1A52	0xF2400340  MOVW	R3, __GPIO_CFG_INT_DISABLE
0x1A56	0xB21B    SXTH	R3, R3
0x1A58	0xF2400204  MOVW	R2, __GPIO_CFG_DRIVE_REGULAR
0x1A5C	0xB212    SXTH	R2, R2
0x1A5E	0xEA420303  ORR	R3, R2, R3, LSL #0
0x1A62	0xB21B    SXTH	R3, R3
0x1A64	0xF2400201  MOVW	R2, __GPIO_CFG_RESISTOR_DISABLE
0x1A68	0xB212    SXTH	R2, R2
0x1A6A	0xEA430202  ORR	R2, R3, R2, LSL #0
0x1A6E	0xB293    UXTH	R3, R2
0x1A70	0x2200    MOVS	R2, __GPIO_DIR_INPUT
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1A72	0xB410    PUSH	(R4)
0x1A74	0xF7FFFCEC  BL	_GPIO_Config+0
0x1A78	0xB001    ADD	SP, SP, #4
;__Lib_GPIO_MSP.c, 236 :: 		
L_end_GPIO_Digital_Input:
0x1A7A	0xF8DDE000  LDR	LR, [SP, #0]
0x1A7E	0xB001    ADD	SP, SP, #4
0x1A80	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_MSP.c, 112 :: 		
; config start address is: 12 (R3)
; dir start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1450	0xB083    SUB	SP, SP, #12
0x1452	0xF8CDE000  STR	LR, [SP, #0]
0x1456	0xB28D    UXTH	R5, R1
0x1458	0x4601    MOV	R1, R0
0x145A	0xB2D0    UXTB	R0, R2
; config end address is: 12 (R3)
; dir end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 4 (R1)
; pin_mask start address is: 20 (R5)
; dir start address is: 0 (R0)
; config start address is: 12 (R3)
; pin_code start address is: 8 (R2)
0x145C	0xF9BD200C  LDRSH	R2, [SP, #12]
;__Lib_GPIO_MSP.c, 117 :: 		
0x1460	0xF0010401  AND	R4, R1, #1
0x1464	0xB114    CBZ	R4, L__GPIO_Config32
;__Lib_GPIO_MSP.c, 118 :: 		
0x1466	0x022F    LSLS	R7, R5, #8
0x1468	0xB2BF    UXTH	R7, R7
; pin_mask end address is: 20 (R5)
; pin_mask start address is: 28 (R7)
; pin_mask end address is: 28 (R7)
0x146A	0xE000    B	L_GPIO_Config0
L__GPIO_Config32:
;__Lib_GPIO_MSP.c, 117 :: 		
0x146C	0xB2AF    UXTH	R7, R5
;__Lib_GPIO_MSP.c, 118 :: 		
L_GPIO_Config0:
;__Lib_GPIO_MSP.c, 120 :: 		
; pin_mask start address is: 28 (R7)
0x146E	0x4C8F    LDR	R4, [PC, #572]
0x1470	0x1B0C    SUB	R4, R1, R4
; port end address is: 4 (R1)
0x1472	0x0964    LSRS	R4, R4, #5
0x1474	0x0165    LSLS	R5, R4, #5
0x1476	0x4C8D    LDR	R4, [PC, #564]
0x1478	0x1964    ADDS	R4, R4, R5
; port start address is: 32 (R8)
0x147A	0x46A0    MOV	R8, R4
;__Lib_GPIO_MSP.c, 123 :: 		
0x147C	0x4C8C    LDR	R4, [PC, #560]
0x147E	0x42A0    CMP	R0, R4
0x1480	0xD107    BNE	L_GPIO_Config1
; dir end address is: 0 (R0)
;__Lib_GPIO_MSP.c, 124 :: 		
0x1482	0xF1080604  ADD	R6, R8, #4
0x1486	0x43FD    MVN	R5, R7
0x1488	0xB2AD    UXTH	R5, R5
0x148A	0x8834    LDRH	R4, [R6, #0]
0x148C	0x402C    ANDS	R4, R5
0x148E	0x8034    STRH	R4, [R6, #0]
0x1490	0xE007    B	L_GPIO_Config2
L_GPIO_Config1:
;__Lib_GPIO_MSP.c, 125 :: 		
; dir start address is: 0 (R0)
0x1492	0x4C88    LDR	R4, [PC, #544]
0x1494	0x42A0    CMP	R0, R4
0x1496	0xD104    BNE	L_GPIO_Config3
; dir end address is: 0 (R0)
;__Lib_GPIO_MSP.c, 126 :: 		
0x1498	0xF1080504  ADD	R5, R8, #4
0x149C	0x882C    LDRH	R4, [R5, #0]
0x149E	0x433C    ORRS	R4, R7
0x14A0	0x802C    STRH	R4, [R5, #0]
L_GPIO_Config3:
L_GPIO_Config2:
;__Lib_GPIO_MSP.c, 128 :: 		
0x14A2	0xF2400401  MOVW	R4, __GPIO_CFG_RESISTOR_DISABLE
0x14A6	0xEA030404  AND	R4, R3, R4, LSL #0
0x14AA	0xB2A4    UXTH	R4, R4
0x14AC	0xB13C    CBZ	R4, L_GPIO_Config4
;__Lib_GPIO_MSP.c, 129 :: 		
0x14AE	0xF1080606  ADD	R6, R8, #6
0x14B2	0x43FD    MVN	R5, R7
0x14B4	0xB2AD    UXTH	R5, R5
0x14B6	0x8834    LDRH	R4, [R6, #0]
0x14B8	0x402C    ANDS	R4, R5
0x14BA	0x8034    STRH	R4, [R6, #0]
0x14BC	0xE00A    B	L_GPIO_Config5
L_GPIO_Config4:
;__Lib_GPIO_MSP.c, 130 :: 		
0x14BE	0xF2400402  MOVW	R4, __GPIO_CFG_RESISTOR_ENABLE
0x14C2	0xEA030404  AND	R4, R3, R4, LSL #0
0x14C6	0xB2A4    UXTH	R4, R4
0x14C8	0xB124    CBZ	R4, L_GPIO_Config6
;__Lib_GPIO_MSP.c, 131 :: 		
0x14CA	0xF1080506  ADD	R5, R8, #6
0x14CE	0x882C    LDRH	R4, [R5, #0]
0x14D0	0x433C    ORRS	R4, R7
0x14D2	0x802C    STRH	R4, [R5, #0]
L_GPIO_Config6:
L_GPIO_Config5:
;__Lib_GPIO_MSP.c, 133 :: 		
0x14D4	0xF2400404  MOVW	R4, __GPIO_CFG_DRIVE_REGULAR
0x14D8	0xEA030404  AND	R4, R3, R4, LSL #0
0x14DC	0xB2A4    UXTH	R4, R4
0x14DE	0xB13C    CBZ	R4, L_GPIO_Config7
;__Lib_GPIO_MSP.c, 134 :: 		
0x14E0	0xF1080608  ADD	R6, R8, #8
0x14E4	0x43FD    MVN	R5, R7
0x14E6	0xB2AD    UXTH	R5, R5
0x14E8	0x8834    LDRH	R4, [R6, #0]
0x14EA	0x402C    ANDS	R4, R5
0x14EC	0x8034    STRH	R4, [R6, #0]
0x14EE	0xE00A    B	L_GPIO_Config8
L_GPIO_Config7:
;__Lib_GPIO_MSP.c, 135 :: 		
0x14F0	0xF2400408  MOVW	R4, __GPIO_CFG_DRIVE_HIGH
0x14F4	0xEA030404  AND	R4, R3, R4, LSL #0
0x14F8	0xB2A4    UXTH	R4, R4
0x14FA	0xB124    CBZ	R4, L_GPIO_Config9
;__Lib_GPIO_MSP.c, 136 :: 		
0x14FC	0xF1080508  ADD	R5, R8, #8
0x1500	0x882C    LDRH	R4, [R5, #0]
0x1502	0x433C    ORRS	R4, R7
0x1504	0x802C    STRH	R4, [R5, #0]
L_GPIO_Config9:
L_GPIO_Config8:
;__Lib_GPIO_MSP.c, 138 :: 		
0x1506	0xF2400410  MOVW	R4, __GPIO_CFG_INT_LOW2HIGH
0x150A	0xEA030404  AND	R4, R3, R4, LSL #0
0x150E	0xB2A4    UXTH	R4, R4
0x1510	0xB13C    CBZ	R4, L_GPIO_Config10
;__Lib_GPIO_MSP.c, 139 :: 		
0x1512	0xF1080618  ADD	R6, R8, #24
0x1516	0x43FD    MVN	R5, R7
0x1518	0xB2AD    UXTH	R5, R5
0x151A	0x8834    LDRH	R4, [R6, #0]
0x151C	0x402C    ANDS	R4, R5
0x151E	0x8034    STRH	R4, [R6, #0]
0x1520	0xE00A    B	L_GPIO_Config11
L_GPIO_Config10:
;__Lib_GPIO_MSP.c, 140 :: 		
0x1522	0xF2400420  MOVW	R4, __GPIO_CFG_INT_HIGH2LOW
0x1526	0xEA030404  AND	R4, R3, R4, LSL #0
0x152A	0xB2A4    UXTH	R4, R4
0x152C	0xB124    CBZ	R4, L_GPIO_Config12
;__Lib_GPIO_MSP.c, 141 :: 		
0x152E	0xF1080518  ADD	R5, R8, #24
0x1532	0x882C    LDRH	R4, [R5, #0]
0x1534	0x433C    ORRS	R4, R7
0x1536	0x802C    STRH	R4, [R5, #0]
L_GPIO_Config12:
L_GPIO_Config11:
;__Lib_GPIO_MSP.c, 143 :: 		
0x1538	0xF2400440  MOVW	R4, __GPIO_CFG_INT_DISABLE
0x153C	0xEA030404  AND	R4, R3, R4, LSL #0
0x1540	0xB2A4    UXTH	R4, R4
0x1542	0xB13C    CBZ	R4, L_GPIO_Config13
;__Lib_GPIO_MSP.c, 144 :: 		
0x1544	0xF108061A  ADD	R6, R8, #26
0x1548	0x43FD    MVN	R5, R7
0x154A	0xB2AD    UXTH	R5, R5
0x154C	0x8834    LDRH	R4, [R6, #0]
0x154E	0x402C    ANDS	R4, R5
0x1550	0x8034    STRH	R4, [R6, #0]
0x1552	0xE00A    B	L_GPIO_Config14
L_GPIO_Config13:
;__Lib_GPIO_MSP.c, 145 :: 		
0x1554	0xF2400480  MOVW	R4, __GPIO_CFG_INT_ENABLE
0x1558	0xEA030404  AND	R4, R3, R4, LSL #0
0x155C	0xB2A4    UXTH	R4, R4
0x155E	0xB124    CBZ	R4, L_GPIO_Config15
;__Lib_GPIO_MSP.c, 146 :: 		
0x1560	0xF108051A  ADD	R5, R8, #26
0x1564	0x882C    LDRH	R4, [R5, #0]
0x1566	0x433C    ORRS	R4, R7
0x1568	0x802C    STRH	R4, [R5, #0]
L_GPIO_Config15:
L_GPIO_Config14:
;__Lib_GPIO_MSP.c, 148 :: 		
0x156A	0xF4037480  AND	R4, R3, #256
0x156E	0xB2A4    UXTH	R4, R4
0x1570	0xB97C    CBNZ	R4, L_GPIO_Config16
; pin_code end address is: 8 (R2)
; config end address is: 12 (R3)
;__Lib_GPIO_MSP.c, 150 :: 		
0x1572	0xF108060A  ADD	R6, R8, #10
0x1576	0x43FD    MVN	R5, R7
0x1578	0xB2AD    UXTH	R5, R5
0x157A	0x8834    LDRH	R4, [R6, #0]
0x157C	0x402C    ANDS	R4, R5
0x157E	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 151 :: 		
0x1580	0xF108060C  ADD	R6, R8, #12
; port end address is: 32 (R8)
0x1584	0x43FD    MVN	R5, R7
0x1586	0xB2AD    UXTH	R5, R5
; pin_mask end address is: 28 (R7)
0x1588	0x8834    LDRH	R4, [R6, #0]
0x158A	0x402C    ANDS	R4, R5
0x158C	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 152 :: 		
0x158E	0x2000    MOVS	R0, #0
0x1590	0xE087    B	L_end_GPIO_Config
;__Lib_GPIO_MSP.c, 153 :: 		
L_GPIO_Config16:
;__Lib_GPIO_MSP.c, 155 :: 		
; config start address is: 12 (R3)
; pin_code start address is: 8 (R2)
; port start address is: 32 (R8)
; pin_mask start address is: 28 (R7)
0x1592	0x2A1F    CMP	R2, #31
0x1594	0xDD01    BLE	L_GPIO_Config17
; pin_mask end address is: 28 (R7)
; port end address is: 32 (R8)
; pin_code end address is: 8 (R2)
; config end address is: 12 (R3)
;__Lib_GPIO_MSP.c, 156 :: 		
0x1596	0x2001    MOVS	R0, #1
0x1598	0xE083    B	L_end_GPIO_Config
L_GPIO_Config17:
;__Lib_GPIO_MSP.c, 160 :: 		
; config start address is: 12 (R3)
; pin_code start address is: 8 (R2)
; port start address is: 32 (R8)
; pin_mask start address is: 28 (R7)
0x159A	0xF7FFFD0D  BL	__Lib_GPIO_MSP_GPIO_PMAP_Unlock+0
;__Lib_GPIO_MSP.c, 161 :: 		
; i start address is: 0 (R0)
0x159E	0x2000    MOVS	R0, #0
; pin_mask end address is: 28 (R7)
; port end address is: 32 (R8)
; i end address is: 0 (R0)
0x15A0	0xB2B9    UXTH	R1, R7
0x15A2	0xB2C7    UXTB	R7, R0
0x15A4	0x4640    MOV	R0, R8
L_GPIO_Config18:
; i start address is: 28 (R7)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
; port start address is: 0 (R0)
; port end address is: 0 (R0)
; pin_mask start address is: 4 (R1)
; pin_mask end address is: 4 (R1)
; pin_code start address is: 8 (R2)
; pin_code end address is: 8 (R2)
; config start address is: 12 (R3)
; config end address is: 12 (R3)
0x15A6	0x2F10    CMP	R7, #16
0x15A8	0xF080807A  BCS	L_GPIO_Config19
; port end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
; pin_code end address is: 8 (R2)
; config end address is: 12 (R3)
;__Lib_GPIO_MSP.c, 162 :: 		
; config start address is: 12 (R3)
; pin_code start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x15AC	0xFA21F407  LSR	R4, R1, R7
0x15B0	0xB2A4    UXTH	R4, R4
0x15B2	0xF0040401  AND	R4, R4, #1
0x15B6	0xB2A4    UXTH	R4, R4
0x15B8	0x2C00    CMP	R4, #0
0x15BA	0xF000806E  BEQ	L_GPIO_Config21
;__Lib_GPIO_MSP.c, 165 :: 		
0x15BE	0xF200060A  ADDW	R6, R0, #10
0x15C2	0x43CD    MVN	R5, R1
0x15C4	0xB2AD    UXTH	R5, R5
0x15C6	0x8834    LDRH	R4, [R6, #0]
0x15C8	0x402C    ANDS	R4, R5
0x15CA	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 166 :: 		
0x15CC	0xF200060C  ADDW	R6, R0, #12
0x15D0	0x43CD    MVN	R5, R1
0x15D2	0xB2AD    UXTH	R5, R5
0x15D4	0x8834    LDRH	R4, [R6, #0]
0x15D6	0x402C    ANDS	R4, R5
0x15D8	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 168 :: 		
0x15DA	0xF4036480  AND	R4, R3, #1024
0x15DE	0xB2A4    UXTH	R4, R4
0x15E0	0xB12C    CBZ	R4, L_GPIO_Config22
;__Lib_GPIO_MSP.c, 169 :: 		
0x15E2	0xF8AD1006  STRH	R1, [SP, #6]
;__Lib_GPIO_MSP.c, 170 :: 		
0x15E6	0x2400    MOVS	R4, #0
0x15E8	0xF8AD4008  STRH	R4, [SP, #8]
;__Lib_GPIO_MSP.c, 171 :: 		
0x15EC	0xE00D    B	L_GPIO_Config23
L_GPIO_Config22:
0x15EE	0xF4036400  AND	R4, R3, #2048
0x15F2	0xB2A4    UXTH	R4, R4
0x15F4	0xB12C    CBZ	R4, L_GPIO_Config24
;__Lib_GPIO_MSP.c, 172 :: 		
0x15F6	0x2400    MOVS	R4, #0
0x15F8	0xF8AD4006  STRH	R4, [SP, #6]
;__Lib_GPIO_MSP.c, 173 :: 		
0x15FC	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_GPIO_MSP.c, 174 :: 		
0x1600	0xE003    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_MSP.c, 175 :: 		
0x1602	0xF8AD1006  STRH	R1, [SP, #6]
;__Lib_GPIO_MSP.c, 176 :: 		
0x1606	0xF8AD1008  STRH	R1, [SP, #8]
;__Lib_GPIO_MSP.c, 177 :: 		
L_GPIO_Config25:
L_GPIO_Config23:
;__Lib_GPIO_MSP.c, 179 :: 		
0x160A	0xF200060A  ADDW	R6, R0, #10
0x160E	0x8835    LDRH	R5, [R6, #0]
0x1610	0xF8BD4006  LDRH	R4, [SP, #6]
0x1614	0xEA450404  ORR	R4, R5, R4, LSL #0
0x1618	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 180 :: 		
0x161A	0xF200060C  ADDW	R6, R0, #12
0x161E	0x8835    LDRH	R5, [R6, #0]
0x1620	0xF8BD4008  LDRH	R4, [SP, #8]
0x1624	0xEA450404  ORR	R4, R5, R4, LSL #0
0x1628	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 183 :: 		
0x162A	0x4C23    LDR	R4, [PC, #140]
0x162C	0x1B04    SUB	R4, R0, R4
;__Lib_GPIO_MSP.c, 184 :: 		
0x162E	0x0964    LSRS	R4, R4, #5
0x1630	0xF8AD4004  STRH	R4, [SP, #4]
;__Lib_GPIO_MSP.c, 186 :: 		
0x1634	0x4C21    LDR	R4, [PC, #132]
0x1636	0x42A2    CMP	R2, R4
0x1638	0xD018    BEQ	L_GPIO_Config26
;__Lib_GPIO_MSP.c, 187 :: 		
0x163A	0xF8BD4004  LDRH	R4, [SP, #4]
0x163E	0x00E4    LSLS	R4, R4, #3
0x1640	0xB2A4    UXTH	R4, R4
0x1642	0x0065    LSLS	R5, R4, #1
0x1644	0x4C1E    LDR	R4, [PC, #120]
0x1646	0x1965    ADDS	R5, R4, R5
0x1648	0x087C    LSRS	R4, R7, #1
0x164A	0xB2E4    UXTB	R4, R4
0x164C	0x0064    LSLS	R4, R4, #1
0x164E	0x192E    ADDS	R6, R5, R4
0x1650	0xF0070401  AND	R4, R7, #1
0x1654	0xB2E4    UXTB	R4, R4
0x1656	0x00E5    LSLS	R5, R4, #3
0x1658	0xB22D    SXTH	R5, R5
0x165A	0xF24004FF  MOVW	R4, #255
0x165E	0x40AC    LSLS	R4, R5
0x1660	0xB2A4    UXTH	R4, R4
0x1662	0x43E5    MVN	R5, R4
0x1664	0xB2AD    UXTH	R5, R5
0x1666	0x8834    LDRH	R4, [R6, #0]
0x1668	0x402C    ANDS	R4, R5
0x166A	0x8034    STRH	R4, [R6, #0]
L_GPIO_Config26:
;__Lib_GPIO_MSP.c, 189 :: 		
0x166C	0xF8BD4004  LDRH	R4, [SP, #4]
0x1670	0x00E4    LSLS	R4, R4, #3
0x1672	0xB2A4    UXTH	R4, R4
0x1674	0x0065    LSLS	R5, R4, #1
0x1676	0x4C12    LDR	R4, [PC, #72]
0x1678	0x1965    ADDS	R5, R4, R5
0x167A	0x087C    LSRS	R4, R7, #1
0x167C	0xB2E4    UXTB	R4, R4
0x167E	0x0064    LSLS	R4, R4, #1
0x1680	0x192E    ADDS	R6, R5, R4
0x1682	0xF0070401  AND	R4, R7, #1
0x1686	0xB2E4    UXTB	R4, R4
0x1688	0x00E5    LSLS	R5, R4, #3
0x168A	0xB22D    SXTH	R5, R5
0x168C	0xB294    UXTH	R4, R2
0x168E	0xFA04F505  LSL	R5, R4, R5
0x1692	0xB2AD    UXTH	R5, R5
0x1694	0x8834    LDRH	R4, [R6, #0]
0x1696	0x432C    ORRS	R4, R5
0x1698	0x8034    STRH	R4, [R6, #0]
;__Lib_GPIO_MSP.c, 190 :: 		
L_GPIO_Config21:
;__Lib_GPIO_MSP.c, 161 :: 		
0x169A	0x1C7F    ADDS	R7, R7, #1
0x169C	0xB2FF    UXTB	R7, R7
;__Lib_GPIO_MSP.c, 191 :: 		
; port end address is: 0 (R0)
; pin_mask end address is: 4 (R1)
; pin_code end address is: 8 (R2)
; config end address is: 12 (R3)
; i end address is: 28 (R7)
0x169E	0xE782    B	L_GPIO_Config18
L_GPIO_Config19:
;__Lib_GPIO_MSP.c, 193 :: 		
0x16A0	0x2000    MOVS	R0, #0
;__Lib_GPIO_MSP.c, 194 :: 		
L_end_GPIO_Config:
0x16A2	0xF8DDE000  LDR	LR, [SP, #0]
0x16A6	0xB003    ADD	SP, SP, #12
0x16A8	0x4770    BX	LR
0x16AA	0xBF00    NOP
0x16AC	0x4C004000  	#1073761280
0x16B0	0x00000000  	__GPIO_DIR_INPUT
0x16B4	0x00010000  	__GPIO_DIR_OUTPUT
0x16B8	0x4C004000  	DIO_PAIN+0
0x16BC	0x00000000  	__GPIO_PM_NONE
0x16C0	0x50084000  	PMAP_P1MAP01+0
; end of _GPIO_Config
__Lib_GPIO_MSP_GPIO_PMAP_Unlock:
;__Lib_GPIO_MSP.c, 80 :: 		
0x0FB8	0xB081    SUB	SP, SP, #4
;__Lib_GPIO_MSP.c, 82 :: 		
0x0FBA	0xF6425152  MOVW	R1, #11602
0x0FBE	0x4803    LDR	R0, [PC, #12]
0x0FC0	0x8001    STRH	R1, [R0, #0]
;__Lib_GPIO_MSP.c, 83 :: 		
0x0FC2	0x2102    MOVS	R1, #2
0x0FC4	0x4802    LDR	R0, [PC, #8]
0x0FC6	0x8001    STRH	R1, [R0, #0]
;__Lib_GPIO_MSP.c, 84 :: 		
L_end_GPIO_PMAP_Unlock:
0x0FC8	0xB001    ADD	SP, SP, #4
0x0FCA	0x4770    BX	LR
0x0FCC	0x50004000  	PMAP_PMAPKEYID+0
0x0FD0	0x50024000  	PMAP_PMAPCTL+0
; end of __Lib_GPIO_MSP_GPIO_PMAP_Unlock
_GPIO_Digital_Output:
;__Lib_GPIO_MSP.c, 223 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1AAC	0xB081    SUB	SP, SP, #4
0x1AAE	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_MSP.c, 224 :: 		
0x1AB2	0x2400    MOVS	R4, #0
0x1AB4	0xB224    SXTH	R4, R4
0x1AB6	0xF2400340  MOVW	R3, __GPIO_CFG_INT_DISABLE
0x1ABA	0xB21B    SXTH	R3, R3
0x1ABC	0xF2400204  MOVW	R2, __GPIO_CFG_DRIVE_REGULAR
0x1AC0	0xB212    SXTH	R2, R2
0x1AC2	0xEA420303  ORR	R3, R2, R3, LSL #0
0x1AC6	0xB21B    SXTH	R3, R3
0x1AC8	0xF2400201  MOVW	R2, __GPIO_CFG_RESISTOR_DISABLE
0x1ACC	0xB212    SXTH	R2, R2
0x1ACE	0xEA430202  ORR	R2, R3, R2, LSL #0
0x1AD2	0xB293    UXTH	R3, R2
0x1AD4	0x2201    MOVS	R2, __GPIO_DIR_OUTPUT
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1AD6	0xB410    PUSH	(R4)
0x1AD8	0xF7FFFCBA  BL	_GPIO_Config+0
0x1ADC	0xB001    ADD	SP, SP, #4
;__Lib_GPIO_MSP.c, 225 :: 		
L_end_GPIO_Digital_Output:
0x1ADE	0xF8DDE000  LDR	LR, [SP, #0]
0x1AE2	0xB001    ADD	SP, SP, #4
0x1AE4	0x4770    BX	LR
; end of _GPIO_Digital_Output
clicker_2_MSP432__gpioInit_2:
;__c2_msp432_gpio.c, 152 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2038	0xB081    SUB	SP, SP, #4
0x203A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__c2_msp432_gpio.c, 154 :: 		switch( pin )
0x203E	0xE0A9    B	L_clicker_2_MSP432__gpioInit_239
; pin end address is: 0 (R0)
;__c2_msp432_gpio.c, 156 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P4IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P4OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_241:
0x2040	0x2901    CMP	R1, #1
0x2042	0xD105    BNE	L_clicker_2_MSP432__gpioInit_242
; dir end address is: 4 (R1)
0x2044	0xF2400108  MOVW	R1, #8
0x2048	0x4865    LDR	R0, [PC, #404]
0x204A	0xF7FFFCFD  BL	_GPIO_Digital_Input+0
0x204E	0xE004    B	L_clicker_2_MSP432__gpioInit_243
L_clicker_2_MSP432__gpioInit_242:
0x2050	0xF2400108  MOVW	R1, #8
0x2054	0x4863    LDR	R0, [PC, #396]
0x2056	0xF7FFFD29  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_243:
0x205A	0xE0BB    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 157 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_244:
; dir start address is: 4 (R1)
0x205C	0x2901    CMP	R1, #1
0x205E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_245
; dir end address is: 4 (R1)
0x2060	0xF2400180  MOVW	R1, #128
0x2064	0x4860    LDR	R0, [PC, #384]
0x2066	0xF7FFFCEF  BL	_GPIO_Digital_Input+0
0x206A	0xE004    B	L_clicker_2_MSP432__gpioInit_246
L_clicker_2_MSP432__gpioInit_245:
0x206C	0xF2400180  MOVW	R1, #128
0x2070	0x485E    LDR	R0, [PC, #376]
0x2072	0xF7FFFD1B  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_246:
0x2076	0xE0AD    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 158 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P5IN, _GPIO_PINMASK_2); else GPIO_Digital_Output(&DIO_P5OUT, _GPIO_PINMASK_2); break;
L_clicker_2_MSP432__gpioInit_247:
; dir start address is: 4 (R1)
0x2078	0x2901    CMP	R1, #1
0x207A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_248
; dir end address is: 4 (R1)
0x207C	0xF2400104  MOVW	R1, #4
0x2080	0x485B    LDR	R0, [PC, #364]
0x2082	0xF7FFFCE1  BL	_GPIO_Digital_Input+0
0x2086	0xE004    B	L_clicker_2_MSP432__gpioInit_249
L_clicker_2_MSP432__gpioInit_248:
0x2088	0xF2400104  MOVW	R1, #4
0x208C	0x4859    LDR	R0, [PC, #356]
0x208E	0xF7FFFD0D  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_249:
0x2092	0xE09F    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 159 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_250:
; dir start address is: 4 (R1)
0x2094	0x2901    CMP	R1, #1
0x2096	0xD105    BNE	L_clicker_2_MSP432__gpioInit_251
; dir end address is: 4 (R1)
0x2098	0xF2400120  MOVW	R1, #32
0x209C	0x4856    LDR	R0, [PC, #344]
0x209E	0xF7FFFCD3  BL	_GPIO_Digital_Input+0
0x20A2	0xE004    B	L_clicker_2_MSP432__gpioInit_252
L_clicker_2_MSP432__gpioInit_251:
0x20A4	0xF2400120  MOVW	R1, #32
0x20A8	0x4854    LDR	R0, [PC, #336]
0x20AA	0xF7FFFCFF  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_252:
0x20AE	0xE091    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 160 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_253:
; dir start address is: 4 (R1)
0x20B0	0x2901    CMP	R1, #1
0x20B2	0xD105    BNE	L_clicker_2_MSP432__gpioInit_254
; dir end address is: 4 (R1)
0x20B4	0xF2400180  MOVW	R1, #128
0x20B8	0x484F    LDR	R0, [PC, #316]
0x20BA	0xF7FFFCC5  BL	_GPIO_Digital_Input+0
0x20BE	0xE004    B	L_clicker_2_MSP432__gpioInit_255
L_clicker_2_MSP432__gpioInit_254:
0x20C0	0xF2400180  MOVW	R1, #128
0x20C4	0x484D    LDR	R0, [PC, #308]
0x20C6	0xF7FFFCF1  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_255:
0x20CA	0xE083    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 161 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P1IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P1OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_256:
; dir start address is: 4 (R1)
0x20CC	0x2901    CMP	R1, #1
0x20CE	0xD105    BNE	L_clicker_2_MSP432__gpioInit_257
; dir end address is: 4 (R1)
0x20D0	0xF2400140  MOVW	R1, #64
0x20D4	0x4848    LDR	R0, [PC, #288]
0x20D6	0xF7FFFCB7  BL	_GPIO_Digital_Input+0
0x20DA	0xE004    B	L_clicker_2_MSP432__gpioInit_258
L_clicker_2_MSP432__gpioInit_257:
0x20DC	0xF2400140  MOVW	R1, #64
0x20E0	0x4846    LDR	R0, [PC, #280]
0x20E2	0xF7FFFCE3  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_258:
0x20E6	0xE075    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 162 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_259:
; dir start address is: 4 (R1)
0x20E8	0x2901    CMP	R1, #1
0x20EA	0xD105    BNE	L_clicker_2_MSP432__gpioInit_260
; dir end address is: 4 (R1)
0x20EC	0xF2400140  MOVW	R1, #64
0x20F0	0x4843    LDR	R0, [PC, #268]
0x20F2	0xF7FFFCA9  BL	_GPIO_Digital_Input+0
0x20F6	0xE004    B	L_clicker_2_MSP432__gpioInit_261
L_clicker_2_MSP432__gpioInit_260:
0x20F8	0xF2400140  MOVW	R1, #64
0x20FC	0x4841    LDR	R0, [PC, #260]
0x20FE	0xF7FFFCD5  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_261:
0x2102	0xE067    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 163 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_262:
; dir start address is: 4 (R1)
0x2104	0x2901    CMP	R1, #1
0x2106	0xD105    BNE	L_clicker_2_MSP432__gpioInit_263
; dir end address is: 4 (R1)
0x2108	0xF2400140  MOVW	R1, #64
0x210C	0x4836    LDR	R0, [PC, #216]
0x210E	0xF7FFFC9B  BL	_GPIO_Digital_Input+0
0x2112	0xE004    B	L_clicker_2_MSP432__gpioInit_264
L_clicker_2_MSP432__gpioInit_263:
0x2114	0xF2400140  MOVW	R1, #64
0x2118	0x4834    LDR	R0, [PC, #208]
0x211A	0xF7FFFCC7  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_264:
0x211E	0xE059    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 164 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_2); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_2); break;
L_clicker_2_MSP432__gpioInit_265:
; dir start address is: 4 (R1)
0x2120	0x2901    CMP	R1, #1
0x2122	0xD105    BNE	L_clicker_2_MSP432__gpioInit_266
; dir end address is: 4 (R1)
0x2124	0xF2400104  MOVW	R1, #4
0x2128	0x4835    LDR	R0, [PC, #212]
0x212A	0xF7FFFC8D  BL	_GPIO_Digital_Input+0
0x212E	0xE004    B	L_clicker_2_MSP432__gpioInit_267
L_clicker_2_MSP432__gpioInit_266:
0x2130	0xF2400104  MOVW	R1, #4
0x2134	0x4833    LDR	R0, [PC, #204]
0x2136	0xF7FFFCB9  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_267:
0x213A	0xE04B    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 165 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_268:
; dir start address is: 4 (R1)
0x213C	0x2901    CMP	R1, #1
0x213E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_269
; dir end address is: 4 (R1)
0x2140	0xF2400108  MOVW	R1, #8
0x2144	0x482E    LDR	R0, [PC, #184]
0x2146	0xF7FFFC7F  BL	_GPIO_Digital_Input+0
0x214A	0xE004    B	L_clicker_2_MSP432__gpioInit_270
L_clicker_2_MSP432__gpioInit_269:
0x214C	0xF2400108  MOVW	R1, #8
0x2150	0x482C    LDR	R0, [PC, #176]
0x2152	0xF7FFFCAB  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_270:
0x2156	0xE03D    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 166 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_271:
; dir start address is: 4 (R1)
0x2158	0x2901    CMP	R1, #1
0x215A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_272
; dir end address is: 4 (R1)
0x215C	0xF2400120  MOVW	R1, #32
0x2160	0x4821    LDR	R0, [PC, #132]
0x2162	0xF7FFFC71  BL	_GPIO_Digital_Input+0
0x2166	0xE004    B	L_clicker_2_MSP432__gpioInit_273
L_clicker_2_MSP432__gpioInit_272:
0x2168	0xF2400120  MOVW	R1, #32
0x216C	0x481F    LDR	R0, [PC, #124]
0x216E	0xF7FFFC9D  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_273:
0x2172	0xE02F    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 167 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P6IN, _GPIO_PINMASK_4); else GPIO_Digital_Output(&DIO_P6OUT, _GPIO_PINMASK_4); break;
L_clicker_2_MSP432__gpioInit_274:
; dir start address is: 4 (R1)
0x2174	0x2901    CMP	R1, #1
0x2176	0xD105    BNE	L_clicker_2_MSP432__gpioInit_275
; dir end address is: 4 (R1)
0x2178	0xF2400110  MOVW	R1, #16
0x217C	0x481A    LDR	R0, [PC, #104]
0x217E	0xF7FFFC63  BL	_GPIO_Digital_Input+0
0x2182	0xE004    B	L_clicker_2_MSP432__gpioInit_276
L_clicker_2_MSP432__gpioInit_275:
0x2184	0xF2400110  MOVW	R1, #16
0x2188	0x4818    LDR	R0, [PC, #96]
0x218A	0xF7FFFC8F  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_276:
0x218E	0xE021    B	L_clicker_2_MSP432__gpioInit_240
;__c2_msp432_gpio.c, 168 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_clicker_2_MSP432__gpioInit_277:
0x2190	0x2001    MOVS	R0, #1
0x2192	0xE020    B	L_end__gpioInit_2
;__c2_msp432_gpio.c, 169 :: 		}
L_clicker_2_MSP432__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2194	0x2800    CMP	R0, #0
0x2196	0xF43FAF53  BEQ	L_clicker_2_MSP432__gpioInit_241
0x219A	0x2801    CMP	R0, #1
0x219C	0xF43FAF5E  BEQ	L_clicker_2_MSP432__gpioInit_244
0x21A0	0x2802    CMP	R0, #2
0x21A2	0xF43FAF69  BEQ	L_clicker_2_MSP432__gpioInit_247
0x21A6	0x2803    CMP	R0, #3
0x21A8	0xF43FAF74  BEQ	L_clicker_2_MSP432__gpioInit_250
0x21AC	0x2804    CMP	R0, #4
0x21AE	0xF43FAF7F  BEQ	L_clicker_2_MSP432__gpioInit_253
0x21B2	0x2805    CMP	R0, #5
0x21B4	0xF43FAF8A  BEQ	L_clicker_2_MSP432__gpioInit_256
0x21B8	0x2806    CMP	R0, #6
0x21BA	0xF43FAF95  BEQ	L_clicker_2_MSP432__gpioInit_259
0x21BE	0x2807    CMP	R0, #7
0x21C0	0xD0A0    BEQ	L_clicker_2_MSP432__gpioInit_262
0x21C2	0x2808    CMP	R0, #8
0x21C4	0xD0AC    BEQ	L_clicker_2_MSP432__gpioInit_265
0x21C6	0x2809    CMP	R0, #9
0x21C8	0xD0B8    BEQ	L_clicker_2_MSP432__gpioInit_268
0x21CA	0x280A    CMP	R0, #10
0x21CC	0xD0C4    BEQ	L_clicker_2_MSP432__gpioInit_271
0x21CE	0x280B    CMP	R0, #11
0x21D0	0xD0D0    BEQ	L_clicker_2_MSP432__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x21D2	0xE7DD    B	L_clicker_2_MSP432__gpioInit_277
L_clicker_2_MSP432__gpioInit_240:
;__c2_msp432_gpio.c, 170 :: 		return _MIKROBUS_OK;
0x21D4	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_gpio.c, 171 :: 		}
L_end__gpioInit_2:
0x21D6	0xF8DDE000  LDR	LR, [SP, #0]
0x21DA	0xB001    ADD	SP, SP, #4
0x21DC	0x4770    BX	LR
0x21DE	0xBF00    NOP
0x21E0	0x4C214000  	DIO_P4IN+0
0x21E4	0x4C234000  	DIO_P4OUT+0
0x21E8	0x4C414000  	DIO_P6IN+0
0x21EC	0x4C434000  	DIO_P6OUT+0
0x21F0	0x4C404000  	DIO_P5IN+0
0x21F4	0x4C424000  	DIO_P5OUT+0
0x21F8	0x4C004000  	DIO_P1IN+0
0x21FC	0x4C024000  	DIO_P1OUT+0
0x2200	0x4C014000  	DIO_P2IN+0
0x2204	0x4C034000  	DIO_P2OUT+0
; end of clicker_2_MSP432__gpioInit_2
clicker_2_MSP432__gpioInit_3:
;__c2_msp432_gpio.c, 173 :: 		static T_mikrobus_ret _gpioInit_3(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1DF4	0xB081    SUB	SP, SP, #4
0x1DF6	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__c2_msp432_gpio.c, 175 :: 		switch( pin )
0x1DFA	0xE0A9    B	L_clicker_2_MSP432__gpioInit_378
; pin end address is: 0 (R0)
;__c2_msp432_gpio.c, 177 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P5IN, _GPIO_PINMASK_1); else GPIO_Digital_Output(&DIO_P5OUT, _GPIO_PINMASK_1); break;
L_clicker_2_MSP432__gpioInit_380:
0x1DFC	0x2901    CMP	R1, #1
0x1DFE	0xD105    BNE	L_clicker_2_MSP432__gpioInit_381
; dir end address is: 4 (R1)
0x1E00	0xF2400102  MOVW	R1, #2
0x1E04	0x4865    LDR	R0, [PC, #404]
0x1E06	0xF7FFFE1F  BL	_GPIO_Digital_Input+0
0x1E0A	0xE004    B	L_clicker_2_MSP432__gpioInit_382
L_clicker_2_MSP432__gpioInit_381:
0x1E0C	0xF2400102  MOVW	R1, #2
0x1E10	0x4863    LDR	R0, [PC, #396]
0x1E12	0xF7FFFE4B  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_382:
0x1E16	0xE0BB    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 178 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P4IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P4OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_383:
; dir start address is: 4 (R1)
0x1E18	0x2901    CMP	R1, #1
0x1E1A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_384
; dir end address is: 4 (R1)
0x1E1C	0xF2400180  MOVW	R1, #128
0x1E20	0x4860    LDR	R0, [PC, #384]
0x1E22	0xF7FFFE11  BL	_GPIO_Digital_Input+0
0x1E26	0xE004    B	L_clicker_2_MSP432__gpioInit_385
L_clicker_2_MSP432__gpioInit_384:
0x1E28	0xF2400180  MOVW	R1, #128
0x1E2C	0x485E    LDR	R0, [PC, #376]
0x1E2E	0xF7FFFE3D  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_385:
0x1E32	0xE0AD    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 179 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P4IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P4OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_386:
; dir start address is: 4 (R1)
0x1E34	0x2901    CMP	R1, #1
0x1E36	0xD105    BNE	L_clicker_2_MSP432__gpioInit_387
; dir end address is: 4 (R1)
0x1E38	0xF2400140  MOVW	R1, #64
0x1E3C	0x4859    LDR	R0, [PC, #356]
0x1E3E	0xF7FFFE03  BL	_GPIO_Digital_Input+0
0x1E42	0xE004    B	L_clicker_2_MSP432__gpioInit_388
L_clicker_2_MSP432__gpioInit_387:
0x1E44	0xF2400140  MOVW	R1, #64
0x1E48	0x4857    LDR	R0, [PC, #348]
0x1E4A	0xF7FFFE2F  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_388:
0x1E4E	0xE09F    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 180 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_389:
; dir start address is: 4 (R1)
0x1E50	0x2901    CMP	R1, #1
0x1E52	0xD105    BNE	L_clicker_2_MSP432__gpioInit_390
; dir end address is: 4 (R1)
0x1E54	0xF2400120  MOVW	R1, #32
0x1E58	0x4854    LDR	R0, [PC, #336]
0x1E5A	0xF7FFFDF5  BL	_GPIO_Digital_Input+0
0x1E5E	0xE004    B	L_clicker_2_MSP432__gpioInit_391
L_clicker_2_MSP432__gpioInit_390:
0x1E60	0xF2400120  MOVW	R1, #32
0x1E64	0x4852    LDR	R0, [PC, #328]
0x1E66	0xF7FFFE21  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_391:
0x1E6A	0xE091    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 181 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_392:
; dir start address is: 4 (R1)
0x1E6C	0x2901    CMP	R1, #1
0x1E6E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_393
; dir end address is: 4 (R1)
0x1E70	0xF2400140  MOVW	R1, #64
0x1E74	0x484D    LDR	R0, [PC, #308]
0x1E76	0xF7FFFDE7  BL	_GPIO_Digital_Input+0
0x1E7A	0xE004    B	L_clicker_2_MSP432__gpioInit_394
L_clicker_2_MSP432__gpioInit_393:
0x1E7C	0xF2400140  MOVW	R1, #64
0x1E80	0x484B    LDR	R0, [PC, #300]
0x1E82	0xF7FFFE13  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_394:
0x1E86	0xE083    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 182 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_395:
; dir start address is: 4 (R1)
0x1E88	0x2901    CMP	R1, #1
0x1E8A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_396
; dir end address is: 4 (R1)
0x1E8C	0xF2400180  MOVW	R1, #128
0x1E90	0x4846    LDR	R0, [PC, #280]
0x1E92	0xF7FFFDD9  BL	_GPIO_Digital_Input+0
0x1E96	0xE004    B	L_clicker_2_MSP432__gpioInit_397
L_clicker_2_MSP432__gpioInit_396:
0x1E98	0xF2400180  MOVW	R1, #128
0x1E9C	0x4844    LDR	R0, [PC, #272]
0x1E9E	0xF7FFFE05  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_397:
0x1EA2	0xE075    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 183 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P7IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P7OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_398:
; dir start address is: 4 (R1)
0x1EA4	0x2901    CMP	R1, #1
0x1EA6	0xD105    BNE	L_clicker_2_MSP432__gpioInit_399
; dir end address is: 4 (R1)
0x1EA8	0xF2400120  MOVW	R1, #32
0x1EAC	0x4841    LDR	R0, [PC, #260]
0x1EAE	0xF7FFFDCB  BL	_GPIO_Digital_Input+0
0x1EB2	0xE004    B	L_clicker_2_MSP432__gpioInit_3100
L_clicker_2_MSP432__gpioInit_399:
0x1EB4	0xF2400120  MOVW	R1, #32
0x1EB8	0x483F    LDR	R0, [PC, #252]
0x1EBA	0xF7FFFDF7  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3100:
0x1EBE	0xE067    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 184 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_0); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_0); break;
L_clicker_2_MSP432__gpioInit_3101:
; dir start address is: 4 (R1)
0x1EC0	0x2901    CMP	R1, #1
0x1EC2	0xD105    BNE	L_clicker_2_MSP432__gpioInit_3102
; dir end address is: 4 (R1)
0x1EC4	0xF2400101  MOVW	R1, #1
0x1EC8	0x483C    LDR	R0, [PC, #240]
0x1ECA	0xF7FFFDBD  BL	_GPIO_Digital_Input+0
0x1ECE	0xE004    B	L_clicker_2_MSP432__gpioInit_3103
L_clicker_2_MSP432__gpioInit_3102:
0x1ED0	0xF2400101  MOVW	R1, #1
0x1ED4	0x483A    LDR	R0, [PC, #232]
0x1ED6	0xF7FFFDE9  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3103:
0x1EDA	0xE059    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 185 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_2); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_2); break;
L_clicker_2_MSP432__gpioInit_3104:
; dir start address is: 4 (R1)
0x1EDC	0x2901    CMP	R1, #1
0x1EDE	0xD105    BNE	L_clicker_2_MSP432__gpioInit_3105
; dir end address is: 4 (R1)
0x1EE0	0xF2400104  MOVW	R1, #4
0x1EE4	0x4835    LDR	R0, [PC, #212]
0x1EE6	0xF7FFFDAF  BL	_GPIO_Digital_Input+0
0x1EEA	0xE004    B	L_clicker_2_MSP432__gpioInit_3106
L_clicker_2_MSP432__gpioInit_3105:
0x1EEC	0xF2400104  MOVW	R1, #4
0x1EF0	0x4833    LDR	R0, [PC, #204]
0x1EF2	0xF7FFFDDB  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3106:
0x1EF6	0xE04B    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 186 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_3107:
; dir start address is: 4 (R1)
0x1EF8	0x2901    CMP	R1, #1
0x1EFA	0xD105    BNE	L_clicker_2_MSP432__gpioInit_3108
; dir end address is: 4 (R1)
0x1EFC	0xF2400108  MOVW	R1, #8
0x1F00	0x482E    LDR	R0, [PC, #184]
0x1F02	0xF7FFFDA1  BL	_GPIO_Digital_Input+0
0x1F06	0xE004    B	L_clicker_2_MSP432__gpioInit_3109
L_clicker_2_MSP432__gpioInit_3108:
0x1F08	0xF2400108  MOVW	R1, #8
0x1F0C	0x482C    LDR	R0, [PC, #176]
0x1F0E	0xF7FFFDCD  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3109:
0x1F12	0xE03D    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 187 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_3110:
; dir start address is: 4 (R1)
0x1F14	0x2901    CMP	R1, #1
0x1F16	0xD105    BNE	L_clicker_2_MSP432__gpioInit_3111
; dir end address is: 4 (R1)
0x1F18	0xF2400180  MOVW	R1, #128
0x1F1C	0x4829    LDR	R0, [PC, #164]
0x1F1E	0xF7FFFD93  BL	_GPIO_Digital_Input+0
0x1F22	0xE004    B	L_clicker_2_MSP432__gpioInit_3112
L_clicker_2_MSP432__gpioInit_3111:
0x1F24	0xF2400180  MOVW	R1, #128
0x1F28	0x4827    LDR	R0, [PC, #156]
0x1F2A	0xF7FFFDBF  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3112:
0x1F2E	0xE02F    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 188 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_3113:
; dir start address is: 4 (R1)
0x1F30	0x2901    CMP	R1, #1
0x1F32	0xD105    BNE	L_clicker_2_MSP432__gpioInit_3114
; dir end address is: 4 (R1)
0x1F34	0xF2400140  MOVW	R1, #64
0x1F38	0x4822    LDR	R0, [PC, #136]
0x1F3A	0xF7FFFD85  BL	_GPIO_Digital_Input+0
0x1F3E	0xE004    B	L_clicker_2_MSP432__gpioInit_3115
L_clicker_2_MSP432__gpioInit_3114:
0x1F40	0xF2400140  MOVW	R1, #64
0x1F44	0x4820    LDR	R0, [PC, #128]
0x1F46	0xF7FFFDB1  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_3115:
0x1F4A	0xE021    B	L_clicker_2_MSP432__gpioInit_379
;__c2_msp432_gpio.c, 189 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_clicker_2_MSP432__gpioInit_3116:
0x1F4C	0x2001    MOVS	R0, #1
0x1F4E	0xE020    B	L_end__gpioInit_3
;__c2_msp432_gpio.c, 190 :: 		}
L_clicker_2_MSP432__gpioInit_378:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1F50	0x2800    CMP	R0, #0
0x1F52	0xF43FAF53  BEQ	L_clicker_2_MSP432__gpioInit_380
0x1F56	0x2801    CMP	R0, #1
0x1F58	0xF43FAF5E  BEQ	L_clicker_2_MSP432__gpioInit_383
0x1F5C	0x2802    CMP	R0, #2
0x1F5E	0xF43FAF69  BEQ	L_clicker_2_MSP432__gpioInit_386
0x1F62	0x2803    CMP	R0, #3
0x1F64	0xF43FAF74  BEQ	L_clicker_2_MSP432__gpioInit_389
0x1F68	0x2804    CMP	R0, #4
0x1F6A	0xF43FAF7F  BEQ	L_clicker_2_MSP432__gpioInit_392
0x1F6E	0x2805    CMP	R0, #5
0x1F70	0xF43FAF8A  BEQ	L_clicker_2_MSP432__gpioInit_395
0x1F74	0x2806    CMP	R0, #6
0x1F76	0xF43FAF95  BEQ	L_clicker_2_MSP432__gpioInit_398
0x1F7A	0x2807    CMP	R0, #7
0x1F7C	0xD0A0    BEQ	L_clicker_2_MSP432__gpioInit_3101
0x1F7E	0x2808    CMP	R0, #8
0x1F80	0xD0AC    BEQ	L_clicker_2_MSP432__gpioInit_3104
0x1F82	0x2809    CMP	R0, #9
0x1F84	0xD0B8    BEQ	L_clicker_2_MSP432__gpioInit_3107
0x1F86	0x280A    CMP	R0, #10
0x1F88	0xD0C4    BEQ	L_clicker_2_MSP432__gpioInit_3110
0x1F8A	0x280B    CMP	R0, #11
0x1F8C	0xD0D0    BEQ	L_clicker_2_MSP432__gpioInit_3113
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1F8E	0xE7DD    B	L_clicker_2_MSP432__gpioInit_3116
L_clicker_2_MSP432__gpioInit_379:
;__c2_msp432_gpio.c, 191 :: 		return _MIKROBUS_OK;
0x1F90	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_gpio.c, 192 :: 		}
L_end__gpioInit_3:
0x1F92	0xF8DDE000  LDR	LR, [SP, #0]
0x1F96	0xB001    ADD	SP, SP, #4
0x1F98	0x4770    BX	LR
0x1F9A	0xBF00    NOP
0x1F9C	0x4C404000  	DIO_P5IN+0
0x1FA0	0x4C424000  	DIO_P5OUT+0
0x1FA4	0x4C214000  	DIO_P4IN+0
0x1FA8	0x4C234000  	DIO_P4OUT+0
0x1FAC	0x4C804000  	DIO_P9IN+0
0x1FB0	0x4C824000  	DIO_P9OUT+0
0x1FB4	0x4C604000  	DIO_P7IN+0
0x1FB8	0x4C624000  	DIO_P7OUT+0
0x1FBC	0x4C014000  	DIO_P2IN+0
0x1FC0	0x4C034000  	DIO_P2OUT+0
0x1FC4	0x4C204000  	DIO_P3IN+0
0x1FC8	0x4C224000  	DIO_P3OUT+0
; end of clicker_2_MSP432__gpioInit_3
clicker_2_MSP432__gpioInit_4:
;__c2_msp432_gpio.c, 195 :: 		static T_mikrobus_ret _gpioInit_4(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1C2C	0xB081    SUB	SP, SP, #4
0x1C2E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__c2_msp432_gpio.c, 197 :: 		switch( pin )
0x1C32	0xE0A9    B	L_clicker_2_MSP432__gpioInit_4117
; pin end address is: 0 (R0)
;__c2_msp432_gpio.c, 199 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_4119:
0x1C34	0x2901    CMP	R1, #1
0x1C36	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4120
; dir end address is: 4 (R1)
0x1C38	0xF2400108  MOVW	R1, #8
0x1C3C	0x4865    LDR	R0, [PC, #404]
0x1C3E	0xF7FFFF03  BL	_GPIO_Digital_Input+0
0x1C42	0xE004    B	L_clicker_2_MSP432__gpioInit_4121
L_clicker_2_MSP432__gpioInit_4120:
0x1C44	0xF2400108  MOVW	R1, #8
0x1C48	0x4863    LDR	R0, [PC, #396]
0x1C4A	0xF7FFFF2F  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4121:
0x1C4E	0xE0BB    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 200 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P4IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P4OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_4122:
; dir start address is: 4 (R1)
0x1C50	0x2901    CMP	R1, #1
0x1C52	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4123
; dir end address is: 4 (R1)
0x1C54	0xF2400120  MOVW	R1, #32
0x1C58	0x4860    LDR	R0, [PC, #384]
0x1C5A	0xF7FFFEF5  BL	_GPIO_Digital_Input+0
0x1C5E	0xE004    B	L_clicker_2_MSP432__gpioInit_4124
L_clicker_2_MSP432__gpioInit_4123:
0x1C60	0xF2400120  MOVW	R1, #32
0x1C64	0x485E    LDR	R0, [PC, #376]
0x1C66	0xF7FFFF21  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4124:
0x1C6A	0xE0AD    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 201 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P4IN, _GPIO_PINMASK_4); else GPIO_Digital_Output(&DIO_P4OUT, _GPIO_PINMASK_4); break;
L_clicker_2_MSP432__gpioInit_4125:
; dir start address is: 4 (R1)
0x1C6C	0x2901    CMP	R1, #1
0x1C6E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4126
; dir end address is: 4 (R1)
0x1C70	0xF2400110  MOVW	R1, #16
0x1C74	0x4859    LDR	R0, [PC, #356]
0x1C76	0xF7FFFEE7  BL	_GPIO_Digital_Input+0
0x1C7A	0xE004    B	L_clicker_2_MSP432__gpioInit_4127
L_clicker_2_MSP432__gpioInit_4126:
0x1C7C	0xF2400110  MOVW	R1, #16
0x1C80	0x4857    LDR	R0, [PC, #348]
0x1C82	0xF7FFFF13  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4127:
0x1C86	0xE09F    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 202 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_4128:
; dir start address is: 4 (R1)
0x1C88	0x2901    CMP	R1, #1
0x1C8A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4129
; dir end address is: 4 (R1)
0x1C8C	0xF2400120  MOVW	R1, #32
0x1C90	0x4850    LDR	R0, [PC, #320]
0x1C92	0xF7FFFED9  BL	_GPIO_Digital_Input+0
0x1C96	0xE004    B	L_clicker_2_MSP432__gpioInit_4130
L_clicker_2_MSP432__gpioInit_4129:
0x1C98	0xF2400120  MOVW	R1, #32
0x1C9C	0x484E    LDR	R0, [PC, #312]
0x1C9E	0xF7FFFF05  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4130:
0x1CA2	0xE091    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 203 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_4131:
; dir start address is: 4 (R1)
0x1CA4	0x2901    CMP	R1, #1
0x1CA6	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4132
; dir end address is: 4 (R1)
0x1CA8	0xF2400140  MOVW	R1, #64
0x1CAC	0x4849    LDR	R0, [PC, #292]
0x1CAE	0xF7FFFECB  BL	_GPIO_Digital_Input+0
0x1CB2	0xE004    B	L_clicker_2_MSP432__gpioInit_4133
L_clicker_2_MSP432__gpioInit_4132:
0x1CB4	0xF2400140  MOVW	R1, #64
0x1CB8	0x4847    LDR	R0, [PC, #284]
0x1CBA	0xF7FFFEF7  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4133:
0x1CBE	0xE083    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 204 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P9IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P9OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_4134:
; dir start address is: 4 (R1)
0x1CC0	0x2901    CMP	R1, #1
0x1CC2	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4135
; dir end address is: 4 (R1)
0x1CC4	0xF2400180  MOVW	R1, #128
0x1CC8	0x4842    LDR	R0, [PC, #264]
0x1CCA	0xF7FFFEBD  BL	_GPIO_Digital_Input+0
0x1CCE	0xE004    B	L_clicker_2_MSP432__gpioInit_4136
L_clicker_2_MSP432__gpioInit_4135:
0x1CD0	0xF2400180  MOVW	R1, #128
0x1CD4	0x4840    LDR	R0, [PC, #256]
0x1CD6	0xF7FFFEE9  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4136:
0x1CDA	0xE075    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 205 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_5); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_5); break;
L_clicker_2_MSP432__gpioInit_4137:
; dir start address is: 4 (R1)
0x1CDC	0x2901    CMP	R1, #1
0x1CDE	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4138
; dir end address is: 4 (R1)
0x1CE0	0xF2400120  MOVW	R1, #32
0x1CE4	0x483F    LDR	R0, [PC, #252]
0x1CE6	0xF7FFFEAF  BL	_GPIO_Digital_Input+0
0x1CEA	0xE004    B	L_clicker_2_MSP432__gpioInit_4139
L_clicker_2_MSP432__gpioInit_4138:
0x1CEC	0xF2400120  MOVW	R1, #32
0x1CF0	0x483D    LDR	R0, [PC, #244]
0x1CF2	0xF7FFFEDB  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4139:
0x1CF6	0xE067    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 206 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_1); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_1); break;
L_clicker_2_MSP432__gpioInit_4140:
; dir start address is: 4 (R1)
0x1CF8	0x2901    CMP	R1, #1
0x1CFA	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4141
; dir end address is: 4 (R1)
0x1CFC	0xF2400102  MOVW	R1, #2
0x1D00	0x4838    LDR	R0, [PC, #224]
0x1D02	0xF7FFFEA1  BL	_GPIO_Digital_Input+0
0x1D06	0xE004    B	L_clicker_2_MSP432__gpioInit_4142
L_clicker_2_MSP432__gpioInit_4141:
0x1D08	0xF2400102  MOVW	R1, #2
0x1D0C	0x4836    LDR	R0, [PC, #216]
0x1D0E	0xF7FFFECD  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4142:
0x1D12	0xE059    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 207 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_2); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_2); break;
L_clicker_2_MSP432__gpioInit_4143:
; dir start address is: 4 (R1)
0x1D14	0x2901    CMP	R1, #1
0x1D16	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4144
; dir end address is: 4 (R1)
0x1D18	0xF2400104  MOVW	R1, #4
0x1D1C	0x4831    LDR	R0, [PC, #196]
0x1D1E	0xF7FFFE93  BL	_GPIO_Digital_Input+0
0x1D22	0xE004    B	L_clicker_2_MSP432__gpioInit_4145
L_clicker_2_MSP432__gpioInit_4144:
0x1D24	0xF2400104  MOVW	R1, #4
0x1D28	0x482F    LDR	R0, [PC, #188]
0x1D2A	0xF7FFFEBF  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4145:
0x1D2E	0xE04B    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 208 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P2IN, _GPIO_PINMASK_3); else GPIO_Digital_Output(&DIO_P2OUT, _GPIO_PINMASK_3); break;
L_clicker_2_MSP432__gpioInit_4146:
; dir start address is: 4 (R1)
0x1D30	0x2901    CMP	R1, #1
0x1D32	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4147
; dir end address is: 4 (R1)
0x1D34	0xF2400108  MOVW	R1, #8
0x1D38	0x482A    LDR	R0, [PC, #168]
0x1D3A	0xF7FFFE85  BL	_GPIO_Digital_Input+0
0x1D3E	0xE004    B	L_clicker_2_MSP432__gpioInit_4148
L_clicker_2_MSP432__gpioInit_4147:
0x1D40	0xF2400108  MOVW	R1, #8
0x1D44	0x4828    LDR	R0, [PC, #160]
0x1D46	0xF7FFFEB1  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4148:
0x1D4A	0xE03D    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 209 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_7); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_7); break;
L_clicker_2_MSP432__gpioInit_4149:
; dir start address is: 4 (R1)
0x1D4C	0x2901    CMP	R1, #1
0x1D4E	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4150
; dir end address is: 4 (R1)
0x1D50	0xF2400180  MOVW	R1, #128
0x1D54	0x4825    LDR	R0, [PC, #148]
0x1D56	0xF7FFFE77  BL	_GPIO_Digital_Input+0
0x1D5A	0xE004    B	L_clicker_2_MSP432__gpioInit_4151
L_clicker_2_MSP432__gpioInit_4150:
0x1D5C	0xF2400180  MOVW	R1, #128
0x1D60	0x4823    LDR	R0, [PC, #140]
0x1D62	0xF7FFFEA3  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4151:
0x1D66	0xE02F    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 210 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&DIO_P3IN, _GPIO_PINMASK_6); else GPIO_Digital_Output(&DIO_P3OUT, _GPIO_PINMASK_6); break;
L_clicker_2_MSP432__gpioInit_4152:
; dir start address is: 4 (R1)
0x1D68	0x2901    CMP	R1, #1
0x1D6A	0xD105    BNE	L_clicker_2_MSP432__gpioInit_4153
; dir end address is: 4 (R1)
0x1D6C	0xF2400140  MOVW	R1, #64
0x1D70	0x481E    LDR	R0, [PC, #120]
0x1D72	0xF7FFFE69  BL	_GPIO_Digital_Input+0
0x1D76	0xE004    B	L_clicker_2_MSP432__gpioInit_4154
L_clicker_2_MSP432__gpioInit_4153:
0x1D78	0xF2400140  MOVW	R1, #64
0x1D7C	0x481C    LDR	R0, [PC, #112]
0x1D7E	0xF7FFFE95  BL	_GPIO_Digital_Output+0
L_clicker_2_MSP432__gpioInit_4154:
0x1D82	0xE021    B	L_clicker_2_MSP432__gpioInit_4118
;__c2_msp432_gpio.c, 211 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_clicker_2_MSP432__gpioInit_4155:
0x1D84	0x2001    MOVS	R0, #1
0x1D86	0xE020    B	L_end__gpioInit_4
;__c2_msp432_gpio.c, 212 :: 		}
L_clicker_2_MSP432__gpioInit_4117:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1D88	0x2800    CMP	R0, #0
0x1D8A	0xF43FAF53  BEQ	L_clicker_2_MSP432__gpioInit_4119
0x1D8E	0x2801    CMP	R0, #1
0x1D90	0xF43FAF5E  BEQ	L_clicker_2_MSP432__gpioInit_4122
0x1D94	0x2802    CMP	R0, #2
0x1D96	0xF43FAF69  BEQ	L_clicker_2_MSP432__gpioInit_4125
0x1D9A	0x2803    CMP	R0, #3
0x1D9C	0xF43FAF74  BEQ	L_clicker_2_MSP432__gpioInit_4128
0x1DA0	0x2804    CMP	R0, #4
0x1DA2	0xF43FAF7F  BEQ	L_clicker_2_MSP432__gpioInit_4131
0x1DA6	0x2805    CMP	R0, #5
0x1DA8	0xF43FAF8A  BEQ	L_clicker_2_MSP432__gpioInit_4134
0x1DAC	0x2806    CMP	R0, #6
0x1DAE	0xF43FAF95  BEQ	L_clicker_2_MSP432__gpioInit_4137
0x1DB2	0x2807    CMP	R0, #7
0x1DB4	0xD0A0    BEQ	L_clicker_2_MSP432__gpioInit_4140
0x1DB6	0x2808    CMP	R0, #8
0x1DB8	0xD0AC    BEQ	L_clicker_2_MSP432__gpioInit_4143
0x1DBA	0x2809    CMP	R0, #9
0x1DBC	0xD0B8    BEQ	L_clicker_2_MSP432__gpioInit_4146
0x1DBE	0x280A    CMP	R0, #10
0x1DC0	0xD0C4    BEQ	L_clicker_2_MSP432__gpioInit_4149
0x1DC2	0x280B    CMP	R0, #11
0x1DC4	0xD0D0    BEQ	L_clicker_2_MSP432__gpioInit_4152
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1DC6	0xE7DD    B	L_clicker_2_MSP432__gpioInit_4155
L_clicker_2_MSP432__gpioInit_4118:
;__c2_msp432_gpio.c, 213 :: 		return _MIKROBUS_OK;
0x1DC8	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_gpio.c, 214 :: 		}
L_end__gpioInit_4:
0x1DCA	0xF8DDE000  LDR	LR, [SP, #0]
0x1DCE	0xB001    ADD	SP, SP, #4
0x1DD0	0x4770    BX	LR
0x1DD2	0xBF00    NOP
0x1DD4	0x4C804000  	DIO_P9IN+0
0x1DD8	0x4C824000  	DIO_P9OUT+0
0x1DDC	0x4C214000  	DIO_P4IN+0
0x1DE0	0x4C234000  	DIO_P4OUT+0
0x1DE4	0x4C014000  	DIO_P2IN+0
0x1DE8	0x4C034000  	DIO_P2OUT+0
0x1DEC	0x4C204000  	DIO_P3IN+0
0x1DF0	0x4C224000  	DIO_P3OUT+0
; end of clicker_2_MSP432__gpioInit_4
_mikrobus_i2cInit:
;clicker_2_MSP432.c, 221 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2C18	0xB081    SUB	SP, SP, #4
0x2C1A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 4 (R1)
;clicker_2_MSP432.c, 223 :: 		switch( bus )
0x2C1E	0xE011    B	L_mikrobus_i2cInit170
; bus end address is: 0 (R0)
;clicker_2_MSP432.c, 226 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit172:
0x2C20	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x2C22	0xF7FEFFF9  BL	clicker_2_MSP432__i2cInit_1+0
0x2C26	0xE016    B	L_end_mikrobus_i2cInit
;clicker_2_MSP432.c, 229 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit173:
; cfg start address is: 4 (R1)
0x2C28	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x2C2A	0xF7FFF9E3  BL	clicker_2_MSP432__i2cInit_2+0
0x2C2E	0xE012    B	L_end_mikrobus_i2cInit
;clicker_2_MSP432.c, 232 :: 		case _MIKROBUS3 : return _i2cInit_3( cfg );
L_mikrobus_i2cInit174:
; cfg start address is: 4 (R1)
0x2C30	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x2C32	0xF7FFF9D5  BL	clicker_2_MSP432__i2cInit_3+0
0x2C36	0xE00E    B	L_end_mikrobus_i2cInit
;clicker_2_MSP432.c, 235 :: 		case _MIKROBUS4 : return _i2cInit_4( cfg );
L_mikrobus_i2cInit175:
; cfg start address is: 4 (R1)
0x2C38	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x2C3A	0xF7FFF9C7  BL	clicker_2_MSP432__i2cInit_4+0
0x2C3E	0xE00A    B	L_end_mikrobus_i2cInit
;clicker_2_MSP432.c, 243 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit176:
0x2C40	0x2001    MOVS	R0, #1
0x2C42	0xE008    B	L_end_mikrobus_i2cInit
;clicker_2_MSP432.c, 244 :: 		}
L_mikrobus_i2cInit170:
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x2C44	0x2800    CMP	R0, #0
0x2C46	0xD0EB    BEQ	L_mikrobus_i2cInit172
0x2C48	0x2801    CMP	R0, #1
0x2C4A	0xD0ED    BEQ	L_mikrobus_i2cInit173
0x2C4C	0x2802    CMP	R0, #2
0x2C4E	0xD0EF    BEQ	L_mikrobus_i2cInit174
0x2C50	0x2803    CMP	R0, #3
0x2C52	0xD0F1    BEQ	L_mikrobus_i2cInit175
; bus end address is: 0 (R0)
; cfg end address is: 4 (R1)
0x2C54	0xE7F4    B	L_mikrobus_i2cInit176
;clicker_2_MSP432.c, 247 :: 		}
L_end_mikrobus_i2cInit:
0x2C56	0xF8DDE000  LDR	LR, [SP, #0]
0x2C5A	0xB001    ADD	SP, SP, #4
0x2C5C	0x4770    BX	LR
; end of _mikrobus_i2cInit
clicker_2_MSP432__i2cInit_1:
;__c2_msp432_i2c.c, 39 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
0x1C18	0xB081    SUB	SP, SP, #4
0x1C1A	0xF8CDE000  STR	LR, [SP, #0]
;__c2_msp432_i2c.c, 41 :: 		I2C1_Init();
0x1C1E	0xF7FFFECF  BL	_I2C1_Init+0
;__c2_msp432_i2c.c, 42 :: 		return _MIKROBUS_OK;
0x1C22	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_i2c.c, 43 :: 		}
L_end__i2cInit_1:
0x1C24	0xF8DDE000  LDR	LR, [SP, #0]
0x1C28	0xB001    ADD	SP, SP, #4
0x1C2A	0x4770    BX	LR
; end of clicker_2_MSP432__i2cInit_1
_I2C1_Init:
;__Lib_I2C_MSP.c, 520 :: 		
0x19C0	0xB081    SUB	SP, SP, #4
0x19C2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_MSP.c, 521 :: 		
0x19C6	0x4B05    LDR	R3, [PC, #20]
0x19C8	0xF2400280  MOVW	R2, #128
0x19CC	0x4904    LDR	R1, [PC, #16]
0x19CE	0x4805    LDR	R0, [PC, #20]
0x19D0	0xF7FFFC7E  BL	__Lib_I2C_MSP_I2Cx_Init_Advanced+0
;__Lib_I2C_MSP.c, 522 :: 		
L_end_I2C1_Init:
0x19D4	0xF8DDE000  LDR	LR, [SP, #0]
0x19D8	0xB001    ADD	SP, SP, #4
0x19DA	0x4770    BX	LR
0x19DC	0x37A00000  	__GPIO_MODULE_I2CB1_C1213+0
0x19E0	0x86A00001  	#100000
0x19E4	0x24004000  	EUSCI_B1_UCB1CTLW0+0
; end of _I2C1_Init
__Lib_I2C_MSP_I2Cx_Init_Advanced:
;__Lib_I2C_MSP.c, 740 :: 		
; module start address is: 12 (R3)
; I2C_BASE start address is: 0 (R0)
0x12D0	0xB087    SUB	SP, SP, #28
0x12D2	0xF8CDE000  STR	LR, [SP, #0]
0x12D6	0x4684    MOV	R12, R0
0x12D8	0x9105    STR	R1, [SP, #20]
0x12DA	0x9206    STR	R2, [SP, #24]
; module end address is: 12 (R3)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 48 (R12)
; module start address is: 12 (R3)
;__Lib_I2C_MSP.c, 745 :: 		
0x12DC	0x4618    MOV	R0, R3
; module end address is: 12 (R3)
0x12DE	0xF7FFFD05  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_I2C_MSP.c, 747 :: 		
0x12E2	0x4660    MOV	R0, R12
0x12E4	0xF7FFFCE6  BL	__Lib_I2C_MSP_I2C_disableModule+0
;__Lib_I2C_MSP.c, 749 :: 		
0x12E8	0x9906    LDR	R1, [SP, #24]
0x12EA	0x4660    MOV	R0, R12
0x12EC	0xF7FFFCEA  BL	__Lib_I2C_MSP_I2C_SetClockSource+0
;__Lib_I2C_MSP.c, 750 :: 		
0x12F0	0xF8BC5000  LDRH	R5, [R12, #0]
0x12F4	0xF6407401  MOVW	R4, #3841
0x12F8	0xEA450404  ORR	R4, R5, R4, LSL #0
0x12FC	0xF8AC4000  STRH	R4, [R12, #0]
;__Lib_I2C_MSP.c, 752 :: 		
0x1300	0xAC01    ADD	R4, SP, #4
0x1302	0x4620    MOV	R0, R4
0x1304	0xF7FFFE66  BL	_CS_GetClocksFrequency+0
;__Lib_I2C_MSP.c, 753 :: 		
0x1308	0x9C06    LDR	R4, [SP, #24]
0x130A	0x2C40    CMP	R4, #64
0x130C	0xD105    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced103
;__Lib_I2C_MSP.c, 754 :: 		
0x130E	0x9D05    LDR	R5, [SP, #20]
0x1310	0x9C01    LDR	R4, [SP, #4]
0x1312	0xFBB4F4F5  UDIV	R4, R4, R5
; preScalarValue start address is: 0 (R0)
0x1316	0xB2A0    UXTH	R0, R4
; preScalarValue end address is: 0 (R0)
0x1318	0xE009    B	L___Lib_I2C_MSP_I2Cx_Init_Advanced104
L___Lib_I2C_MSP_I2Cx_Init_Advanced103:
;__Lib_I2C_MSP.c, 755 :: 		
0x131A	0x9C06    LDR	R4, [SP, #24]
0x131C	0x2C80    CMP	R4, #128
0x131E	0xD105    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced105
;__Lib_I2C_MSP.c, 756 :: 		
0x1320	0x9D05    LDR	R5, [SP, #20]
0x1322	0x9C04    LDR	R4, [SP, #16]
0x1324	0xFBB4F4F5  UDIV	R4, R4, R5
; preScalarValue start address is: 0 (R0)
0x1328	0xB2A0    UXTH	R0, R4
; preScalarValue end address is: 0 (R0)
0x132A	0xE000    B	L___Lib_I2C_MSP_I2Cx_Init_Advanced106
L___Lib_I2C_MSP_I2Cx_Init_Advanced105:
;__Lib_I2C_MSP.c, 758 :: 		
; preScalarValue start address is: 0 (R0)
0x132C	0x2000    MOVS	R0, #0
; preScalarValue end address is: 0 (R0)
L___Lib_I2C_MSP_I2Cx_Init_Advanced106:
; preScalarValue start address is: 0 (R0)
; preScalarValue end address is: 0 (R0)
L___Lib_I2C_MSP_I2Cx_Init_Advanced104:
;__Lib_I2C_MSP.c, 760 :: 		
; preScalarValue start address is: 0 (R0)
0x132E	0xF10C0406  ADD	R4, R12, #6
0x1332	0x8020    STRH	R0, [R4, #0]
; preScalarValue end address is: 0 (R0)
;__Lib_I2C_MSP.c, 762 :: 		
0x1334	0x4C1D    LDR	R4, [PC, #116]
0x1336	0x45A4    CMP	R12, R4
0x1338	0xD106    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced107
;__Lib_I2C_MSP.c, 763 :: 		
0x133A	0x4D1D    LDR	R5, [PC, #116]
0x133C	0x4C1D    LDR	R4, [PC, #116]
0x133E	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 764 :: 		
0x1340	0x4D1D    LDR	R5, [PC, #116]
0x1342	0x4C1E    LDR	R4, [PC, #120]
0x1344	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 765 :: 		
0x1346	0xE01C    B	L___Lib_I2C_MSP_I2Cx_Init_Advanced108
L___Lib_I2C_MSP_I2Cx_Init_Advanced107:
;__Lib_I2C_MSP.c, 766 :: 		
0x1348	0x4C1D    LDR	R4, [PC, #116]
0x134A	0x45A4    CMP	R12, R4
0x134C	0xD106    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced109
;__Lib_I2C_MSP.c, 767 :: 		
0x134E	0x4D1D    LDR	R5, [PC, #116]
0x1350	0x4C18    LDR	R4, [PC, #96]
0x1352	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 768 :: 		
0x1354	0x4D1C    LDR	R5, [PC, #112]
0x1356	0x4C19    LDR	R4, [PC, #100]
0x1358	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 769 :: 		
0x135A	0xE012    B	L___Lib_I2C_MSP_I2Cx_Init_Advanced110
L___Lib_I2C_MSP_I2Cx_Init_Advanced109:
;__Lib_I2C_MSP.c, 770 :: 		
0x135C	0x4C1B    LDR	R4, [PC, #108]
0x135E	0x45A4    CMP	R12, R4
0x1360	0xD106    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced111
;__Lib_I2C_MSP.c, 771 :: 		
0x1362	0x4D1B    LDR	R5, [PC, #108]
0x1364	0x4C13    LDR	R4, [PC, #76]
0x1366	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 772 :: 		
0x1368	0x4D1A    LDR	R5, [PC, #104]
0x136A	0x4C14    LDR	R4, [PC, #80]
0x136C	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 773 :: 		
0x136E	0xE008    B	L___Lib_I2C_MSP_I2Cx_Init_Advanced112
L___Lib_I2C_MSP_I2Cx_Init_Advanced111:
;__Lib_I2C_MSP.c, 774 :: 		
0x1370	0x4C19    LDR	R4, [PC, #100]
0x1372	0x45A4    CMP	R12, R4
0x1374	0xD105    BNE	L___Lib_I2C_MSP_I2Cx_Init_Advanced113
;__Lib_I2C_MSP.c, 775 :: 		
0x1376	0x4D19    LDR	R5, [PC, #100]
0x1378	0x4C0E    LDR	R4, [PC, #56]
0x137A	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 776 :: 		
0x137C	0x4D18    LDR	R5, [PC, #96]
0x137E	0x4C0F    LDR	R4, [PC, #60]
0x1380	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 777 :: 		
L___Lib_I2C_MSP_I2Cx_Init_Advanced113:
L___Lib_I2C_MSP_I2Cx_Init_Advanced112:
L___Lib_I2C_MSP_I2Cx_Init_Advanced110:
L___Lib_I2C_MSP_I2Cx_Init_Advanced108:
;__Lib_I2C_MSP.c, 779 :: 		
0x1382	0xF2400101  MOVW	R1, #1
0x1386	0x4660    MOV	R0, R12
0x1388	0xF7FFFCA8  BL	__Lib_I2C_MSP_I2C_setMode+0
;__Lib_I2C_MSP.c, 781 :: 		
0x138C	0x4660    MOV	R0, R12
0x138E	0xF7FFFE79  BL	__Lib_I2C_MSP_I2C_enableModule+0
;__Lib_I2C_MSP.c, 783 :: 		
0x1392	0x2103    MOVS	R1, #3
0x1394	0x4660    MOV	R0, R12
0x1396	0xF7FFFE7D  BL	__Lib_I2C_MSP_I2C_clearInterruptFlag+0
;__Lib_I2C_MSP.c, 784 :: 		
0x139A	0x2102    MOVS	R1, #2
0x139C	0x4660    MOV	R0, R12
; I2C_BASE end address is: 48 (R12)
0x139E	0xF7FFFE83  BL	__Lib_I2C_MSP_I2C_enableInterrupt+0
;__Lib_I2C_MSP.c, 785 :: 		
L_end_I2Cx_Init_Advanced:
0x13A2	0xF8DDE000  LDR	LR, [SP, #0]
0x13A6	0xB007    ADD	SP, SP, #28
0x13A8	0x4770    BX	LR
0x13AA	0xBF00    NOP
0x13AC	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x13B0	0x16D90000  	_I2C0_Read+0
0x13B4	0x00D42000  	_I2C_Read_Ptr+0
0x13B8	0x13E50000  	_I2C0_Write+0
0x13BC	0x00D82000  	_I2C_Write_Ptr+0
0x13C0	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x13C4	0x112D0000  	_I2C1_Read+0
0x13C8	0x142D0000  	_I2C1_Write+0
0x13CC	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x13D0	0x11650000  	_I2C2_Read+0
0x13D4	0x14090000  	_I2C2_Write+0
0x13D8	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x13DC	0x10B90000  	_I2C3_Read+0
0x13E0	0x17750000  	_I2C3_Write+0
; end of __Lib_I2C_MSP_I2Cx_Init_Advanced
_CS_GetClocksFrequency:
;__Lib_System_MSP432P.c, 586 :: 		
; CS_Clocks start address is: 0 (R0)
0x0FD4	0xB082    SUB	SP, SP, #8
0x0FD6	0xF8CDE000  STR	LR, [SP, #0]
0x0FDA	0x4604    MOV	R4, R0
; CS_Clocks end address is: 0 (R0)
; CS_Clocks start address is: 16 (R4)
;__Lib_System_MSP432P.c, 589 :: 		
0x0FDC	0x4928    LDR	R1, [PC, #160]
0x0FDE	0x6809    LDR	R1, [R1, #0]
0x0FE0	0xF40161E0  AND	R1, R1, #1792
0x0FE4	0x0A09    LSRS	R1, R1, #8
; lsource start address is: 0 (R0)
0x0FE6	0x4608    MOV	R0, R1
;__Lib_System_MSP432P.c, 590 :: 		
0x0FE8	0x4925    LDR	R1, [PC, #148]
0x0FEA	0x6809    LDR	R1, [R1, #0]
0x0FEC	0xF00161E0  AND	R1, R1, #117440512
0x0FF0	0x0E09    LSRS	R1, R1, #24
; ldivider start address is: 8 (R2)
0x0FF2	0x460A    MOV	R2, R1
;__Lib_System_MSP432P.c, 591 :: 		
0x0FF4	0x4621    MOV	R1, R4
0x0FF6	0x9101    STR	R1, [SP, #4]
0x0FF8	0x4611    MOV	R1, R2
; ldivider end address is: 8 (R2)
; lsource end address is: 0 (R0)
0x0FFA	0xF7FFF9EF  BL	__Lib_System_MSP432P_CS_ComputeClockFrequency+0
0x0FFE	0x9901    LDR	R1, [SP, #4]
0x1000	0x6008    STR	R0, [R1, #0]
;__Lib_System_MSP432P.c, 593 :: 		
0x1002	0x491F    LDR	R1, [PC, #124]
0x1004	0x6809    LDR	R1, [R1, #0]
0x1006	0xF0010170  AND	R1, R1, #112
0x100A	0x0909    LSRS	R1, R1, #4
; lsource start address is: 0 (R0)
0x100C	0x4608    MOV	R0, R1
;__Lib_System_MSP432P.c, 594 :: 		
0x100E	0x491C    LDR	R1, [PC, #112]
0x1010	0x6809    LDR	R1, [R1, #0]
0x1012	0xF40101E0  AND	R1, R1, #7340032
0x1016	0x0D09    LSRS	R1, R1, #20
; ldivider start address is: 8 (R2)
0x1018	0x460A    MOV	R2, R1
;__Lib_System_MSP432P.c, 595 :: 		
0x101A	0xF2040108  ADDW	R1, R4, #8
0x101E	0x9101    STR	R1, [SP, #4]
0x1020	0x4611    MOV	R1, R2
; ldivider end address is: 8 (R2)
; lsource end address is: 0 (R0)
0x1022	0xF7FFF9DB  BL	__Lib_System_MSP432P_CS_ComputeClockFrequency+0
0x1026	0x9901    LDR	R1, [SP, #4]
0x1028	0x6008    STR	R0, [R1, #0]
;__Lib_System_MSP432P.c, 597 :: 		
0x102A	0x4915    LDR	R1, [PC, #84]
0x102C	0x6809    LDR	R1, [R1, #0]
0x102E	0xF0010170  AND	R1, R1, #112
0x1032	0x0909    LSRS	R1, R1, #4
; lsource start address is: 0 (R0)
0x1034	0x4608    MOV	R0, R1
;__Lib_System_MSP432P.c, 598 :: 		
0x1036	0x4912    LDR	R1, [PC, #72]
0x1038	0x6809    LDR	R1, [R1, #0]
0x103A	0xF00141E0  AND	R1, R1, #1879048192
0x103E	0x0F09    LSRS	R1, R1, #28
; ldivider start address is: 8 (R2)
0x1040	0x460A    MOV	R2, R1
;__Lib_System_MSP432P.c, 599 :: 		
0x1042	0xF204010C  ADDW	R1, R4, #12
0x1046	0x9101    STR	R1, [SP, #4]
0x1048	0x4611    MOV	R1, R2
; ldivider end address is: 8 (R2)
; lsource end address is: 0 (R0)
0x104A	0xF7FFF9C7  BL	__Lib_System_MSP432P_CS_ComputeClockFrequency+0
0x104E	0x9901    LDR	R1, [SP, #4]
0x1050	0x6008    STR	R0, [R1, #0]
;__Lib_System_MSP432P.c, 601 :: 		
0x1052	0x490B    LDR	R1, [PC, #44]
0x1054	0x6809    LDR	R1, [R1, #0]
0x1056	0xF0010107  AND	R1, R1, #7
; lsource start address is: 0 (R0)
0x105A	0x4608    MOV	R0, R1
;__Lib_System_MSP432P.c, 602 :: 		
0x105C	0x4908    LDR	R1, [PC, #32]
0x105E	0x6809    LDR	R1, [R1, #0]
0x1060	0xF40121E0  AND	R1, R1, #458752
0x1064	0x0C09    LSRS	R1, R1, #16
; ldivider start address is: 8 (R2)
0x1066	0x460A    MOV	R2, R1
;__Lib_System_MSP432P.c, 603 :: 		
0x1068	0x1D21    ADDS	R1, R4, #4
; CS_Clocks end address is: 16 (R4)
0x106A	0x9101    STR	R1, [SP, #4]
0x106C	0x4611    MOV	R1, R2
; ldivider end address is: 8 (R2)
; lsource end address is: 0 (R0)
0x106E	0xF7FFF9B5  BL	__Lib_System_MSP432P_CS_ComputeClockFrequency+0
0x1072	0x9901    LDR	R1, [SP, #4]
0x1074	0x6008    STR	R0, [R1, #0]
;__Lib_System_MSP432P.c, 604 :: 		
L_end_CS_GetClocksFrequency:
0x1076	0xF8DDE000  LDR	LR, [SP, #0]
0x107A	0xB002    ADD	SP, SP, #8
0x107C	0x4770    BX	LR
0x107E	0xBF00    NOP
0x1080	0x04084001  	CS_CSCTL1+0
; end of _CS_GetClocksFrequency
__Lib_System_MSP432P_CS_ComputeClockFrequency:
;__Lib_System_MSP432P.c, 526 :: 		
; divider start address is: 4 (R1)
; source start address is: 0 (R0)
0x03DC	0xB081    SUB	SP, SP, #4
0x03DE	0xF8CDE000  STR	LR, [SP, #0]
0x03E2	0x4602    MOV	R2, R0
; divider end address is: 4 (R1)
; source end address is: 0 (R0)
; source start address is: 8 (R2)
; divider start address is: 4 (R1)
;__Lib_System_MSP432P.c, 529 :: 		
0x03E4	0x4608    MOV	R0, R1
; divider end address is: 4 (R1)
0x03E6	0xF7FFFF03  BL	__Lib_System_MSP432P_CS_GetDividerValue+0
; calcDivider start address is: 12 (R3)
0x03EA	0xB2C3    UXTB	R3, R0
;__Lib_System_MSP432P.c, 531 :: 		
0x03EC	0xE071    B	L___Lib_System_MSP432P_CS_ComputeClockFrequency48
; source end address is: 8 (R2)
;__Lib_System_MSP432P.c, 533 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency50:
;__Lib_System_MSP432P.c, 534 :: 		
0x03EE	0x4A42    LDR	R2, [PC, #264]
0x03F0	0x6812    LDR	R2, [R2, #0]
0x03F2	0xF0020201  AND	R2, R2, #1
0x03F6	0xB1D2    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency51
;__Lib_System_MSP432P.c, 535 :: 		
0x03F8	0xF2400001  MOVW	R0, #1
0x03FC	0xF7FFFF3E  BL	__Lib_System_MSP432P_CS_ClearInterruptFlag+0
;__Lib_System_MSP432P.c, 536 :: 		
0x0400	0x4A3D    LDR	R2, [PC, #244]
0x0402	0x6812    LDR	R2, [R2, #0]
0x0404	0xF0020201  AND	R2, R2, #1
0x0408	0xB18A    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency52
;__Lib_System_MSP432P.c, 537 :: 		
0x040A	0x4A3C    LDR	R2, [PC, #240]
0x040C	0x6812    LDR	R2, [R2, #0]
0x040E	0xF4024200  AND	R2, R2, #32768
0x0412	0xB12A    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency53
;__Lib_System_MSP432P.c, 538 :: 		
0x0414	0xF44F32FA  MOV	R2, #128000
0x0418	0xFB92F2F3  SDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x041C	0x4610    MOV	R0, R2
0x041E	0xE066    B	L_end_CS_ComputeClockFrequency
L___Lib_System_MSP432P_CS_ComputeClockFrequency53:
;__Lib_System_MSP432P.c, 540 :: 		
; calcDivider start address is: 12 (R3)
0x0420	0xF2480200  MOVW	R2, #32768
0x0424	0xFBB2F2F3  UDIV	R2, R2, R3
0x0428	0xB292    UXTH	R2, R2
; calcDivider end address is: 12 (R3)
0x042A	0xB290    UXTH	R0, R2
0x042C	0xE05F    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 541 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency52:
;__Lib_System_MSP432P.c, 542 :: 		
; calcDivider start address is: 12 (R3)
L___Lib_System_MSP432P_CS_ComputeClockFrequency51:
;__Lib_System_MSP432P.c, 543 :: 		
0x042E	0x4A34    LDR	R2, [PC, #208]
0x0430	0x6812    LDR	R2, [R2, #0]
0x0432	0xFBB2F2F3  UDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x0436	0x4610    MOV	R0, R2
0x0438	0xE059    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 546 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency55:
;__Lib_System_MSP432P.c, 547 :: 		
; calcDivider start address is: 12 (R3)
0x043A	0x4A2F    LDR	R2, [PC, #188]
0x043C	0x6812    LDR	R2, [R2, #0]
0x043E	0xF0020202  AND	R2, R2, #2
0x0442	0xB1D2    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency56
;__Lib_System_MSP432P.c, 548 :: 		
0x0444	0xF2400002  MOVW	R0, #2
0x0448	0xF7FFFF18  BL	__Lib_System_MSP432P_CS_ClearInterruptFlag+0
;__Lib_System_MSP432P.c, 549 :: 		
0x044C	0x4A2A    LDR	R2, [PC, #168]
0x044E	0x6812    LDR	R2, [R2, #0]
0x0450	0xF0020202  AND	R2, R2, #2
0x0454	0xB18A    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency57
;__Lib_System_MSP432P.c, 550 :: 		
0x0456	0x4A29    LDR	R2, [PC, #164]
0x0458	0x6812    LDR	R2, [R2, #0]
0x045A	0xF4024200  AND	R2, R2, #32768
0x045E	0xB12A    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency58
;__Lib_System_MSP432P.c, 551 :: 		
0x0460	0xF44F32FA  MOV	R2, #128000
0x0464	0xFB92F2F3  SDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x0468	0x4610    MOV	R0, R2
0x046A	0xE040    B	L_end_CS_ComputeClockFrequency
L___Lib_System_MSP432P_CS_ComputeClockFrequency58:
;__Lib_System_MSP432P.c, 553 :: 		
; calcDivider start address is: 12 (R3)
0x046C	0xF2480200  MOVW	R2, #32768
0x0470	0xFBB2F2F3  UDIV	R2, R2, R3
0x0474	0xB292    UXTH	R2, R2
; calcDivider end address is: 12 (R3)
0x0476	0xB290    UXTH	R0, R2
0x0478	0xE039    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 554 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency57:
;__Lib_System_MSP432P.c, 555 :: 		
; calcDivider start address is: 12 (R3)
L___Lib_System_MSP432P_CS_ComputeClockFrequency56:
;__Lib_System_MSP432P.c, 556 :: 		
0x047A	0x4A22    LDR	R2, [PC, #136]
0x047C	0x6812    LDR	R2, [R2, #0]
0x047E	0xFBB2F2F3  UDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x0482	0x4610    MOV	R0, R2
0x0484	0xE033    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 559 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency60:
;__Lib_System_MSP432P.c, 560 :: 		
; calcDivider start address is: 12 (R3)
0x0486	0x4A20    LDR	R2, [PC, #128]
0x0488	0x6812    LDR	R2, [R2, #0]
0x048A	0xFBB2F2F3  UDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x048E	0x4610    MOV	R0, R2
0x0490	0xE02D    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 563 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency61:
;__Lib_System_MSP432P.c, 564 :: 		
; calcDivider start address is: 12 (R3)
0x0492	0x4A1A    LDR	R2, [PC, #104]
0x0494	0x6812    LDR	R2, [R2, #0]
0x0496	0xF4024200  AND	R2, R2, #32768
0x049A	0xB12A    CBZ	R2, L___Lib_System_MSP432P_CS_ComputeClockFrequency62
;__Lib_System_MSP432P.c, 565 :: 		
0x049C	0xF44F32FA  MOV	R2, #128000
0x04A0	0xFB92F2F3  SDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x04A4	0x4610    MOV	R0, R2
0x04A6	0xE022    B	L_end_CS_ComputeClockFrequency
L___Lib_System_MSP432P_CS_ComputeClockFrequency62:
;__Lib_System_MSP432P.c, 567 :: 		
; calcDivider start address is: 12 (R3)
0x04A8	0xF2480200  MOVW	R2, #32768
0x04AC	0xFBB2F2F3  UDIV	R2, R2, R3
0x04B0	0xB292    UXTH	R2, R2
; calcDivider end address is: 12 (R3)
0x04B2	0xB290    UXTH	R0, R2
0x04B4	0xE01B    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 569 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency64:
;__Lib_System_MSP432P.c, 570 :: 		
; calcDivider start address is: 12 (R3)
0x04B6	0xF7FFFEA3  BL	__Lib_System_MSP432P_CS_getDCOFrequency+0
0x04BA	0xFBB0F2F3  UDIV	R2, R0, R3
; calcDivider end address is: 12 (R3)
0x04BE	0x4610    MOV	R0, R2
0x04C0	0xE015    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 572 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency65:
;__Lib_System_MSP432P.c, 573 :: 		
; calcDivider start address is: 12 (R3)
0x04C2	0x4A12    LDR	R2, [PC, #72]
0x04C4	0x6812    LDR	R2, [R2, #0]
0x04C6	0xFBB2F2F3  UDIV	R2, R2, R3
; calcDivider end address is: 12 (R3)
0x04CA	0x4610    MOV	R0, R2
0x04CC	0xE00F    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 575 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency66:
;__Lib_System_MSP432P.c, 576 :: 		
0x04CE	0x2000    MOVS	R0, #0
0x04D0	0xE00D    B	L_end_CS_ComputeClockFrequency
;__Lib_System_MSP432P.c, 577 :: 		
L___Lib_System_MSP432P_CS_ComputeClockFrequency48:
; calcDivider start address is: 12 (R3)
; source start address is: 8 (R2)
0x04D2	0x2A00    CMP	R2, #0
0x04D4	0xF43FAF8B  BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency50
0x04D8	0x2A05    CMP	R2, #5
0x04DA	0xD0AE    BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency55
0x04DC	0x2A01    CMP	R2, #1
0x04DE	0xD0D2    BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency60
0x04E0	0x2A02    CMP	R2, #2
0x04E2	0xD0D6    BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency61
0x04E4	0x2A03    CMP	R2, #3
0x04E6	0xD0E6    BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency64
0x04E8	0x2A04    CMP	R2, #4
0x04EA	0xD0EA    BEQ	L___Lib_System_MSP432P_CS_ComputeClockFrequency65
; source end address is: 8 (R2)
; calcDivider end address is: 12 (R3)
0x04EC	0xE7EF    B	L___Lib_System_MSP432P_CS_ComputeClockFrequency66
;__Lib_System_MSP432P.c, 578 :: 		
L_end_CS_ComputeClockFrequency:
0x04EE	0xF8DDE000  LDR	LR, [SP, #0]
0x04F2	0xB001    ADD	SP, SP, #4
0x04F4	0x4770    BX	LR
0x04F6	0xBF00    NOP
0x04F8	0x04484001  	CS_CSIFG+0
0x04FC	0x04304001  	CS_CSCLKEN+0
0x0500	0x00DC2000  	__Lib_System_MSP432P_lfxtFreq+0
0x0504	0x00E02000  	__Lib_System_MSP432P_hfxtFreq+0
0x0508	0x00702000  	__Lib_System_MSP432P_CS_VLOCLK_FREQUENCY+0
0x050C	0x00742000  	__Lib_System_MSP432P_CS_MODCLK_FREQUENCY+0
; end of __Lib_System_MSP432P_CS_ComputeClockFrequency
__Lib_System_MSP432P_CS_GetDividerValue:
;__Lib_System_MSP432P.c, 459 :: 		
; divider start address is: 0 (R0)
0x01F0	0xB081    SUB	SP, SP, #4
; divider end address is: 0 (R0)
; divider start address is: 0 (R0)
;__Lib_System_MSP432P.c, 460 :: 		
0x01F2	0x2101    MOVS	R1, #1
0x01F4	0xB209    SXTH	R1, R1
0x01F6	0x4081    LSLS	R1, R0
0x01F8	0xB209    SXTH	R1, R1
; divider end address is: 0 (R0)
0x01FA	0xB208    SXTH	R0, R1
;__Lib_System_MSP432P.c, 461 :: 		
L_end_CS_GetDividerValue:
0x01FC	0xB001    ADD	SP, SP, #4
0x01FE	0x4770    BX	LR
; end of __Lib_System_MSP432P_CS_GetDividerValue
__Lib_System_MSP432P_CS_ClearInterruptFlag:
;__Lib_System_MSP432P.c, 469 :: 		
; flags start address is: 0 (R0)
0x027C	0xB081    SUB	SP, SP, #4
; flags end address is: 0 (R0)
; flags start address is: 0 (R0)
;__Lib_System_MSP432P.c, 471 :: 		
0x027E	0x4A07    LDR	R2, [PC, #28]
0x0280	0x4907    LDR	R1, [PC, #28]
0x0282	0x600A    STR	R2, [R1, #0]
;__Lib_System_MSP432P.c, 472 :: 		
0x0284	0x4907    LDR	R1, [PC, #28]
0x0286	0x6809    LDR	R1, [R1, #0]
0x0288	0xEA410200  ORR	R2, R1, R0, LSL #0
; flags end address is: 0 (R0)
0x028C	0x4905    LDR	R1, [PC, #20]
0x028E	0x600A    STR	R2, [R1, #0]
;__Lib_System_MSP432P.c, 474 :: 		
0x0290	0x2201    MOVS	R2, #1
0x0292	0x4903    LDR	R1, [PC, #12]
0x0294	0x600A    STR	R2, [R1, #0]
;__Lib_System_MSP432P.c, 475 :: 		
L_end_CS_ClearInterruptFlag:
0x0296	0xB001    ADD	SP, SP, #4
0x0298	0x4770    BX	LR
0x029A	0xBF00    NOP
0x029C	0x695A0000  	#26970
0x02A0	0x04004001  	CS_CSKEY+0
0x02A4	0x04504001  	CS_CSCLRIFG+0
; end of __Lib_System_MSP432P_CS_ClearInterruptFlag
__Lib_System_MSP432P_CS_getDCOFrequency:
;__Lib_System_MSP432P.c, 483 :: 		
0x0200	0xB082    SUB	SP, SP, #8
;__Lib_System_MSP432P.c, 486 :: 		
0x0202	0x4817    LDR	R0, [PC, #92]
0x0204	0x6800    LDR	R0, [R0, #0]
0x0206	0xF40021E0  AND	R1, R0, #458752
0x020A	0xE014    B	L___Lib_System_MSP432P_CS_getDCOFrequency39
;__Lib_System_MSP432P.c, 488 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency41:
;__Lib_System_MSP432P.c, 489 :: 		
0x020C	0x4815    LDR	R0, [PC, #84]
0x020E	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 490 :: 		
0x0210	0xE023    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 491 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency42:
;__Lib_System_MSP432P.c, 492 :: 		
0x0212	0x4815    LDR	R0, [PC, #84]
0x0214	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 493 :: 		
0x0216	0xE020    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 494 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency43:
;__Lib_System_MSP432P.c, 495 :: 		
0x0218	0x4814    LDR	R0, [PC, #80]
0x021A	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 496 :: 		
0x021C	0xE01D    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 497 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency44:
;__Lib_System_MSP432P.c, 498 :: 		
0x021E	0x4814    LDR	R0, [PC, #80]
0x0220	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 499 :: 		
0x0222	0xE01A    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 500 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency45:
;__Lib_System_MSP432P.c, 501 :: 		
0x0224	0x4813    LDR	R0, [PC, #76]
0x0226	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 502 :: 		
0x0228	0xE017    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 503 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency46:
;__Lib_System_MSP432P.c, 504 :: 		
0x022A	0x4813    LDR	R0, [PC, #76]
0x022C	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 505 :: 		
0x022E	0xE014    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
;__Lib_System_MSP432P.c, 506 :: 		
L___Lib_System_MSP432P_CS_getDCOFrequency47:
;__Lib_System_MSP432P.c, 507 :: 		
0x0230	0x2000    MOVS	R0, #0
0x0232	0x9001    STR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 508 :: 		
0x0234	0xE011    B	L___Lib_System_MSP432P_CS_getDCOFrequency40
L___Lib_System_MSP432P_CS_getDCOFrequency39:
0x0236	0x2900    CMP	R1, #0
0x0238	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency41
0x023A	0xF5B13F80  CMP	R1, #65536
0x023E	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency42
0x0240	0xF5B13F00  CMP	R1, #131072
0x0244	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency43
0x0246	0xF5B13F40  CMP	R1, #196608
0x024A	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency44
0x024C	0xF5B12F80  CMP	R1, #262144
0x0250	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency45
0x0252	0xF5B12FA0  CMP	R1, #327680
0x0256	0xD0E8    BEQ	L___Lib_System_MSP432P_CS_getDCOFrequency46
0x0258	0xE7EA    B	L___Lib_System_MSP432P_CS_getDCOFrequency47
L___Lib_System_MSP432P_CS_getDCOFrequency40:
;__Lib_System_MSP432P.c, 510 :: 		
0x025A	0x9801    LDR	R0, [SP, #4]
;__Lib_System_MSP432P.c, 511 :: 		
L_end_CS_getDCOFrequency:
0x025C	0xB002    ADD	SP, SP, #8
0x025E	0x4770    BX	LR
0x0260	0x04044001  	CS_CSCTL0+0
0x0264	0xE3600016  	#1500000
0x0268	0xC6C0002D  	#3000000
0x026C	0x8D80005B  	#6000000
0x0270	0x1B0000B7  	#12000000
0x0274	0x3600016E  	#24000000
0x0278	0x6C0002DC  	#48000000
; end of __Lib_System_MSP432P_CS_getDCOFrequency
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_MSP.c, 202 :: 		
; module start address is: 0 (R0)
0x0CEC	0xB081    SUB	SP, SP, #4
0x0CEE	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_MSP.c, 206 :: 		
; cnt start address is: 40 (R10)
0x0CF2	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; cnt end address is: 40 (R10)
0x0CF6	0x4681    MOV	R9, R0
L_GPIO_Alternate_Function_Enable27:
; cnt start address is: 40 (R10)
; module start address is: 36 (R9)
0x0CF8	0xF10901D8  ADD	R1, R9, #216
0x0CFC	0x7809    LDRB	R1, [R1, #0]
0x0CFE	0x458A    CMP	R10, R1
0x0D00	0xD23A    BCS	L_GPIO_Alternate_Function_Enable28
;__Lib_GPIO_MSP.c, 207 :: 		
0x0D02	0x210C    MOVS	R1, #12
0x0D04	0xFB0AF101  MUL	R1, R10, R1
0x0D08	0xEB090101  ADD	R1, R9, R1, LSL #0
; tmpPinDsc start address is: 44 (R11)
0x0D0C	0x468B    MOV	R11, R1
;__Lib_GPIO_MSP.c, 209 :: 		
0x0D0E	0xF10B0108  ADD	R1, R11, #8
0x0D12	0x7809    LDRB	R1, [R1, #0]
0x0D14	0x291F    CMP	R1, #31
0x0D16	0xD115    BNE	L_GPIO_Alternate_Function_Enable30
;__Lib_GPIO_MSP.c, 210 :: 		
0x0D18	0xF10B0108  ADD	R1, R11, #8
0x0D1C	0x7809    LDRB	R1, [R1, #0]
0x0D1E	0xB2CC    UXTB	R4, R1
0x0D20	0xF10B0106  ADD	R1, R11, #6
0x0D24	0x8809    LDRH	R1, [R1, #0]
0x0D26	0xB28B    UXTH	R3, R1
0x0D28	0xF10B0104  ADD	R1, R11, #4
0x0D2C	0x8809    LDRH	R1, [R1, #0]
0x0D2E	0xB28A    UXTH	R2, R1
0x0D30	0xF8DB1000  LDR	R1, [R11, #0]
; tmpPinDsc end address is: 44 (R11)
0x0D34	0x4608    MOV	R0, R1
0x0D36	0xB291    UXTH	R1, R2
0x0D38	0x2200    MOVS	R2, __GPIO_DIR_INPUT
0x0D3A	0xB410    PUSH	(R4)
0x0D3C	0xF000FB88  BL	_GPIO_Config+0
0x0D40	0xB001    ADD	SP, SP, #4
0x0D42	0xE014    B	L_GPIO_Alternate_Function_Enable31
L_GPIO_Alternate_Function_Enable30:
;__Lib_GPIO_MSP.c, 212 :: 		
; tmpPinDsc start address is: 44 (R11)
0x0D44	0xF10B0108  ADD	R1, R11, #8
0x0D48	0x7809    LDRB	R1, [R1, #0]
0x0D4A	0xB2CC    UXTB	R4, R1
0x0D4C	0xF10B0106  ADD	R1, R11, #6
0x0D50	0x8809    LDRH	R1, [R1, #0]
0x0D52	0xB28B    UXTH	R3, R1
0x0D54	0xF10B0104  ADD	R1, R11, #4
0x0D58	0x8809    LDRH	R1, [R1, #0]
0x0D5A	0xB28A    UXTH	R2, R1
0x0D5C	0xF8DB1000  LDR	R1, [R11, #0]
; tmpPinDsc end address is: 44 (R11)
0x0D60	0x4608    MOV	R0, R1
0x0D62	0xB291    UXTH	R1, R2
0x0D64	0x22FF    MOVS	R2, __GPIO_DIR_NO_CHANGE
0x0D66	0xB410    PUSH	(R4)
0x0D68	0xF000FB72  BL	_GPIO_Config+0
0x0D6C	0xB001    ADD	SP, SP, #4
L_GPIO_Alternate_Function_Enable31:
;__Lib_GPIO_MSP.c, 206 :: 		
0x0D6E	0xF10A0A01  ADD	R10, R10, #1
0x0D72	0xFA5FFA8A  UXTB	R10, R10
;__Lib_GPIO_MSP.c, 213 :: 		
; module end address is: 36 (R9)
; cnt end address is: 40 (R10)
0x0D76	0xE7BF    B	L_GPIO_Alternate_Function_Enable27
L_GPIO_Alternate_Function_Enable28:
;__Lib_GPIO_MSP.c, 214 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0D78	0xF8DDE000  LDR	LR, [SP, #0]
0x0D7C	0xB001    ADD	SP, SP, #4
0x0D7E	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_I2C_MSP_I2C_disableModule:
;__Lib_I2C_MSP.c, 77 :: 		
; I2C_BASE start address is: 0 (R0)
0x0CB4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_MSP.c, 78 :: 		
0x0CB6	0x2201    MOVS	R2, #1
0x0CB8	0x8801    LDRH	R1, [R0, #0]
0x0CBA	0xF3620100  BFI	R1, R2, #0, #1
0x0CBE	0x8001    STRH	R1, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 79 :: 		
L_end_I2C_disableModule:
0x0CC0	0xB001    ADD	SP, SP, #4
0x0CC2	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_disableModule
__Lib_I2C_MSP_I2C_SetClockSource:
;__Lib_I2C_MSP.c, 85 :: 		
; clockSource start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0CC4	0xB081    SUB	SP, SP, #4
; clockSource end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; clockSource start address is: 4 (R1)
;__Lib_I2C_MSP.c, 86 :: 		
0x0CC6	0x8803    LDRH	R3, [R0, #0]
0x0CC8	0xF64F723F  MOVW	R2, #65343
0x0CCC	0xEA030202  AND	R2, R3, R2, LSL #0
0x0CD0	0x8002    STRH	R2, [R0, #0]
;__Lib_I2C_MSP.c, 87 :: 		
0x0CD2	0x8802    LDRH	R2, [R0, #0]
0x0CD4	0x430A    ORRS	R2, R1
; clockSource end address is: 4 (R1)
0x0CD6	0x8002    STRH	R2, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 88 :: 		
L_end_I2C_SetClockSource:
0x0CD8	0xB001    ADD	SP, SP, #4
0x0CDA	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_SetClockSource
__Lib_I2C_MSP_I2C_setMode:
;__Lib_I2C_MSP.c, 99 :: 		
; mode start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0CDC	0xB081    SUB	SP, SP, #4
; mode end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_I2C_MSP.c, 100 :: 		
0x0CDE	0xB28B    UXTH	R3, R1
; mode end address is: 4 (R1)
0x0CE0	0x8802    LDRH	R2, [R0, #0]
0x0CE2	0xF3631204  BFI	R2, R3, #4, #1
0x0CE6	0x8002    STRH	R2, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 101 :: 		
L_end_I2C_setMode:
0x0CE8	0xB001    ADD	SP, SP, #4
0x0CEA	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_setMode
__Lib_I2C_MSP_I2C_enableModule:
;__Lib_I2C_MSP.c, 81 :: 		
; I2C_BASE start address is: 0 (R0)
0x1084	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_MSP.c, 82 :: 		
0x1086	0x2200    MOVS	R2, #0
0x1088	0x8801    LDRH	R1, [R0, #0]
0x108A	0xF3620100  BFI	R1, R2, #0, #1
0x108E	0x8001    STRH	R1, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 83 :: 		
L_end_I2C_enableModule:
0x1090	0xB001    ADD	SP, SP, #4
0x1092	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_enableModule
__Lib_I2C_MSP_I2C_clearInterruptFlag:
;__Lib_I2C_MSP.c, 103 :: 		
; mask start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1094	0xB081    SUB	SP, SP, #4
; mask end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; mask start address is: 4 (R1)
;__Lib_I2C_MSP.c, 104 :: 		
0x1096	0xF200042C  ADDW	R4, R0, #44
; I2C_BASE end address is: 0 (R0)
0x109A	0x43CB    MVN	R3, R1
0x109C	0xB29B    UXTH	R3, R3
; mask end address is: 4 (R1)
0x109E	0x8822    LDRH	R2, [R4, #0]
0x10A0	0x401A    ANDS	R2, R3
0x10A2	0x8022    STRH	R2, [R4, #0]
;__Lib_I2C_MSP.c, 105 :: 		
L_end_I2C_clearInterruptFlag:
0x10A4	0xB001    ADD	SP, SP, #4
0x10A6	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_clearInterruptFlag
__Lib_I2C_MSP_I2C_enableInterrupt:
;__Lib_I2C_MSP.c, 107 :: 		
; mask start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x10A8	0xB081    SUB	SP, SP, #4
; mask end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; mask start address is: 4 (R1)
;__Lib_I2C_MSP.c, 108 :: 		
0x10AA	0xF200032A  ADDW	R3, R0, #42
; I2C_BASE end address is: 0 (R0)
0x10AE	0x881A    LDRH	R2, [R3, #0]
0x10B0	0x430A    ORRS	R2, R1
; mask end address is: 4 (R1)
0x10B2	0x801A    STRH	R2, [R3, #0]
;__Lib_I2C_MSP.c, 109 :: 		
L_end_I2C_enableInterrupt:
0x10B4	0xB001    ADD	SP, SP, #4
0x10B6	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_enableInterrupt
clicker_2_MSP432__i2cInit_2:
;__c2_msp432_i2c.c, 45 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
0x1FF4	0xB081    SUB	SP, SP, #4
0x1FF6	0xF8CDE000  STR	LR, [SP, #0]
;__c2_msp432_i2c.c, 47 :: 		I2C1_Init();
0x1FFA	0xF7FFFCE1  BL	_I2C1_Init+0
;__c2_msp432_i2c.c, 48 :: 		return _MIKROBUS_OK;
0x1FFE	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_i2c.c, 49 :: 		}
L_end__i2cInit_2:
0x2000	0xF8DDE000  LDR	LR, [SP, #0]
0x2004	0xB001    ADD	SP, SP, #4
0x2006	0x4770    BX	LR
; end of clicker_2_MSP432__i2cInit_2
clicker_2_MSP432__i2cInit_3:
;__c2_msp432_i2c.c, 51 :: 		static T_mikrobus_ret _i2cInit_3(const uint32_t* cfg)
0x1FE0	0xB081    SUB	SP, SP, #4
0x1FE2	0xF8CDE000  STR	LR, [SP, #0]
;__c2_msp432_i2c.c, 53 :: 		I2C2_Init();
0x1FE6	0xF7FFFD4D  BL	_I2C2_Init+0
;__c2_msp432_i2c.c, 54 :: 		return _MIKROBUS_OK;
0x1FEA	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_i2c.c, 55 :: 		}
L_end__i2cInit_3:
0x1FEC	0xF8DDE000  LDR	LR, [SP, #0]
0x1FF0	0xB001    ADD	SP, SP, #4
0x1FF2	0x4770    BX	LR
; end of clicker_2_MSP432__i2cInit_3
_I2C2_Init:
;__Lib_I2C_MSP.c, 599 :: 		
0x1A84	0xB081    SUB	SP, SP, #4
0x1A86	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_MSP.c, 600 :: 		
0x1A8A	0x4B05    LDR	R3, [PC, #20]
0x1A8C	0xF2400280  MOVW	R2, #128
0x1A90	0x4904    LDR	R1, [PC, #16]
0x1A92	0x4805    LDR	R0, [PC, #20]
0x1A94	0xF7FFFC1C  BL	__Lib_I2C_MSP_I2Cx_Init_Advanced+0
;__Lib_I2C_MSP.c, 601 :: 		
L_end_I2C2_Init:
0x1A98	0xF8DDE000  LDR	LR, [SP, #0]
0x1A9C	0xB001    ADD	SP, SP, #4
0x1A9E	0x4770    BX	LR
0x1AA0	0x3A340000  	__GPIO_MODULE_I2CB2_B67+0
0x1AA4	0x86A00001  	#100000
0x1AA8	0x28004000  	EUSCI_B2_UCB2CTLW0+0
; end of _I2C2_Init
clicker_2_MSP432__i2cInit_4:
;__c2_msp432_i2c.c, 57 :: 		static T_mikrobus_ret _i2cInit_4(const uint32_t* cfg)
0x1FCC	0xB081    SUB	SP, SP, #4
0x1FCE	0xF8CDE000  STR	LR, [SP, #0]
;__c2_msp432_i2c.c, 59 :: 		I2C2_Init();
0x1FD2	0xF7FFFD57  BL	_I2C2_Init+0
;__c2_msp432_i2c.c, 60 :: 		return _MIKROBUS_OK;
0x1FD6	0x2000    MOVS	R0, __MIKROBUS_OK
;__c2_msp432_i2c.c, 61 :: 		}
L_end__i2cInit_4:
0x1FD8	0xF8DDE000  LDR	LR, [SP, #0]
0x1FDC	0xB001    ADD	SP, SP, #4
0x1FDE	0x4770    BX	LR
; end of clicker_2_MSP432__i2cInit_4
_mikrobus_logInit:
;clicker_2_MSP432.c, 282 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x3078	0xB081    SUB	SP, SP, #4
0x307A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;clicker_2_MSP432.c, 284 :: 		switch( port )
0x307E	0xE015    B	L_mikrobus_logInit177
; port end address is: 0 (R0)
;clicker_2_MSP432.c, 287 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit179:
0x3080	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x3082	0xF7FFFCAF  BL	clicker_2_MSP432__log_init1+0
0x3086	0xE01C    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 290 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit180:
; baud start address is: 4 (R1)
0x3088	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x308A	0xF7FFFC99  BL	clicker_2_MSP432__log_init2+0
0x308E	0xE018    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 293 :: 		case _MIKROBUS3: return _log_init3( baud );
L_mikrobus_logInit181:
; baud start address is: 4 (R1)
0x3090	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x3092	0xF7FFFCB9  BL	clicker_2_MSP432__log_init3+0
0x3096	0xE014    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 296 :: 		case _MIKROBUS4: return _log_init4( baud );
L_mikrobus_logInit182:
; baud start address is: 4 (R1)
0x3098	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x309A	0xF7FFFCD9  BL	clicker_2_MSP432__log_init4+0
0x309E	0xE010    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 305 :: 		case _LOG_USBUART : return _log_initUart( baud );
L_mikrobus_logInit183:
; baud start address is: 4 (R1)
0x30A0	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x30A2	0xF7FFFCC3  BL	clicker_2_MSP432__log_initUart+0
0x30A6	0xE00C    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 313 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit184:
0x30A8	0x2001    MOVS	R0, #1
0x30AA	0xE00A    B	L_end_mikrobus_logInit
;clicker_2_MSP432.c, 314 :: 		}
L_mikrobus_logInit177:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x30AC	0x2800    CMP	R0, #0
0x30AE	0xD0E7    BEQ	L_mikrobus_logInit179
0x30B0	0x2801    CMP	R0, #1
0x30B2	0xD0E9    BEQ	L_mikrobus_logInit180
0x30B4	0x2802    CMP	R0, #2
0x30B6	0xD0EB    BEQ	L_mikrobus_logInit181
0x30B8	0x2803    CMP	R0, #3
0x30BA	0xD0ED    BEQ	L_mikrobus_logInit182
0x30BC	0x2810    CMP	R0, #16
0x30BE	0xD0EF    BEQ	L_mikrobus_logInit183
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x30C0	0xE7F2    B	L_mikrobus_logInit184
;clicker_2_MSP432.c, 316 :: 		}
L_end_mikrobus_logInit:
0x30C2	0xF8DDE000  LDR	LR, [SP, #0]
0x30C6	0xB001    ADD	SP, SP, #4
0x30C8	0x4770    BX	LR
; end of _mikrobus_logInit
clicker_2_MSP432__log_init1:
;__c2_msp432_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x29E4	0xB081    SUB	SP, SP, #4
0x29E6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__c2_msp432_log.c, 25 :: 		UART2_Init( baud );
; baud end address is: 0 (R0)
0x29EA	0xF7FFF87D  BL	_UART2_Init+0
;__c2_msp432_log.c, 26 :: 		logger = UART2_Write;
0x29EE	0x4A04    LDR	R2, [PC, #16]
0x29F0	0x4904    LDR	R1, [PC, #16]
0x29F2	0x600A    STR	R2, [R1, #0]
;__c2_msp432_log.c, 27 :: 		return 0;
0x29F4	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 28 :: 		}
L_end__log_init1:
0x29F6	0xF8DDE000  LDR	LR, [SP, #0]
0x29FA	0xB001    ADD	SP, SP, #4
0x29FC	0x4770    BX	LR
0x29FE	0xBF00    NOP
0x2A00	0x18610000  	_UART2_Write+0
0x2A04	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_init1
_UART2_Init:
;__Lib_UART_MSP.c, 797 :: 		
; baudRate start address is: 0 (R0)
0x1AE8	0xB081    SUB	SP, SP, #4
0x1AEA	0xF8CDE000  STR	LR, [SP, #0]
0x1AEE	0x4684    MOV	R12, R0
; baudRate end address is: 0 (R0)
; baudRate start address is: 48 (R12)
;__Lib_UART_MSP.c, 798 :: 		
0x1AF0	0x4A0B    LDR	R2, [PC, #44]
0x1AF2	0x490C    LDR	R1, [PC, #48]
0x1AF4	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 799 :: 		
0x1AF6	0x4A0C    LDR	R2, [PC, #48]
0x1AF8	0x490C    LDR	R1, [PC, #48]
0x1AFA	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 800 :: 		
0x1AFC	0x4A0C    LDR	R2, [PC, #48]
0x1AFE	0x490D    LDR	R1, [PC, #52]
0x1B00	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 801 :: 		
0x1B02	0x4A0D    LDR	R2, [PC, #52]
0x1B04	0x490D    LDR	R1, [PC, #52]
0x1B06	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 803 :: 		
0x1B08	0x480D    LDR	R0, [PC, #52]
0x1B0A	0xF7FFF8EF  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_UART_MSP.c, 804 :: 		
0x1B0E	0x4661    MOV	R1, R12
; baudRate end address is: 48 (R12)
0x1B10	0x480C    LDR	R0, [PC, #48]
0x1B12	0xF7FFFDFD  BL	__Lib_UART_MSP_UARTx_Init+0
;__Lib_UART_MSP.c, 805 :: 		
L_end_UART2_Init:
0x1B16	0xF8DDE000  LDR	LR, [SP, #0]
0x1B1A	0xB001    ADD	SP, SP, #4
0x1B1C	0x4770    BX	LR
0x1B1E	0xBF00    NOP
0x1B20	0x18610000  	_UART2_Write+0
0x1B24	0x00E82000  	_UART_Wr_Ptr+0
0x1B28	0xFFFFFFFF  	_UART2_Read+0
0x1B2C	0x00EC2000  	_UART_Rd_Ptr+0
0x1B30	0xFFFFFFFF  	_UART2_Data_Ready+0
0x1B34	0x00F02000  	_UART_Rdy_Ptr+0
0x1B38	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x1B3C	0x00F42000  	_UART_Tx_Idle_Ptr+0
0x1B40	0x36C40000  	__GPIO_MODULE_UARTA2_B23+0
0x1B44	0x18004000  	EUSCI_A2_UCA2CTLW0+0
; end of _UART2_Init
__Lib_UART_MSP_UARTx_Init:
;__Lib_UART_MSP.c, 295 :: 		
; baudRate start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x1710	0xB081    SUB	SP, SP, #4
0x1712	0xF8CDE000  STR	LR, [SP, #0]
0x1716	0x4607    MOV	R7, R0
0x1718	0x460C    MOV	R4, R1
; baudRate end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 28 (R7)
; baudRate start address is: 16 (R4)
;__Lib_UART_MSP.c, 297 :: 		
0x171A	0x4638    MOV	R0, R7
0x171C	0xF7FFF954  BL	__Lib_UART_MSP_UARTx_Disable+0
;__Lib_UART_MSP.c, 299 :: 		
0x1720	0xF2400180  MOVW	R1, #128
0x1724	0x4638    MOV	R0, R7
0x1726	0xF7FFF965  BL	__Lib_UART_MSP_UARTx_SetClockSource+0
;__Lib_UART_MSP.c, 301 :: 		
0x172A	0xF2400100  MOVW	R1, #0
0x172E	0x4638    MOV	R0, R7
0x1730	0xF7FFF952  BL	__Lib_UART_MSP_UARTx_SetSB+0
;__Lib_UART_MSP.c, 303 :: 		
0x1734	0xF2400100  MOVW	R1, #0
0x1738	0x4638    MOV	R0, R7
0x173A	0xF7FFF825  BL	__Lib_UART_MSP_UARTx_SetStopBits+0
;__Lib_UART_MSP.c, 305 :: 		
0x173E	0xF2400100  MOVW	R1, #0
0x1742	0x4638    MOV	R0, R7
0x1744	0xF7FFF830  BL	__Lib_UART_MSP_UARTx_SetParity+0
;__Lib_UART_MSP.c, 307 :: 		
0x1748	0xF2400100  MOVW	R1, #0
0x174C	0x4638    MOV	R0, R7
0x174E	0xF7FFFA67  BL	__Lib_UART_MSP_UARTx_SetMode+0
;__Lib_UART_MSP.c, 309 :: 		
0x1752	0xF2400100  MOVW	R1, #0
0x1756	0x4638    MOV	R0, R7
0x1758	0xF7FFFA9C  BL	__Lib_UART_MSP_UARTx_SetDataLength+0
;__Lib_UART_MSP.c, 311 :: 		
0x175C	0x4621    MOV	R1, R4
; baudRate end address is: 16 (R4)
0x175E	0x4638    MOV	R0, R7
0x1760	0xF7FFF972  BL	__Lib_UART_MSP_UARTx_SetBaudRate+0
;__Lib_UART_MSP.c, 313 :: 		
0x1764	0x4638    MOV	R0, R7
; uartBase end address is: 28 (R7)
0x1766	0xF7FFF965  BL	__Lib_UART_MSP_UARTx_Enable+0
;__Lib_UART_MSP.c, 314 :: 		
L_end_UARTx_Init:
0x176A	0xF8DDE000  LDR	LR, [SP, #0]
0x176E	0xB001    ADD	SP, SP, #4
0x1770	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_Init
__Lib_UART_MSP_UARTx_Disable:
;__Lib_UART_MSP.c, 89 :: 		
; uartBase start address is: 0 (R0)
0x09C8	0xB081    SUB	SP, SP, #4
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
;__Lib_UART_MSP.c, 90 :: 		
0x09CA	0x8801    LDRH	R1, [R0, #0]
0x09CC	0xF0410101  ORR	R1, R1, #1
0x09D0	0x8001    STRH	R1, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 91 :: 		
L_end_UARTx_Disable:
0x09D2	0xB001    ADD	SP, SP, #4
0x09D4	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_Disable
__Lib_UART_MSP_UARTx_SetClockSource:
;__Lib_UART_MSP.c, 114 :: 		
; clockSource start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x09F4	0xB081    SUB	SP, SP, #4
; clockSource end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; clockSource start address is: 4 (R1)
;__Lib_UART_MSP.c, 115 :: 		
0x09F6	0x8803    LDRH	R3, [R0, #0]
0x09F8	0xF64F723F  MOVW	R2, #65343
0x09FC	0xEA030202  AND	R2, R3, R2, LSL #0
0x0A00	0x8002    STRH	R2, [R0, #0]
;__Lib_UART_MSP.c, 116 :: 		
0x0A02	0x8802    LDRH	R2, [R0, #0]
0x0A04	0x430A    ORRS	R2, R1
; clockSource end address is: 4 (R1)
0x0A06	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 117 :: 		
L_end_UARTx_SetClockSource:
0x0A08	0xB001    ADD	SP, SP, #4
0x0A0A	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetClockSource
__Lib_UART_MSP_UARTx_SetSB:
;__Lib_UART_MSP.c, 128 :: 		
; sb start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x09D8	0xB081    SUB	SP, SP, #4
; sb end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; sb start address is: 4 (R1)
;__Lib_UART_MSP.c, 129 :: 		
0x09DA	0xB931    CBNZ	R1, L___Lib_UART_MSP_UARTx_SetSB8
; sb end address is: 4 (R1)
;__Lib_UART_MSP.c, 130 :: 		
0x09DC	0x8803    LDRH	R3, [R0, #0]
0x09DE	0xF64D72FF  MOVW	R2, #57343
0x09E2	0xEA030202  AND	R2, R3, R2, LSL #0
0x09E6	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
0x09E8	0xE002    B	L___Lib_UART_MSP_UARTx_SetSB9
L___Lib_UART_MSP_UARTx_SetSB8:
;__Lib_UART_MSP.c, 132 :: 		
; sb start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x09EA	0x8802    LDRH	R2, [R0, #0]
0x09EC	0x430A    ORRS	R2, R1
; sb end address is: 4 (R1)
0x09EE	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
L___Lib_UART_MSP_UARTx_SetSB9:
;__Lib_UART_MSP.c, 133 :: 		
L_end_UARTx_SetSB:
0x09F0	0xB001    ADD	SP, SP, #4
0x09F2	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetSB
__Lib_UART_MSP_UARTx_SetStopBits:
;__Lib_UART_MSP.c, 144 :: 		
; stopBits start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0788	0xB081    SUB	SP, SP, #4
; stopBits end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; stopBits start address is: 4 (R1)
;__Lib_UART_MSP.c, 145 :: 		
0x078A	0xF5B16F00  CMP	R1, #2048
0x078E	0xD103    BNE	L___Lib_UART_MSP_UARTx_SetStopBits10
;__Lib_UART_MSP.c, 146 :: 		
0x0790	0x8802    LDRH	R2, [R0, #0]
0x0792	0x430A    ORRS	R2, R1
; stopBits end address is: 4 (R1)
0x0794	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
0x0796	0xE005    B	L___Lib_UART_MSP_UARTx_SetStopBits11
L___Lib_UART_MSP_UARTx_SetStopBits10:
;__Lib_UART_MSP.c, 148 :: 		
; uartBase start address is: 0 (R0)
0x0798	0x8803    LDRH	R3, [R0, #0]
0x079A	0xF24F72FF  MOVW	R2, #63487
0x079E	0xEA030202  AND	R2, R3, R2, LSL #0
0x07A2	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
L___Lib_UART_MSP_UARTx_SetStopBits11:
;__Lib_UART_MSP.c, 149 :: 		
L_end_UARTx_SetStopBits:
0x07A4	0xB001    ADD	SP, SP, #4
0x07A6	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetStopBits
__Lib_UART_MSP_UARTx_SetParity:
;__Lib_UART_MSP.c, 161 :: 		
; parity start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x07A8	0xB081    SUB	SP, SP, #4
; parity end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; parity start address is: 4 (R1)
;__Lib_UART_MSP.c, 162 :: 		
0x07AA	0xE019    B	L___Lib_UART_MSP_UARTx_SetParity12
; parity end address is: 4 (R1)
;__Lib_UART_MSP.c, 163 :: 		
L___Lib_UART_MSP_UARTx_SetParity14:
;__Lib_UART_MSP.c, 164 :: 		
0x07AC	0x8803    LDRH	R3, [R0, #0]
0x07AE	0xF64772FF  MOVW	R2, #32767
0x07B2	0xEA030202  AND	R2, R3, R2, LSL #0
0x07B6	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 165 :: 		
0x07B8	0xE019    B	L___Lib_UART_MSP_UARTx_SetParity13
;__Lib_UART_MSP.c, 168 :: 		
L___Lib_UART_MSP_UARTx_SetParity15:
;__Lib_UART_MSP.c, 169 :: 		
; parity start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x07BA	0x8802    LDRH	R2, [R0, #0]
0x07BC	0xF4424200  ORR	R2, R2, #32768
0x07C0	0x8002    STRH	R2, [R0, #0]
;__Lib_UART_MSP.c, 170 :: 		
0x07C2	0x8802    LDRH	R2, [R0, #0]
0x07C4	0x430A    ORRS	R2, R1
; parity end address is: 4 (R1)
0x07C6	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 171 :: 		
0x07C8	0xE011    B	L___Lib_UART_MSP_UARTx_SetParity13
;__Lib_UART_MSP.c, 174 :: 		
L___Lib_UART_MSP_UARTx_SetParity16:
;__Lib_UART_MSP.c, 175 :: 		
; uartBase start address is: 0 (R0)
0x07CA	0x8802    LDRH	R2, [R0, #0]
0x07CC	0xF4424200  ORR	R2, R2, #32768
0x07D0	0x8002    STRH	R2, [R0, #0]
;__Lib_UART_MSP.c, 176 :: 		
0x07D2	0x8803    LDRH	R3, [R0, #0]
0x07D4	0xF64B72FF  MOVW	R2, #49151
0x07D8	0xEA030202  AND	R2, R3, R2, LSL #0
0x07DC	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 177 :: 		
0x07DE	0xE006    B	L___Lib_UART_MSP_UARTx_SetParity13
;__Lib_UART_MSP.c, 179 :: 		
L___Lib_UART_MSP_UARTx_SetParity12:
; parity start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x07E0	0x2900    CMP	R1, #0
0x07E2	0xD0E3    BEQ	L___Lib_UART_MSP_UARTx_SetParity14
0x07E4	0xF5B14F80  CMP	R1, #16384
0x07E8	0xD0E7    BEQ	L___Lib_UART_MSP_UARTx_SetParity15
0x07EA	0x2900    CMP	R1, #0
0x07EC	0xD0ED    BEQ	L___Lib_UART_MSP_UARTx_SetParity16
; uartBase end address is: 0 (R0)
; parity end address is: 4 (R1)
L___Lib_UART_MSP_UARTx_SetParity13:
;__Lib_UART_MSP.c, 180 :: 		
L_end_UARTx_SetParity:
0x07EE	0xB001    ADD	SP, SP, #4
0x07F0	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetParity
__Lib_UART_MSP_UARTx_SetMode:
;__Lib_UART_MSP.c, 191 :: 		
; mode start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0C20	0xB081    SUB	SP, SP, #4
; mode end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; mode start address is: 4 (R1)
;__Lib_UART_MSP.c, 192 :: 		
0x0C22	0xF5B17F80  CMP	R1, #256
0x0C26	0xD104    BNE	L___Lib_UART_MSP_UARTx_SetMode17
; mode end address is: 4 (R1)
;__Lib_UART_MSP.c, 193 :: 		
0x0C28	0x8802    LDRH	R2, [R0, #0]
0x0C2A	0xF4427280  ORR	R2, R2, #256
0x0C2E	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
0x0C30	0xE005    B	L___Lib_UART_MSP_UARTx_SetMode18
L___Lib_UART_MSP_UARTx_SetMode17:
;__Lib_UART_MSP.c, 195 :: 		
; uartBase start address is: 0 (R0)
0x0C32	0x8803    LDRH	R3, [R0, #0]
0x0C34	0xF64F62FF  MOVW	R2, #65279
0x0C38	0xEA030202  AND	R2, R3, R2, LSL #0
0x0C3C	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
L___Lib_UART_MSP_UARTx_SetMode18:
;__Lib_UART_MSP.c, 196 :: 		
L_end_UARTx_SetMode:
0x0C3E	0xB001    ADD	SP, SP, #4
0x0C40	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetMode
__Lib_UART_MSP_UARTx_SetDataLength:
;__Lib_UART_MSP.c, 207 :: 		
; dataLength start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0C94	0xB081    SUB	SP, SP, #4
; dataLength end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; dataLength start address is: 4 (R1)
;__Lib_UART_MSP.c, 208 :: 		
0x0C96	0xF5B15F80  CMP	R1, #4096
0x0C9A	0xD103    BNE	L___Lib_UART_MSP_UARTx_SetDataLength19
;__Lib_UART_MSP.c, 209 :: 		
0x0C9C	0x8802    LDRH	R2, [R0, #0]
0x0C9E	0x430A    ORRS	R2, R1
; dataLength end address is: 4 (R1)
0x0CA0	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
0x0CA2	0xE005    B	L___Lib_UART_MSP_UARTx_SetDataLength20
L___Lib_UART_MSP_UARTx_SetDataLength19:
;__Lib_UART_MSP.c, 211 :: 		
; uartBase start address is: 0 (R0)
0x0CA4	0x8803    LDRH	R3, [R0, #0]
0x0CA6	0xF64E72FF  MOVW	R2, #61439
0x0CAA	0xEA030202  AND	R2, R3, R2, LSL #0
0x0CAE	0x8002    STRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
L___Lib_UART_MSP_UARTx_SetDataLength20:
;__Lib_UART_MSP.c, 212 :: 		
L_end_UARTx_SetDataLength:
0x0CB0	0xB001    ADD	SP, SP, #4
0x0CB2	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_SetDataLength
__Lib_UART_MSP_UARTx_SetBaudRate:
;__Lib_UART_MSP.c, 240 :: 		
; baudRate start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0A48	0xB088    SUB	SP, SP, #32
0x0A4A	0xF8CDE000  STR	LR, [SP, #0]
0x0A4E	0x4605    MOV	R5, R0
0x0A50	0x460E    MOV	R6, R1
; baudRate end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 20 (R5)
; baudRate start address is: 24 (R6)
;__Lib_UART_MSP.c, 250 :: 		
0x0A52	0xAA04    ADD	R2, SP, #16
0x0A54	0x4610    MOV	R0, R2
0x0A56	0xF000FABD  BL	_CS_GetClocksFrequency+0
;__Lib_UART_MSP.c, 252 :: 		
0x0A5A	0xAA04    ADD	R2, SP, #16
0x0A5C	0x4611    MOV	R1, R2
0x0A5E	0x4628    MOV	R0, R5
0x0A60	0xF7FFFE02  BL	__Lib_UART_MSP_UARTx_GetFreq+0
; uartFreq start address is: 0 (R0)
;__Lib_UART_MSP.c, 254 :: 		
0x0A64	0xEE000A90  VMOV	S1, R0
0x0A68	0xEEF80A60  VCVT.F32.U32	S1, S1
; uartFreq end address is: 0 (R0)
0x0A6C	0xEE006A10  VMOV	S0, R6
0x0A70	0xEEB80A40  VCVT.F32.U32	S0, S0
; baudRate end address is: 24 (R6)
0x0A74	0xEE800A80  VDIV.F32	S0, S1, S0
; Nf start address is: 8 (S2)
0x0A78	0xEEB01A40  VMOV.F32	S2, S0
;__Lib_UART_MSP.c, 256 :: 		
0x0A7C	0xAA01    ADD	R2, SP, #4
0x0A7E	0x4610    MOV	R0, R2
0x0A80	0xF7FFFE2A  BL	__Lib_UART_MSP__modf+0
;__Lib_UART_MSP.c, 258 :: 		
0x0A84	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x0A88	0xEEFC0A60  VCVT.U32.F32	S1, S1
0x0A8C	0xEE102A90  VMOV	R2, S1
0x0A90	0xB292    UXTH	R2, R2
; idiv start address is: 4 (R1)
0x0A92	0xB291    UXTH	R1, R2
;__Lib_UART_MSP.c, 259 :: 		
0x0A94	0x4A41    LDR	R2, [PC, #260]
0x0A96	0xEE002A90  VMOV	S1, R2
0x0A9A	0xEE200A20  VMUL.F32	S0, S0, S1
0x0A9E	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0AA2	0xEE100A10  VMOV	R0, S0
0x0AA6	0xB280    UXTH	R0, R0
; imod start address is: 0 (R0)
;__Lib_UART_MSP.c, 262 :: 		
0x0AA8	0xF2050408  ADDW	R4, R5, #8
0x0AAC	0x8823    LDRH	R3, [R4, #0]
0x0AAE	0xF64F72FE  MOVW	R2, #65534
0x0AB2	0xEA030202  AND	R2, R3, R2, LSL #0
0x0AB6	0x8022    STRH	R2, [R4, #0]
;__Lib_UART_MSP.c, 263 :: 		
0x0AB8	0x2910    CMP	R1, #16
0x0ABA	0xD92E    BLS	L___Lib_UART_MSP_UARTx_SetBaudRate28
; idiv end address is: 4 (R1)
;__Lib_UART_MSP.c, 265 :: 		
0x0ABC	0xF2050308  ADDW	R3, R5, #8
0x0AC0	0x881A    LDRH	R2, [R3, #0]
0x0AC2	0xF0420201  ORR	R2, R2, #1
0x0AC6	0x801A    STRH	R2, [R3, #0]
;__Lib_UART_MSP.c, 266 :: 		
0x0AC8	0xEEB30A00  VMOV.F32	S0, #16
0x0ACC	0xEE810A00  VDIV.F32	S0, S2, S0
0x0AD0	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0AD4	0xEE102A10  VMOV	R2, S0
0x0AD8	0xB292    UXTH	R2, R2
0x0ADA	0xF8AD2008  STRH	R2, [SP, #8]
;__Lib_UART_MSP.c, 267 :: 		
0x0ADE	0xEEB30A00  VMOV.F32	S0, #16
0x0AE2	0xEEC10A00  VDIV.F32	S1, S2, S0
0x0AE6	0xEEB30A00  VMOV.F32	S0, #16
0x0AEA	0xEE810A00  VDIV.F32	S0, S2, S0
; Nf end address is: 8 (S2)
0x0AEE	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0AF2	0xEE102A10  VMOV	R2, S0
0x0AF6	0xB292    UXTH	R2, R2
0x0AF8	0xEE002A10  VMOV	S0, R2
0x0AFC	0xEEB80A40  VCVT.F32.U32	S0, S0
0x0B00	0xEE700AC0  VSUB.F32	S1, S1, S0
0x0B04	0xEEB30A00  VMOV.F32	S0, #16
0x0B08	0xEE200A80  VMUL.F32	S0, S1, S0
0x0B0C	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x0B10	0xEE102A10  VMOV	R2, S0
0x0B14	0xB292    UXTH	R2, R2
0x0B16	0xF8AD200A  STRH	R2, [SP, #10]
;__Lib_UART_MSP.c, 268 :: 		
L___Lib_UART_MSP_UARTx_SetBaudRate28:
;__Lib_UART_MSP.c, 270 :: 		
0x0B1A	0xB920    CBNZ	R0, L___Lib_UART_MSP_UARTx_SetBaudRate29
; imod end address is: 0 (R0)
;__Lib_UART_MSP.c, 271 :: 		
0x0B1C	0x2200    MOVS	R2, #0
0x0B1E	0xF8AD200C  STRH	R2, [SP, #12]
0x0B22	0x4628    MOV	R0, R5
0x0B24	0xE016    B	L___Lib_UART_MSP_UARTx_SetBaudRate30
L___Lib_UART_MSP_UARTx_SetBaudRate29:
;__Lib_UART_MSP.c, 273 :: 		
; i start address is: 16 (R4)
; imod start address is: 0 (R0)
0x0B26	0x2401    MOVS	R4, #1
; uartBase end address is: 20 (R5)
; i end address is: 16 (R4)
0x0B28	0x4629    MOV	R1, R5
L___Lib_UART_MSP_UARTx_SetBaudRate31:
; i start address is: 16 (R4)
; imod start address is: 0 (R0)
; imod end address is: 0 (R0)
; uartBase start address is: 4 (R1)
0x0B2A	0x2C24    CMP	R4, #36
0x0B2C	0xD211    BCS	L___Lib_UART_MSP_UARTx_SetBaudRate32
; imod end address is: 0 (R0)
;__Lib_UART_MSP.c, 274 :: 		
; imod start address is: 0 (R0)
0x0B2E	0x0063    LSLS	R3, R4, #1
0x0B30	0x4A1B    LDR	R2, [PC, #108]
0x0B32	0x18D2    ADDS	R2, R2, R3
0x0B34	0x8812    LDRH	R2, [R2, #0]
0x0B36	0x4290    CMP	R0, R2
0x0B38	0xD208    BCS	L___Lib_UART_MSP_UARTx_SetBaudRate34
; imod end address is: 0 (R0)
;__Lib_UART_MSP.c, 275 :: 		
0x0B3A	0x1E62    SUBS	R2, R4, #1
0x0B3C	0xB212    SXTH	R2, R2
; i end address is: 16 (R4)
0x0B3E	0x0053    LSLS	R3, R2, #1
0x0B40	0x4A18    LDR	R2, [PC, #96]
0x0B42	0x18D2    ADDS	R2, R2, R3
0x0B44	0x8812    LDRH	R2, [R2, #0]
0x0B46	0xF8AD200C  STRH	R2, [SP, #12]
;__Lib_UART_MSP.c, 276 :: 		
0x0B4A	0xE002    B	L___Lib_UART_MSP_UARTx_SetBaudRate32
;__Lib_UART_MSP.c, 277 :: 		
L___Lib_UART_MSP_UARTx_SetBaudRate34:
;__Lib_UART_MSP.c, 273 :: 		
; i start address is: 16 (R4)
; imod start address is: 0 (R0)
0x0B4C	0x1C64    ADDS	R4, R4, #1
0x0B4E	0xB2E4    UXTB	R4, R4
;__Lib_UART_MSP.c, 278 :: 		
; imod end address is: 0 (R0)
; i end address is: 16 (R4)
0x0B50	0xE7EB    B	L___Lib_UART_MSP_UARTx_SetBaudRate31
L___Lib_UART_MSP_UARTx_SetBaudRate32:
;__Lib_UART_MSP.c, 279 :: 		
0x0B52	0x4608    MOV	R0, R1
; uartBase end address is: 4 (R1)
L___Lib_UART_MSP_UARTx_SetBaudRate30:
;__Lib_UART_MSP.c, 281 :: 		
; uartBase start address is: 0 (R0)
0x0B54	0x1D83    ADDS	R3, R0, #6
0x0B56	0x2200    MOVS	R2, #0
0x0B58	0x801A    STRH	R2, [R3, #0]
;__Lib_UART_MSP.c, 282 :: 		
0x0B5A	0x1D84    ADDS	R4, R0, #6
0x0B5C	0x8823    LDRH	R3, [R4, #0]
0x0B5E	0xF8BD2008  LDRH	R2, [SP, #8]
0x0B62	0xEA430202  ORR	R2, R3, R2, LSL #0
0x0B66	0x8022    STRH	R2, [R4, #0]
;__Lib_UART_MSP.c, 284 :: 		
0x0B68	0xF2000308  ADDW	R3, R0, #8
0x0B6C	0x881A    LDRH	R2, [R3, #0]
0x0B6E	0xF0020201  AND	R2, R2, #1
0x0B72	0x801A    STRH	R2, [R3, #0]
;__Lib_UART_MSP.c, 285 :: 		
0x0B74	0xF2000408  ADDW	R4, R0, #8
; uartBase end address is: 0 (R0)
0x0B78	0xF8BD200C  LDRH	R2, [SP, #12]
0x0B7C	0x0213    LSLS	R3, R2, #8
0x0B7E	0xB29B    UXTH	R3, R3
0x0B80	0xF8BD200A  LDRH	R2, [SP, #10]
0x0B84	0x0112    LSLS	R2, R2, #4
0x0B86	0xB292    UXTH	R2, R2
0x0B88	0x4313    ORRS	R3, R2
0x0B8A	0xB29B    UXTH	R3, R3
0x0B8C	0x8822    LDRH	R2, [R4, #0]
0x0B8E	0x431A    ORRS	R2, R3
0x0B90	0x8022    STRH	R2, [R4, #0]
;__Lib_UART_MSP.c, 286 :: 		
L_end_UARTx_SetBaudRate:
0x0B92	0xF8DDE000  LDR	LR, [SP, #0]
0x0B96	0xB008    ADD	SP, SP, #32
0x0B98	0x4770    BX	LR
0x0B9A	0xBF00    NOP
0x0B9C	0x4000461C  	#1176256512
0x0BA0	0x3BE00000  	__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+0
0x0BA4	0x3C280000  	__Lib_UART_MSP__UART_UCBRSx_TABLE+0
; end of __Lib_UART_MSP_UARTx_SetBaudRate
__Lib_UART_MSP_UARTx_GetFreq:
;__Lib_UART_MSP.c, 221 :: 		
; clocks start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x0668	0xB081    SUB	SP, SP, #4
; clocks end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; clocks start address is: 4 (R1)
;__Lib_UART_MSP.c, 224 :: 		
0x066A	0x8802    LDRH	R2, [R0, #0]
; uartBase end address is: 0 (R0)
0x066C	0xF00202C0  AND	R2, R2, #192
0x0670	0xB292    UXTH	R2, R2
0x0672	0x0992    LSRS	R2, R2, #6
0x0674	0xB292    UXTH	R2, R2
; clockSource start address is: 0 (R0)
0x0676	0xB290    UXTH	R0, R2
;__Lib_UART_MSP.c, 225 :: 		
0x0678	0xB90A    CBNZ	R2, L___Lib_UART_MSP_UARTx_GetFreq21
; clocks end address is: 4 (R1)
; clockSource end address is: 0 (R0)
;__Lib_UART_MSP.c, 226 :: 		
0x067A	0x2000    MOVS	R0, #0
0x067C	0xE00E    B	L_end_UARTx_GetFreq
L___Lib_UART_MSP_UARTx_GetFreq21:
;__Lib_UART_MSP.c, 227 :: 		
; clockSource start address is: 0 (R0)
; clocks start address is: 4 (R1)
0x067E	0x2801    CMP	R0, #1
0x0680	0xD102    BNE	L___Lib_UART_MSP_UARTx_GetFreq23
; clockSource end address is: 0 (R0)
;__Lib_UART_MSP.c, 228 :: 		
0x0682	0x680A    LDR	R2, [R1, #0]
; clocks end address is: 4 (R1)
0x0684	0x4610    MOV	R0, R2
0x0686	0xE009    B	L_end_UARTx_GetFreq
L___Lib_UART_MSP_UARTx_GetFreq23:
;__Lib_UART_MSP.c, 229 :: 		
; clockSource start address is: 0 (R0)
; clocks start address is: 4 (R1)
0x0688	0x2802    CMP	R0, #2
0x068A	0xD002    BEQ	L___Lib_UART_MSP_UARTx_GetFreq68
0x068C	0x2803    CMP	R0, #3
0x068E	0xD000    BEQ	L___Lib_UART_MSP_UARTx_GetFreq67
; clocks end address is: 4 (R1)
; clockSource end address is: 0 (R0)
0x0690	0xE004    B	L___Lib_UART_MSP_UARTx_GetFreq27
L___Lib_UART_MSP_UARTx_GetFreq68:
; clocks start address is: 4 (R1)
L___Lib_UART_MSP_UARTx_GetFreq67:
;__Lib_UART_MSP.c, 230 :: 		
0x0692	0xF201020C  ADDW	R2, R1, #12
; clocks end address is: 4 (R1)
0x0696	0x6812    LDR	R2, [R2, #0]
0x0698	0x4610    MOV	R0, R2
0x069A	0xE7FF    B	L_end_UARTx_GetFreq
L___Lib_UART_MSP_UARTx_GetFreq27:
;__Lib_UART_MSP.c, 231 :: 		
L_end_UARTx_GetFreq:
0x069C	0xB001    ADD	SP, SP, #4
0x069E	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_GetFreq
__Lib_UART_MSP__modf:
;__Lib_UART_MSP.c, 63 :: 		
; iptr start address is: 0 (R0)
0x06D8	0xB082    SUB	SP, SP, #8
0x06DA	0xED8D0A01  VSTR.32	S0, [SP, #4]
; iptr end address is: 0 (R0)
; iptr start address is: 0 (R0)
;__Lib_UART_MSP.c, 67 :: 		
0x06DE	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x06E2	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x06E6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x06EA	0xDB0A    BLT	L___Lib_UART_MSP__modf1
0x06EC	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x06F0	0xEEB70A00  VMOV.F32	S0, #1
0x06F4	0xEEF40AC0  VCMPE.F32	S1, S0
0x06F8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x06FC	0xDA01    BGE	L___Lib_UART_MSP__modf1
0x06FE	0x2101    MOVS	R1, #1
0x0700	0xE000    B	L___Lib_UART_MSP__modf0
L___Lib_UART_MSP__modf1:
0x0702	0x2100    MOVS	R1, #0
L___Lib_UART_MSP__modf0:
; bbb start address is: 4 (R1)
;__Lib_UART_MSP.c, 68 :: 		
0x0704	0xB989    CBNZ	R1, L___Lib_UART_MSP__modf65
; bbb end address is: 4 (R1)
0x0706	0xEDDD0A01  VLDR.32	S1, [SP, #4]
0x070A	0xEEBF0A00  VMOV.F32	S0, #-1
0x070E	0xEEF40AC0  VCMPE.F32	S1, S0
0x0712	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0716	0xDD07    BLE	L___Lib_UART_MSP__modf64
0x0718	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x071C	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0720	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0724	0xDC00    BGT	L___Lib_UART_MSP__modf63
0x0726	0xE000    B	L___Lib_UART_MSP__modf61
L___Lib_UART_MSP__modf64:
L___Lib_UART_MSP__modf63:
0x0728	0xE008    B	L___Lib_UART_MSP__modf6
L___Lib_UART_MSP__modf61:
L___Lib_UART_MSP__modf65:
;__Lib_UART_MSP.c, 69 :: 		
0x072A	0xF04F0100  MOV	R1, #0
0x072E	0xEE001A10  VMOV	S0, R1
0x0732	0xED000A00  VSTR.32	S0, [R0, #0]
; iptr end address is: 0 (R0)
;__Lib_UART_MSP.c, 70 :: 		
0x0736	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x073A	0xE023    B	L_end__modf
;__Lib_UART_MSP.c, 71 :: 		
L___Lib_UART_MSP__modf6:
;__Lib_UART_MSP.c, 73 :: 		
; iptr start address is: 0 (R0)
0x073C	0xA901    ADD	R1, SP, #4
0x073E	0x6809    LDR	R1, [R1, #0]
0x0740	0x0DC9    LSRS	R1, R1, #23
0x0742	0xF00101FF  AND	R1, R1, #255
0x0746	0x397F    SUBS	R1, #127
;__Lib_UART_MSP.c, 74 :: 		
0x0748	0xB289    UXTH	R1, R1
0x074A	0x2918    CMP	R1, #24
0x074C	0xD908    BLS	L___Lib_UART_MSP__modf7
;__Lib_UART_MSP.c, 75 :: 		
0x074E	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x0752	0xED000A00  VSTR.32	S0, [R0, #0]
; iptr end address is: 0 (R0)
;__Lib_UART_MSP.c, 76 :: 		
0x0756	0xF04F0100  MOV	R1, #0
0x075A	0xEE001A10  VMOV	S0, R1
0x075E	0xE011    B	L_end__modf
;__Lib_UART_MSP.c, 77 :: 		
L___Lib_UART_MSP__modf7:
;__Lib_UART_MSP.c, 78 :: 		
; iptr start address is: 0 (R0)
0x0760	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x0764	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x0768	0xEE101A10  VMOV	R1, S0
0x076C	0xEE001A10  VMOV	S0, R1
0x0770	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x0774	0xED000A00  VSTR.32	S0, [R0, #0]
;__Lib_UART_MSP.c, 80 :: 		
0x0778	0xED500A00  VLDR.32	S1, [R0, #0]
; iptr end address is: 0 (R0)
0x077C	0xED9D0A01  VLDR.32	S0, [SP, #4]
0x0780	0xEE300A60  VSUB.F32	S0, S0, S1
;__Lib_UART_MSP.c, 81 :: 		
L_end__modf:
0x0784	0xB002    ADD	SP, SP, #8
0x0786	0x4770    BX	LR
; end of __Lib_UART_MSP__modf
__Lib_UART_MSP_UARTx_Enable:
;__Lib_UART_MSP.c, 99 :: 		
; uartBase start address is: 0 (R0)
0x0A34	0xB081    SUB	SP, SP, #4
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
;__Lib_UART_MSP.c, 100 :: 		
0x0A36	0x8802    LDRH	R2, [R0, #0]
0x0A38	0xF64F71FE  MOVW	R1, #65534
0x0A3C	0xEA020101  AND	R1, R2, R1, LSL #0
0x0A40	0x8001    STRH	R1, [R0, #0]
; uartBase end address is: 0 (R0)
;__Lib_UART_MSP.c, 101 :: 		
L_end_UARTx_Enable:
0x0A42	0xB001    ADD	SP, SP, #4
0x0A44	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_Enable
clicker_2_MSP432__log_init2:
;__c2_msp432_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x29C0	0xB081    SUB	SP, SP, #4
0x29C2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__c2_msp432_log.c, 32 :: 		UART1_Init( baud );
; baud end address is: 0 (R0)
0x29C6	0xF7FEFFCB  BL	_UART1_Init+0
;__c2_msp432_log.c, 33 :: 		logger = UART1_Write;
0x29CA	0x4A04    LDR	R2, [PC, #16]
0x29CC	0x4904    LDR	R1, [PC, #16]
0x29CE	0x600A    STR	R2, [R1, #0]
;__c2_msp432_log.c, 34 :: 		return 0;
0x29D0	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 35 :: 		}
L_end__log_init2:
0x29D2	0xF8DDE000  LDR	LR, [SP, #0]
0x29D6	0xB001    ADD	SP, SP, #4
0x29D8	0x4770    BX	LR
0x29DA	0xBF00    NOP
0x29DC	0x18ED0000  	_UART1_Write+0
0x29E0	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_init2
_UART1_Init:
;__Lib_UART_MSP.c, 675 :: 		
; baudRate start address is: 0 (R0)
0x1960	0xB081    SUB	SP, SP, #4
0x1962	0xF8CDE000  STR	LR, [SP, #0]
0x1966	0x4684    MOV	R12, R0
; baudRate end address is: 0 (R0)
; baudRate start address is: 48 (R12)
;__Lib_UART_MSP.c, 676 :: 		
0x1968	0x4A0B    LDR	R2, [PC, #44]
0x196A	0x490C    LDR	R1, [PC, #48]
0x196C	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 677 :: 		
0x196E	0x4A0C    LDR	R2, [PC, #48]
0x1970	0x490C    LDR	R1, [PC, #48]
0x1972	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 678 :: 		
0x1974	0x4A0C    LDR	R2, [PC, #48]
0x1976	0x490D    LDR	R1, [PC, #52]
0x1978	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 679 :: 		
0x197A	0x4A0D    LDR	R2, [PC, #52]
0x197C	0x490D    LDR	R1, [PC, #52]
0x197E	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 681 :: 		
0x1980	0x480D    LDR	R0, [PC, #52]
0x1982	0xF7FFF9B3  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_UART_MSP.c, 682 :: 		
0x1986	0x4661    MOV	R1, R12
; baudRate end address is: 48 (R12)
0x1988	0x480C    LDR	R0, [PC, #48]
0x198A	0xF7FFFEC1  BL	__Lib_UART_MSP_UARTx_Init+0
;__Lib_UART_MSP.c, 683 :: 		
L_end_UART1_Init:
0x198E	0xF8DDE000  LDR	LR, [SP, #0]
0x1992	0xB001    ADD	SP, SP, #4
0x1994	0x4770    BX	LR
0x1996	0xBF00    NOP
0x1998	0x18ED0000  	_UART1_Write+0
0x199C	0x00E82000  	_UART_Wr_Ptr+0
0x19A0	0xFFFFFFFF  	_UART1_Read+0
0x19A4	0x00EC2000  	_UART_Rd_Ptr+0
0x19A8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x19AC	0x00F02000  	_UART_Rdy_Ptr+0
0x19B0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x19B4	0x00F42000  	_UART_Tx_Idle_Ptr+0
0x19B8	0x387C0000  	__GPIO_MODULE_UARTA1_A1011+0
0x19BC	0x14004000  	EUSCI_A1_UCA1CTLW0+0
; end of _UART1_Init
clicker_2_MSP432__log_init3:
;__c2_msp432_log.c, 37 :: 		static T_mikrobus_ret _log_init3(uint32_t baud)
; baud start address is: 0 (R0)
0x2A08	0xB081    SUB	SP, SP, #4
0x2A0A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__c2_msp432_log.c, 39 :: 		UART1_Init( baud );
; baud end address is: 0 (R0)
0x2A0E	0xF7FEFFA7  BL	_UART1_Init+0
;__c2_msp432_log.c, 40 :: 		logger = UART1_Write;
0x2A12	0x4A04    LDR	R2, [PC, #16]
0x2A14	0x4904    LDR	R1, [PC, #16]
0x2A16	0x600A    STR	R2, [R1, #0]
;__c2_msp432_log.c, 41 :: 		return 0;
0x2A18	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 42 :: 		}
L_end__log_init3:
0x2A1A	0xF8DDE000  LDR	LR, [SP, #0]
0x2A1E	0xB001    ADD	SP, SP, #4
0x2A20	0x4770    BX	LR
0x2A22	0xBF00    NOP
0x2A24	0x18ED0000  	_UART1_Write+0
0x2A28	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_init3
clicker_2_MSP432__log_init4:
;__c2_msp432_log.c, 44 :: 		static T_mikrobus_ret _log_init4(uint32_t baud)
; baud start address is: 0 (R0)
0x2A50	0xB081    SUB	SP, SP, #4
0x2A52	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__c2_msp432_log.c, 46 :: 		UART1_Init( baud );
; baud end address is: 0 (R0)
0x2A56	0xF7FEFF83  BL	_UART1_Init+0
;__c2_msp432_log.c, 47 :: 		logger = UART1_Write;
0x2A5A	0x4A04    LDR	R2, [PC, #16]
0x2A5C	0x4904    LDR	R1, [PC, #16]
0x2A5E	0x600A    STR	R2, [R1, #0]
;__c2_msp432_log.c, 48 :: 		return 0;
0x2A60	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 49 :: 		}
L_end__log_init4:
0x2A62	0xF8DDE000  LDR	LR, [SP, #0]
0x2A66	0xB001    ADD	SP, SP, #4
0x2A68	0x4770    BX	LR
0x2A6A	0xBF00    NOP
0x2A6C	0x18ED0000  	_UART1_Write+0
0x2A70	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_init4
clicker_2_MSP432__log_initUart:
;__c2_msp432_log.c, 51 :: 		static T_mikrobus_ret _log_initUart(uint32_t baud)
; baud start address is: 0 (R0)
0x2A2C	0xB081    SUB	SP, SP, #4
0x2A2E	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__c2_msp432_log.c, 53 :: 		UART0_Init( baud );
; baud end address is: 0 (R0)
0x2A32	0xF7FEFFD9  BL	_UART0_Init+0
;__c2_msp432_log.c, 54 :: 		logger = UART0_Write;
0x2A36	0x4A04    LDR	R2, [PC, #16]
0x2A38	0x4904    LDR	R1, [PC, #16]
0x2A3A	0x600A    STR	R2, [R1, #0]
;__c2_msp432_log.c, 55 :: 		return 0;
0x2A3C	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 56 :: 		}
L_end__log_initUart:
0x2A3E	0xF8DDE000  LDR	LR, [SP, #0]
0x2A42	0xB001    ADD	SP, SP, #4
0x2A44	0x4770    BX	LR
0x2A46	0xBF00    NOP
0x2A48	0x19310000  	_UART0_Write+0
0x2A4C	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_initUart
_UART0_Init:
;__Lib_UART_MSP.c, 553 :: 		
; baudRate start address is: 0 (R0)
0x19E8	0xB081    SUB	SP, SP, #4
0x19EA	0xF8CDE000  STR	LR, [SP, #0]
0x19EE	0x4684    MOV	R12, R0
; baudRate end address is: 0 (R0)
; baudRate start address is: 48 (R12)
;__Lib_UART_MSP.c, 554 :: 		
0x19F0	0x4A0B    LDR	R2, [PC, #44]
0x19F2	0x490C    LDR	R1, [PC, #48]
0x19F4	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 555 :: 		
0x19F6	0x4A0C    LDR	R2, [PC, #48]
0x19F8	0x490C    LDR	R1, [PC, #48]
0x19FA	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 556 :: 		
0x19FC	0x4A0C    LDR	R2, [PC, #48]
0x19FE	0x490D    LDR	R1, [PC, #52]
0x1A00	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 557 :: 		
0x1A02	0x4A0D    LDR	R2, [PC, #52]
0x1A04	0x490D    LDR	R1, [PC, #52]
0x1A06	0x600A    STR	R2, [R1, #0]
;__Lib_UART_MSP.c, 559 :: 		
0x1A08	0x480D    LDR	R0, [PC, #52]
0x1A0A	0xF7FFF96F  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_UART_MSP.c, 560 :: 		
0x1A0E	0x4661    MOV	R1, R12
; baudRate end address is: 48 (R12)
0x1A10	0x480C    LDR	R0, [PC, #48]
0x1A12	0xF7FFFE7D  BL	__Lib_UART_MSP_UARTx_Init+0
;__Lib_UART_MSP.c, 561 :: 		
L_end_UART0_Init:
0x1A16	0xF8DDE000  LDR	LR, [SP, #0]
0x1A1A	0xB001    ADD	SP, SP, #4
0x1A1C	0x4770    BX	LR
0x1A1E	0xBF00    NOP
0x1A20	0x19310000  	_UART0_Write+0
0x1A24	0x00E82000  	_UART_Wr_Ptr+0
0x1A28	0xFFFFFFFF  	_UART0_Read+0
0x1A2C	0x00EC2000  	_UART_Rd_Ptr+0
0x1A30	0xFFFFFFFF  	_UART0_Data_Ready+0
0x1A34	0x00F02000  	_UART_Rdy_Ptr+0
0x1A38	0xFFFFFFFF  	_UART0_Tx_Idle+0
0x1A3C	0x00F42000  	_UART_Tx_Idle_Ptr+0
0x1A40	0x39580000  	__GPIO_MODULE_UARTA0_A23+0
0x1A44	0x10004000  	EUSCI_A0_UCA0CTLW0+0
; end of _UART0_Init
_applicationInit:
;Click_Gyro2_MSP.c, 55 :: 		void applicationInit()
0x3390	0xB081    SUB	SP, SP, #4
0x3392	0xF8CDE000  STR	LR, [SP, #0]
;Click_Gyro2_MSP.c, 58 :: 		gyro2_i2cDriverInit( (T_GYRO2_P)&_MIKROBUS1_GPIO, (T_GYRO2_P)&_MIKROBUS1_I2C, GYRO2_ADDR1 );
0x3396	0x482F    LDR	R0, [PC, #188]
0x3398	0x7800    LDRB	R0, [R0, #0]
0x339A	0xB2C2    UXTB	R2, R0
0x339C	0x492E    LDR	R1, [PC, #184]
0x339E	0x482F    LDR	R0, [PC, #188]
0x33A0	0xF7FFFCEA  BL	_gyro2_i2cDriverInit+0
;Click_Gyro2_MSP.c, 62 :: 		mikrobus_logWrite("+++ System Initialized +++",_LOG_LINE);
0x33A4	0x482E    LDR	R0, [PC, #184]
0x33A6	0x2102    MOVS	R1, #2
0x33A8	0xF7FFFD40  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 63 :: 		Delay_ms(1000);
0x33AC	0xF64127FD  MOVW	R7, #6909
0x33B0	0xF2C007B7  MOVT	R7, #183
0x33B4	0xBF00    NOP
0x33B6	0xBF00    NOP
L_applicationInit2:
0x33B8	0x1E7F    SUBS	R7, R7, #1
0x33BA	0xD1FD    BNE	L_applicationInit2
0x33BC	0xBF00    NOP
0x33BE	0xBF00    NOP
0x33C0	0xBF00    NOP
;Click_Gyro2_MSP.c, 65 :: 		if(gyro2_getID() == 0xD7)
0x33C2	0xF7FFFC1B  BL	_gyro2_getID+0
0x33C6	0x28D7    CMP	R0, #215
0x33C8	0xD130    BNE	L_applicationInit4
;Click_Gyro2_MSP.c, 67 :: 		mikrobus_logWrite("Gyro 2 click present",_LOG_LINE);
0x33CA	0x4826    LDR	R0, [PC, #152]
0x33CC	0x2102    MOVS	R1, #2
0x33CE	0xF7FFFD2D  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 68 :: 		gyro2_interruptEventgeneration(GYRO2_RT_CFG_ZTEFE | GYRO2_RT_CFG_YTEFE | GYRO2_RT_CFG_XTEFE);
0x33D2	0x4825    LDR	R0, [PC, #148]
0x33D4	0x7801    LDRB	R1, [R0, #0]
0x33D6	0x4825    LDR	R0, [PC, #148]
0x33D8	0x7800    LDRB	R0, [R0, #0]
0x33DA	0xEA400101  ORR	R1, R0, R1, LSL #0
0x33DE	0xB2C9    UXTB	R1, R1
0x33E0	0x4823    LDR	R0, [PC, #140]
0x33E2	0x7800    LDRB	R0, [R0, #0]
0x33E4	0xEA410000  ORR	R0, R1, R0, LSL #0
0x33E8	0xF7FFFF14  BL	_gyro2_interruptEventgeneration+0
;Click_Gyro2_MSP.c, 69 :: 		gyro2_sensitivity(10);
0x33EC	0x200A    MOVS	R0, #10
0x33EE	0xF7FFFEFF  BL	_gyro2_sensitivity+0
;Click_Gyro2_MSP.c, 70 :: 		gyro2_setOpmode(GYRO2_Active);
0x33F2	0x4820    LDR	R0, [PC, #128]
0x33F4	0x7800    LDRB	R0, [R0, #0]
0x33F6	0xF7FFFD51  BL	_gyro2_setOpmode+0
;Click_Gyro2_MSP.c, 71 :: 		gyro2_setDR(GYRO2_DR_100Hz);
0x33FA	0x481F    LDR	R0, [PC, #124]
0x33FC	0x7800    LDRB	R0, [R0, #0]
0x33FE	0xF7FFFCE7  BL	_gyro2_setDR+0
;Click_Gyro2_MSP.c, 72 :: 		gyro2_interruptCfg( GYRO2_INT_CFG_FIFO_INT1, GYRO2_INT_EN_FIFO | GYRO2_INT_EN_DRDY, GYRO2_IPOL_ACTIVE_HI );
0x3402	0x481E    LDR	R0, [PC, #120]
0x3404	0x7802    LDRB	R2, [R0, #0]
0x3406	0x481E    LDR	R0, [PC, #120]
0x3408	0x7801    LDRB	R1, [R0, #0]
0x340A	0x481E    LDR	R0, [PC, #120]
0x340C	0x7800    LDRB	R0, [R0, #0]
0x340E	0xEA400101  ORR	R1, R0, R1, LSL #0
0x3412	0x481D    LDR	R0, [PC, #116]
0x3414	0x7800    LDRB	R0, [R0, #0]
0x3416	0xF7FFFD95  BL	_gyro2_interruptCfg+0
;Click_Gyro2_MSP.c, 73 :: 		gyro2_frSetup(GYRO2_LO_PASS_MOD2, GYRO2_HI_PASS_OFF, GYRO2_SCALE_3);
0x341A	0x481C    LDR	R0, [PC, #112]
0x341C	0x7802    LDRB	R2, [R0, #0]
0x341E	0x481C    LDR	R0, [PC, #112]
0x3420	0x7801    LDRB	R1, [R0, #0]
0x3422	0x481C    LDR	R0, [PC, #112]
0x3424	0x7800    LDRB	R0, [R0, #0]
0x3426	0xF7FFFD71  BL	_gyro2_frSetup+0
;Click_Gyro2_MSP.c, 74 :: 		}
0x342A	0xE004    B	L_applicationInit5
L_applicationInit4:
;Click_Gyro2_MSP.c, 77 :: 		mikrobus_logWrite("error",_LOG_LINE);
0x342C	0x481A    LDR	R0, [PC, #104]
0x342E	0x2102    MOVS	R1, #2
0x3430	0xF7FFFCFC  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 78 :: 		while(1);
L_applicationInit6:
0x3434	0xE7FE    B	L_applicationInit6
;Click_Gyro2_MSP.c, 79 :: 		}
L_applicationInit5:
;Click_Gyro2_MSP.c, 80 :: 		Delay_ms(1000);
0x3436	0xF64127FD  MOVW	R7, #6909
0x343A	0xF2C007B7  MOVT	R7, #183
0x343E	0xBF00    NOP
L_applicationInit8:
0x3440	0x1E7F    SUBS	R7, R7, #1
0x3442	0xD1FD    BNE	L_applicationInit8
0x3444	0xBF00    NOP
0x3446	0xBF00    NOP
0x3448	0xBF00    NOP
0x344A	0xBF00    NOP
;Click_Gyro2_MSP.c, 81 :: 		}
L_end_applicationInit:
0x344C	0xF8DDE000  LDR	LR, [SP, #0]
0x3450	0xB001    ADD	SP, SP, #4
0x3452	0x4770    BX	LR
0x3454	0x00002000  	_GYRO2_ADDR1+0
0x3458	0x3C700000  	__MIKROBUS1_I2C+0
0x345C	0x3B800000  	__MIKROBUS1_GPIO+0
0x3460	0x00012000  	?lstr1_Click_Gyro2_MSP+0
0x3464	0x001C2000  	?lstr2_Click_Gyro2_MSP+0
0x3468	0x00322000  	_GYRO2_RT_CFG_YTEFE+0
0x346C	0x00312000  	_GYRO2_RT_CFG_ZTEFE+0
0x3470	0x00332000  	_GYRO2_RT_CFG_XTEFE+0
0x3474	0x00342000  	_GYRO2_Active+0
0x3478	0x00352000  	_GYRO2_DR_100Hz+0
0x347C	0x00392000  	_GYRO2_IPOL_ACTIVE_HI+0
0x3480	0x00382000  	_GYRO2_INT_EN_DRDY+0
0x3484	0x00372000  	_GYRO2_INT_EN_FIFO+0
0x3488	0x00362000  	_GYRO2_INT_CFG_FIFO_INT1+0
0x348C	0x003C2000  	_GYRO2_SCALE_3+0
0x3490	0x003B2000  	_GYRO2_HI_PASS_OFF+0
0x3494	0x003A2000  	_GYRO2_LO_PASS_MOD2+0
0x3498	0x003D2000  	?lstr3_Click_Gyro2_MSP+0
; end of _applicationInit
_gyro2_i2cDriverInit:
;__gyro2_driver.c, 151 :: 		void gyro2_i2cDriverInit(T_GYRO2_P gpioObj, T_GYRO2_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x2D78	0xB081    SUB	SP, SP, #4
0x2D7A	0xF8CDE000  STR	LR, [SP, #0]
0x2D7E	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__gyro2_driver.c, 153 :: 		_slaveAddress = slave;
0x2D80	0x4B0D    LDR	R3, [PC, #52]
0x2D82	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__gyro2_driver.c, 154 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x2D84	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x2D86	0xF7FFFCB9  BL	__gyro2_driver_hal_i2cMap+0
;__gyro2_driver.c, 155 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x2D8A	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x2D8C	0xF7FFFCDC  BL	__gyro2_driver_hal_gpioMap+0
;__gyro2_driver.c, 159 :: 		dirverUsed = GYRO2_I2C_PROTO;
0x2D90	0x4B0A    LDR	R3, [PC, #40]
0x2D92	0x781C    LDRB	R4, [R3, #0]
0x2D94	0x4B0A    LDR	R3, [PC, #40]
0x2D96	0x701C    STRB	R4, [R3, #0]
;__gyro2_driver.c, 160 :: 		hal_gpio_rstSet(1);
0x2D98	0x2001    MOVS	R0, #1
0x2D9A	0x4C0A    LDR	R4, [PC, #40]
0x2D9C	0x6824    LDR	R4, [R4, #0]
0x2D9E	0x47A0    BLX	R4
;__gyro2_driver.c, 161 :: 		hal_gpio_csSet(0);
0x2DA0	0x2000    MOVS	R0, #0
0x2DA2	0x4C09    LDR	R4, [PC, #36]
0x2DA4	0x6824    LDR	R4, [R4, #0]
0x2DA6	0x47A0    BLX	R4
;__gyro2_driver.c, 162 :: 		hal_gpio_anSet(1);
0x2DA8	0x2001    MOVS	R0, #1
0x2DAA	0x4C08    LDR	R4, [PC, #32]
0x2DAC	0x6824    LDR	R4, [R4, #0]
0x2DAE	0x47A0    BLX	R4
;__gyro2_driver.c, 163 :: 		}
L_end_gyro2_i2cDriverInit:
0x2DB0	0xF8DDE000  LDR	LR, [SP, #0]
0x2DB4	0xB001    ADD	SP, SP, #4
0x2DB6	0x4770    BX	LR
0x2DB8	0x006E2000  	__gyro2_driver__slaveAddress+0
0x2DBC	0x00542000  	__gyro2_driver_GYRO2_I2C_PROTO+0
0x2DC0	0x006D2000  	__gyro2_driver_dirverUsed+0
0x2DC4	0x00B82000  	__gyro2_driver_hal_gpio_rstSet+0
0x2DC8	0x00A02000  	__gyro2_driver_hal_gpio_csSet+0
0x2DCC	0x00B42000  	__gyro2_driver_hal_gpio_anSet+0
; end of _gyro2_i2cDriverInit
clicker_2_MSP432__setAN_1:
;__c2_msp432_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value)         { DIO_P6OUT.B0 = value; }
; value start address is: 0 (R0)
0x2980	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2982	0x4902    LDR	R1, [PC, #8]
0x2984	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x2986	0xB001    ADD	SP, SP, #4
0x2988	0x4770    BX	LR
0x298A	0xBF00    NOP
0x298C	0x88604209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setAN_1
clicker_2_MSP432__setRST_1:
;__c2_msp432_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value)         { DIO_P5OUT.B6 = value; }
; value start address is: 0 (R0)
0x2970	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2972	0x4902    LDR	R1, [PC, #8]
0x2974	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x2976	0xB001    ADD	SP, SP, #4
0x2978	0x4770    BX	LR
0x297A	0xBF00    NOP
0x297C	0x88584209  	DIO_P5OUT+0
; end of clicker_2_MSP432__setRST_1
clicker_2_MSP432__setCS_1:
;__c2_msp432_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value)         { DIO_P5OUT.B0 = value; }
; value start address is: 0 (R0)
0x2990	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2992	0x4902    LDR	R1, [PC, #8]
0x2994	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x2996	0xB001    ADD	SP, SP, #4
0x2998	0x4770    BX	LR
0x299A	0xBF00    NOP
0x299C	0x88404209  	DIO_P5OUT+0
; end of clicker_2_MSP432__setCS_1
clicker_2_MSP432__setSCK_1:
;__c2_msp432_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value)         { DIO_P1OUT.B5 = value; }
; value start address is: 0 (R0)
0x29B0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x29B2	0x4902    LDR	R1, [PC, #8]
0x29B4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x29B6	0xB001    ADD	SP, SP, #4
0x29B8	0x4770    BX	LR
0x29BA	0xBF00    NOP
0x29BC	0x80544209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setSCK_1
clicker_2_MSP432__setMISO_1:
;__c2_msp432_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value)         { DIO_P1OUT.B7 = value; }
; value start address is: 0 (R0)
0x29A0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x29A2	0x4902    LDR	R1, [PC, #8]
0x29A4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x29A6	0xB001    ADD	SP, SP, #4
0x29A8	0x4770    BX	LR
0x29AA	0xBF00    NOP
0x29AC	0x805C4209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setMISO_1
clicker_2_MSP432__setMOSI_1:
;__c2_msp432_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value)         { DIO_P1OUT.B6 = value; }
; value start address is: 0 (R0)
0x2B34	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B36	0x4902    LDR	R1, [PC, #8]
0x2B38	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x2B3A	0xB001    ADD	SP, SP, #4
0x2B3C	0x4770    BX	LR
0x2B3E	0xBF00    NOP
0x2B40	0x80584209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setMOSI_1
clicker_2_MSP432__setPWM_1:
;__c2_msp432_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value)         { DIO_P2OUT.B7 = value; }
; value start address is: 0 (R0)
0x2B14	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B16	0x4902    LDR	R1, [PC, #8]
0x2B18	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x2B1A	0xB001    ADD	SP, SP, #4
0x2B1C	0x4770    BX	LR
0x2B1E	0xBF00    NOP
0x2B20	0x807C4209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setPWM_1
clicker_2_MSP432__setINT_1:
;__c2_msp432_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value)         { DIO_P2OUT.B4 = value; }
; value start address is: 0 (R0)
0x2B24	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B26	0x4902    LDR	R1, [PC, #8]
0x2B28	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x2B2A	0xB001    ADD	SP, SP, #4
0x2B2C	0x4770    BX	LR
0x2B2E	0xBF00    NOP
0x2B30	0x80704209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setINT_1
clicker_2_MSP432__setRX_1:
;__c2_msp432_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value)         { DIO_P3OUT.B2 = value; }
; value start address is: 0 (R0)
0x2B44	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B46	0x4902    LDR	R1, [PC, #8]
0x2B48	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x2B4A	0xB001    ADD	SP, SP, #4
0x2B4C	0x4770    BX	LR
0x2B4E	0xBF00    NOP
0x2B50	0x84484209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setRX_1
clicker_2_MSP432__setTX_1:
;__c2_msp432_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value)         { DIO_P3OUT.B3 = value; }
; value start address is: 0 (R0)
0x2B84	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B86	0x4902    LDR	R1, [PC, #8]
0x2B88	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x2B8A	0xB001    ADD	SP, SP, #4
0x2B8C	0x4770    BX	LR
0x2B8E	0xBF00    NOP
0x2B90	0x844C4209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setTX_1
clicker_2_MSP432__setSCL_1:
;__c2_msp432_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value)         { DIO_P6OUT.B5 = value; }
; value start address is: 0 (R0)
0x2B74	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B76	0x4902    LDR	R1, [PC, #8]
0x2B78	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x2B7A	0xB001    ADD	SP, SP, #4
0x2B7C	0x4770    BX	LR
0x2B7E	0xBF00    NOP
0x2B80	0x88744209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setSCL_1
clicker_2_MSP432__setSDA_1:
;__c2_msp432_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value)         { DIO_P6OUT.B4 = value; }
; value start address is: 0 (R0)
0x2B54	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B56	0x4902    LDR	R1, [PC, #8]
0x2B58	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x2B5A	0xB001    ADD	SP, SP, #4
0x2B5C	0x4770    BX	LR
0x2B5E	0xBF00    NOP
0x2B60	0x88704209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setSDA_1
clicker_2_MSP432__setAN_2:
;__c2_msp432_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)         { DIO_P4OUT.B3 = value; }
; value start address is: 0 (R0)
0x2B64	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2B66	0x4902    LDR	R1, [PC, #8]
0x2B68	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x2B6A	0xB001    ADD	SP, SP, #4
0x2B6C	0x4770    BX	LR
0x2B6E	0xBF00    NOP
0x2B70	0x846C4209  	DIO_P4OUT+0
; end of clicker_2_MSP432__setAN_2
clicker_2_MSP432__setRST_2:
;__c2_msp432_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)         { DIO_P6OUT.B7 = value; }
; value start address is: 0 (R0)
0x2960	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2962	0x4902    LDR	R1, [PC, #8]
0x2964	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x2966	0xB001    ADD	SP, SP, #4
0x2968	0x4770    BX	LR
0x296A	0xBF00    NOP
0x296C	0x887C4209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setRST_2
clicker_2_MSP432__setCS_2:
;__c2_msp432_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)         { DIO_P5OUT.B2 = value; }
; value start address is: 0 (R0)
0x27C0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27C2	0x4902    LDR	R1, [PC, #8]
0x27C4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x27C6	0xB001    ADD	SP, SP, #4
0x27C8	0x4770    BX	LR
0x27CA	0xBF00    NOP
0x27CC	0x88484209  	DIO_P5OUT+0
; end of clicker_2_MSP432__setCS_2
clicker_2_MSP432__setSCK_2:
;__c2_msp432_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)         { DIO_P1OUT.B5 = value; }
; value start address is: 0 (R0)
0x27D0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27D2	0x4902    LDR	R1, [PC, #8]
0x27D4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x27D6	0xB001    ADD	SP, SP, #4
0x27D8	0x4770    BX	LR
0x27DA	0xBF00    NOP
0x27DC	0x80544209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setSCK_2
clicker_2_MSP432__setMISO_2:
;__c2_msp432_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)         { DIO_P1OUT.B7 = value; }
; value start address is: 0 (R0)
0x27A0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27A2	0x4902    LDR	R1, [PC, #8]
0x27A4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x27A6	0xB001    ADD	SP, SP, #4
0x27A8	0x4770    BX	LR
0x27AA	0xBF00    NOP
0x27AC	0x805C4209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setMISO_2
clicker_2_MSP432__setMOSI_2:
;__c2_msp432_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)         { DIO_P1OUT.B6 = value; }
; value start address is: 0 (R0)
0x27B0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27B2	0x4902    LDR	R1, [PC, #8]
0x27B4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x27B6	0xB001    ADD	SP, SP, #4
0x27B8	0x4770    BX	LR
0x27BA	0xBF00    NOP
0x27BC	0x80584209  	DIO_P1OUT+0
; end of clicker_2_MSP432__setMOSI_2
clicker_2_MSP432__setPWM_2:
;__c2_msp432_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)         { DIO_P2OUT.B6 = value; }
; value start address is: 0 (R0)
0x27E0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27E2	0x4902    LDR	R1, [PC, #8]
0x27E4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x27E6	0xB001    ADD	SP, SP, #4
0x27E8	0x4770    BX	LR
0x27EA	0xBF00    NOP
0x27EC	0x80784209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setPWM_2
clicker_2_MSP432__setINT_2:
;__c2_msp432_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)         { DIO_P6OUT.B6 = value; }
; value start address is: 0 (R0)
0x2810	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2812	0x4902    LDR	R1, [PC, #8]
0x2814	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x2816	0xB001    ADD	SP, SP, #4
0x2818	0x4770    BX	LR
0x281A	0xBF00    NOP
0x281C	0x88784209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setINT_2
clicker_2_MSP432__setRX_2:
;__c2_msp432_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)         { DIO_P2OUT.B2 = value; }
; value start address is: 0 (R0)
0x2820	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2822	0x4902    LDR	R1, [PC, #8]
0x2824	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x2826	0xB001    ADD	SP, SP, #4
0x2828	0x4770    BX	LR
0x282A	0xBF00    NOP
0x282C	0x80684209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setRX_2
clicker_2_MSP432__setTX_2:
;__c2_msp432_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)         { DIO_P2OUT.B3 = value; }
; value start address is: 0 (R0)
0x27F0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x27F2	0x4902    LDR	R1, [PC, #8]
0x27F4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x27F6	0xB001    ADD	SP, SP, #4
0x27F8	0x4770    BX	LR
0x27FA	0xBF00    NOP
0x27FC	0x806C4209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setTX_2
clicker_2_MSP432__setSCL_2:
;__c2_msp432_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)         { DIO_P6OUT.B5 = value; }
; value start address is: 0 (R0)
0x2800	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2802	0x4902    LDR	R1, [PC, #8]
0x2804	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x2806	0xB001    ADD	SP, SP, #4
0x2808	0x4770    BX	LR
0x280A	0xBF00    NOP
0x280C	0x88744209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setSCL_2
clicker_2_MSP432__setSDA_2:
;__c2_msp432_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)         { DIO_P6OUT.B4 = value; }
; value start address is: 0 (R0)
0x26CC	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x26CE	0x4902    LDR	R1, [PC, #8]
0x26D0	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x26D2	0xB001    ADD	SP, SP, #4
0x26D4	0x4770    BX	LR
0x26D6	0xBF00    NOP
0x26D8	0x88704209  	DIO_P6OUT+0
; end of clicker_2_MSP432__setSDA_2
clicker_2_MSP432__setAN_3:
;__c2_msp432_gpio.c, 93 :: 		static void _setAN_3  (uint8_t value)         { DIO_P5OUT.B1 = value; }
; value start address is: 0 (R0)
0x26DC	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x26DE	0x4902    LDR	R1, [PC, #8]
0x26E0	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_3:
0x26E2	0xB001    ADD	SP, SP, #4
0x26E4	0x4770    BX	LR
0x26E6	0xBF00    NOP
0x26E8	0x88444209  	DIO_P5OUT+0
; end of clicker_2_MSP432__setAN_3
clicker_2_MSP432__setRST_3:
;__c2_msp432_gpio.c, 94 :: 		static void _setRST_3 (uint8_t value)         { DIO_P4OUT.B7 = value; }
; value start address is: 0 (R0)
0x26AC	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x26AE	0x4902    LDR	R1, [PC, #8]
0x26B0	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_3:
0x26B2	0xB001    ADD	SP, SP, #4
0x26B4	0x4770    BX	LR
0x26B6	0xBF00    NOP
0x26B8	0x847C4209  	DIO_P4OUT+0
; end of clicker_2_MSP432__setRST_3
clicker_2_MSP432__setCS_3:
;__c2_msp432_gpio.c, 95 :: 		static void _setCS_3  (uint8_t value)         { DIO_P4OUT.B6 = value; }
; value start address is: 0 (R0)
0x26BC	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x26BE	0x4902    LDR	R1, [PC, #8]
0x26C0	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_3:
0x26C2	0xB001    ADD	SP, SP, #4
0x26C4	0x4770    BX	LR
0x26C6	0xBF00    NOP
0x26C8	0x84784209  	DIO_P4OUT+0
; end of clicker_2_MSP432__setCS_3
clicker_2_MSP432__setSCK_3:
;__c2_msp432_gpio.c, 96 :: 		static void _setSCK_3 (uint8_t value)         { DIO_P9OUT.B5 = value; }
; value start address is: 0 (R0)
0x26EC	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x26EE	0x4902    LDR	R1, [PC, #8]
0x26F0	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_3:
0x26F2	0xB001    ADD	SP, SP, #4
0x26F4	0x4770    BX	LR
0x26F6	0xBF00    NOP
0x26F8	0x90544209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setSCK_3
clicker_2_MSP432__setMISO_3:
;__c2_msp432_gpio.c, 97 :: 		static void _setMISO_3(uint8_t value)         { DIO_P9OUT.B6 = value; }
; value start address is: 0 (R0)
0x28A0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28A2	0x4902    LDR	R1, [PC, #8]
0x28A4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_3:
0x28A6	0xB001    ADD	SP, SP, #4
0x28A8	0x4770    BX	LR
0x28AA	0xBF00    NOP
0x28AC	0x90584209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setMISO_3
clicker_2_MSP432__setMOSI_3:
;__c2_msp432_gpio.c, 98 :: 		static void _setMOSI_3(uint8_t value)         { DIO_P9OUT.B7 = value; }
; value start address is: 0 (R0)
0x2890	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2892	0x4902    LDR	R1, [PC, #8]
0x2894	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_3:
0x2896	0xB001    ADD	SP, SP, #4
0x2898	0x4770    BX	LR
0x289A	0xBF00    NOP
0x289C	0x905C4209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setMOSI_3
clicker_2_MSP432__setPWM_3:
;__c2_msp432_gpio.c, 99 :: 		static void _setPWM_3 (uint8_t value)         { DIO_P7OUT.B5 = value; }
; value start address is: 0 (R0)
0x28C0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28C2	0x4902    LDR	R1, [PC, #8]
0x28C4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_3:
0x28C6	0xB001    ADD	SP, SP, #4
0x28C8	0x4770    BX	LR
0x28CA	0xBF00    NOP
0x28CC	0x8C544209  	DIO_P7OUT+0
; end of clicker_2_MSP432__setPWM_3
clicker_2_MSP432__setINT_3:
;__c2_msp432_gpio.c, 100 :: 		static void _setINT_3 (uint8_t value)         { DIO_P2OUT.B0 = value; }
; value start address is: 0 (R0)
0x28B0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28B2	0x4902    LDR	R1, [PC, #8]
0x28B4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_3:
0x28B6	0xB001    ADD	SP, SP, #4
0x28B8	0x4770    BX	LR
0x28BA	0xBF00    NOP
0x28BC	0x80604209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setINT_3
clicker_2_MSP432__setRX_3:
;__c2_msp432_gpio.c, 101 :: 		static void _setRX_3  (uint8_t value)         { DIO_P2OUT.B2 = value; }
; value start address is: 0 (R0)
0x2880	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2882	0x4902    LDR	R1, [PC, #8]
0x2884	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_3:
0x2886	0xB001    ADD	SP, SP, #4
0x2888	0x4770    BX	LR
0x288A	0xBF00    NOP
0x288C	0x80684209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setRX_3
clicker_2_MSP432__setTX_3:
;__c2_msp432_gpio.c, 102 :: 		static void _setTX_3  (uint8_t value)         { DIO_P2OUT.B3 = value; }
; value start address is: 0 (R0)
0x2850	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2852	0x4902    LDR	R1, [PC, #8]
0x2854	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_3:
0x2856	0xB001    ADD	SP, SP, #4
0x2858	0x4770    BX	LR
0x285A	0xBF00    NOP
0x285C	0x806C4209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setTX_3
clicker_2_MSP432__setSCL_3:
;__c2_msp432_gpio.c, 103 :: 		static void _setSCL_3 (uint8_t value)         { DIO_P3OUT.B7 = value; }
; value start address is: 0 (R0)
0x2840	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2842	0x4902    LDR	R1, [PC, #8]
0x2844	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_3:
0x2846	0xB001    ADD	SP, SP, #4
0x2848	0x4770    BX	LR
0x284A	0xBF00    NOP
0x284C	0x845C4209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setSCL_3
clicker_2_MSP432__setSDA_3:
;__c2_msp432_gpio.c, 104 :: 		static void _setSDA_3 (uint8_t value)         { DIO_P3OUT.B6 = value; }
; value start address is: 0 (R0)
0x2870	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2872	0x4902    LDR	R1, [PC, #8]
0x2874	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_3:
0x2876	0xB001    ADD	SP, SP, #4
0x2878	0x4770    BX	LR
0x287A	0xBF00    NOP
0x287C	0x84584209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setSDA_3
clicker_2_MSP432__setAN_4:
;__c2_msp432_gpio.c, 118 :: 		static void _setAN_4  (uint8_t value)         { DIO_P9OUT.B3 = value; }
; value start address is: 0 (R0)
0x2860	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2862	0x4902    LDR	R1, [PC, #8]
0x2864	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_4:
0x2866	0xB001    ADD	SP, SP, #4
0x2868	0x4770    BX	LR
0x286A	0xBF00    NOP
0x286C	0x904C4209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setAN_4
clicker_2_MSP432__setRST_4:
;__c2_msp432_gpio.c, 119 :: 		static void _setRST_4 (uint8_t value)         { DIO_P4OUT.B5 = value; }
; value start address is: 0 (R0)
0x2930	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2932	0x4902    LDR	R1, [PC, #8]
0x2934	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_4:
0x2936	0xB001    ADD	SP, SP, #4
0x2938	0x4770    BX	LR
0x293A	0xBF00    NOP
0x293C	0x84744209  	DIO_P4OUT+0
; end of clicker_2_MSP432__setRST_4
clicker_2_MSP432__setCS_4:
;__c2_msp432_gpio.c, 120 :: 		static void _setCS_4  (uint8_t value)         { DIO_P4OUT.B4 = value; }
; value start address is: 0 (R0)
0x2920	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2922	0x4902    LDR	R1, [PC, #8]
0x2924	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_4:
0x2926	0xB001    ADD	SP, SP, #4
0x2928	0x4770    BX	LR
0x292A	0xBF00    NOP
0x292C	0x84704209  	DIO_P4OUT+0
; end of clicker_2_MSP432__setCS_4
clicker_2_MSP432__setSCK_4:
;__c2_msp432_gpio.c, 121 :: 		static void _setSCK_4 (uint8_t value)         { DIO_P9OUT.B5 = value; }
; value start address is: 0 (R0)
0x2950	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2952	0x4902    LDR	R1, [PC, #8]
0x2954	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_4:
0x2956	0xB001    ADD	SP, SP, #4
0x2958	0x4770    BX	LR
0x295A	0xBF00    NOP
0x295C	0x90544209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setSCK_4
clicker_2_MSP432__setMISO_4:
;__c2_msp432_gpio.c, 122 :: 		static void _setMISO_4(uint8_t value)         { DIO_P9OUT.B6 = value; }
; value start address is: 0 (R0)
0x2940	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2942	0x4902    LDR	R1, [PC, #8]
0x2944	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_4:
0x2946	0xB001    ADD	SP, SP, #4
0x2948	0x4770    BX	LR
0x294A	0xBF00    NOP
0x294C	0x90584209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setMISO_4
clicker_2_MSP432__setMOSI_4:
;__c2_msp432_gpio.c, 123 :: 		static void _setMOSI_4(uint8_t value)         { DIO_P9OUT.B7 = value; }
; value start address is: 0 (R0)
0x2910	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2912	0x4902    LDR	R1, [PC, #8]
0x2914	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_4:
0x2916	0xB001    ADD	SP, SP, #4
0x2918	0x4770    BX	LR
0x291A	0xBF00    NOP
0x291C	0x905C4209  	DIO_P9OUT+0
; end of clicker_2_MSP432__setMOSI_4
clicker_2_MSP432__setPWM_4:
;__c2_msp432_gpio.c, 124 :: 		static void _setPWM_4 (uint8_t value)         { DIO_P2OUT.B5 = value; }
; value start address is: 0 (R0)
0x28E0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28E2	0x4902    LDR	R1, [PC, #8]
0x28E4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_4:
0x28E6	0xB001    ADD	SP, SP, #4
0x28E8	0x4770    BX	LR
0x28EA	0xBF00    NOP
0x28EC	0x80744209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setPWM_4
clicker_2_MSP432__setINT_4:
;__c2_msp432_gpio.c, 125 :: 		static void _setINT_4 (uint8_t value)         { DIO_P2OUT.B1 = value; }
; value start address is: 0 (R0)
0x28D0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28D2	0x4902    LDR	R1, [PC, #8]
0x28D4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_4:
0x28D6	0xB001    ADD	SP, SP, #4
0x28D8	0x4770    BX	LR
0x28DA	0xBF00    NOP
0x28DC	0x80644209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setINT_4
clicker_2_MSP432__setRX_4:
;__c2_msp432_gpio.c, 126 :: 		static void _setRX_4  (uint8_t value)         { DIO_P2OUT.B2 = value; }
; value start address is: 0 (R0)
0x2900	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2902	0x4902    LDR	R1, [PC, #8]
0x2904	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_4:
0x2906	0xB001    ADD	SP, SP, #4
0x2908	0x4770    BX	LR
0x290A	0xBF00    NOP
0x290C	0x80684209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setRX_4
clicker_2_MSP432__setTX_4:
;__c2_msp432_gpio.c, 127 :: 		static void _setTX_4  (uint8_t value)         { DIO_P2OUT.B3 = value; }
; value start address is: 0 (R0)
0x28F0	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x28F2	0x4902    LDR	R1, [PC, #8]
0x28F4	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_4:
0x28F6	0xB001    ADD	SP, SP, #4
0x28F8	0x4770    BX	LR
0x28FA	0xBF00    NOP
0x28FC	0x806C4209  	DIO_P2OUT+0
; end of clicker_2_MSP432__setTX_4
clicker_2_MSP432__setSCL_4:
;__c2_msp432_gpio.c, 128 :: 		static void _setSCL_4 (uint8_t value)         { DIO_P3OUT.B7 = value; }
; value start address is: 0 (R0)
0x2830	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x2832	0x4902    LDR	R1, [PC, #8]
0x2834	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_4:
0x2836	0xB001    ADD	SP, SP, #4
0x2838	0x4770    BX	LR
0x283A	0xBF00    NOP
0x283C	0x845C4209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setSCL_4
clicker_2_MSP432__setSDA_4:
;__c2_msp432_gpio.c, 129 :: 		static void _setSDA_4 (uint8_t value)         { DIO_P3OUT.B6 = value; }
; value start address is: 0 (R0)
0x2718	0xB081    SUB	SP, SP, #4
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x271A	0x4902    LDR	R1, [PC, #8]
0x271C	0x7008    STRB	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_4:
0x271E	0xB001    ADD	SP, SP, #4
0x2720	0x4770    BX	LR
0x2722	0xBF00    NOP
0x2724	0x84584209  	DIO_P3OUT+0
; end of clicker_2_MSP432__setSDA_4
__gyro2_driver_hal_i2cMap:
;__hal_msp432.c, 79 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
0x26FC	0xB081    SUB	SP, SP, #4
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_msp432.c, 83 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x26FE	0x6802    LDR	R2, [R0, #0]
0x2700	0x4903    LDR	R1, [PC, #12]
0x2702	0x600A    STR	R2, [R1, #0]
;__hal_msp432.c, 84 :: 		fp_i2cRead     = tmp->i2cRead;
0x2704	0x1D01    ADDS	R1, R0, #4
; i2cObj end address is: 0 (R0)
0x2706	0x680A    LDR	R2, [R1, #0]
0x2708	0x4902    LDR	R1, [PC, #8]
0x270A	0x600A    STR	R2, [R1, #0]
;__hal_msp432.c, 85 :: 		}
L_end_hal_i2cMap:
0x270C	0xB001    ADD	SP, SP, #4
0x270E	0x4770    BX	LR
0x2710	0x00AC2000  	__gyro2_driver_fp_i2cWrite+0
0x2714	0x00A82000  	__gyro2_driver_fp_i2cRead+0
; end of __gyro2_driver_hal_i2cMap
__gyro2_driver_hal_gpioMap:
;__gyro2_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
0x2748	0xB081    SUB	SP, SP, #4
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__gyro2_hal.c, 344 :: 		hal_gpio_pwmGet = tmp->gpioGet[ __PWM_PIN_INPUT__ ];
0x274A	0xF2000330  ADDW	R3, R0, #48
0x274E	0xF2030118  ADDW	R1, R3, #24
0x2752	0x680A    LDR	R2, [R1, #0]
0x2754	0x490C    LDR	R1, [PC, #48]
0x2756	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x2758	0xF203011C  ADDW	R1, R3, #28
0x275C	0x680A    LDR	R2, [R1, #0]
0x275E	0x490B    LDR	R1, [PC, #44]
0x2760	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 362 :: 		hal_gpio_anSet = tmp->gpioSet[ __AN_PIN_OUTPUT__ ];
0x2762	0x6802    LDR	R2, [R0, #0]
0x2764	0x490A    LDR	R1, [PC, #40]
0x2766	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x2768	0xF2000108  ADDW	R1, R0, #8
0x276C	0x680A    LDR	R2, [R1, #0]
0x276E	0x4909    LDR	R1, [PC, #36]
0x2770	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x2772	0x1D01    ADDS	R1, R0, #4
0x2774	0x680A    LDR	R2, [R1, #0]
0x2776	0x4908    LDR	R1, [PC, #32]
0x2778	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 380 :: 		hal_gpio_pwmSet = tmp->gpioSet[ __PWM_PIN_OUTPUT__ ];
0x277A	0xF2000118  ADDW	R1, R0, #24
; gpioObj end address is: 0 (R0)
0x277E	0x680A    LDR	R2, [R1, #0]
0x2780	0x4906    LDR	R1, [PC, #24]
0x2782	0x600A    STR	R2, [R1, #0]
;__gyro2_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x2784	0xB001    ADD	SP, SP, #4
0x2786	0x4770    BX	LR
0x2788	0x009C2000  	__gyro2_driver_hal_gpio_pwmGet+0
0x278C	0x00B02000  	__gyro2_driver_hal_gpio_intGet+0
0x2790	0x00B42000  	__gyro2_driver_hal_gpio_anSet+0
0x2794	0x00A02000  	__gyro2_driver_hal_gpio_csSet+0
0x2798	0x00B82000  	__gyro2_driver_hal_gpio_rstSet+0
0x279C	0x00BC2000  	__gyro2_driver_hal_gpio_pwmSet+0
; end of __gyro2_driver_hal_gpioMap
_mikrobus_logWrite:
;clicker_2_MSP432.c, 318 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x2E2C	0xB083    SUB	SP, SP, #12
0x2E2E	0xF8CDE000  STR	LR, [SP, #0]
0x2E32	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;clicker_2_MSP432.c, 320 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x2E34	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;clicker_2_MSP432.c, 321 :: 		uint8_t row = 13;
0x2E36	0x220D    MOVS	R2, #13
0x2E38	0xF88D2008  STRB	R2, [SP, #8]
0x2E3C	0x220A    MOVS	R2, #10
0x2E3E	0xF88D2009  STRB	R2, [SP, #9]
;clicker_2_MSP432.c, 322 :: 		uint8_t line = 10;
;clicker_2_MSP432.c, 323 :: 		switch( format )
0x2E42	0xE01F    B	L_mikrobus_logWrite185
; format end address is: 4 (R1)
;clicker_2_MSP432.c, 325 :: 		case _LOG_BYTE :
L_mikrobus_logWrite187:
;clicker_2_MSP432.c, 326 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x2E44	0xF7FFFC70  BL	clicker_2_MSP432__log_write+0
;clicker_2_MSP432.c, 327 :: 		break;
0x2E48	0xE023    B	L_mikrobus_logWrite186
;clicker_2_MSP432.c, 328 :: 		case _LOG_TEXT :
L_mikrobus_logWrite188:
;clicker_2_MSP432.c, 329 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite189:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2E4A	0x7802    LDRB	R2, [R0, #0]
0x2E4C	0xB12A    CBZ	R2, L_mikrobus_logWrite190
;clicker_2_MSP432.c, 331 :: 		_log_write( ptr );
0x2E4E	0x9001    STR	R0, [SP, #4]
0x2E50	0xF7FFFC6A  BL	clicker_2_MSP432__log_write+0
0x2E54	0x9801    LDR	R0, [SP, #4]
;clicker_2_MSP432.c, 332 :: 		ptr++;
0x2E56	0x1C40    ADDS	R0, R0, #1
;clicker_2_MSP432.c, 333 :: 		}
; ptr end address is: 0 (R0)
0x2E58	0xE7F7    B	L_mikrobus_logWrite189
L_mikrobus_logWrite190:
;clicker_2_MSP432.c, 334 :: 		break;
0x2E5A	0xE01A    B	L_mikrobus_logWrite186
;clicker_2_MSP432.c, 335 :: 		case _LOG_LINE :
L_mikrobus_logWrite191:
;clicker_2_MSP432.c, 336 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite192:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2E5C	0x7802    LDRB	R2, [R0, #0]
0x2E5E	0xB12A    CBZ	R2, L_mikrobus_logWrite193
;clicker_2_MSP432.c, 338 :: 		_log_write( ptr );
0x2E60	0x9001    STR	R0, [SP, #4]
0x2E62	0xF7FFFC61  BL	clicker_2_MSP432__log_write+0
0x2E66	0x9801    LDR	R0, [SP, #4]
;clicker_2_MSP432.c, 339 :: 		ptr++;
0x2E68	0x1C40    ADDS	R0, R0, #1
;clicker_2_MSP432.c, 340 :: 		}
; ptr end address is: 0 (R0)
0x2E6A	0xE7F7    B	L_mikrobus_logWrite192
L_mikrobus_logWrite193:
;clicker_2_MSP432.c, 341 :: 		_log_write( &row );
0x2E6C	0xAA02    ADD	R2, SP, #8
0x2E6E	0x4610    MOV	R0, R2
0x2E70	0xF7FFFC5A  BL	clicker_2_MSP432__log_write+0
;clicker_2_MSP432.c, 342 :: 		_log_write( &line );
0x2E74	0xF10D0209  ADD	R2, SP, #9
0x2E78	0x4610    MOV	R0, R2
0x2E7A	0xF7FFFC55  BL	clicker_2_MSP432__log_write+0
;clicker_2_MSP432.c, 343 :: 		break;
0x2E7E	0xE008    B	L_mikrobus_logWrite186
;clicker_2_MSP432.c, 344 :: 		default :
L_mikrobus_logWrite194:
;clicker_2_MSP432.c, 345 :: 		return _MIKROBUS_ERR_LOG;
0x2E80	0x2006    MOVS	R0, #6
0x2E82	0xE007    B	L_end_mikrobus_logWrite
;clicker_2_MSP432.c, 346 :: 		}
L_mikrobus_logWrite185:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x2E84	0x2900    CMP	R1, #0
0x2E86	0xD0DD    BEQ	L_mikrobus_logWrite187
0x2E88	0x2901    CMP	R1, #1
0x2E8A	0xD0DE    BEQ	L_mikrobus_logWrite188
0x2E8C	0x2902    CMP	R1, #2
0x2E8E	0xD0E5    BEQ	L_mikrobus_logWrite191
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x2E90	0xE7F6    B	L_mikrobus_logWrite194
L_mikrobus_logWrite186:
;clicker_2_MSP432.c, 347 :: 		return 0;
0x2E92	0x2000    MOVS	R0, #0
;clicker_2_MSP432.c, 348 :: 		}
L_end_mikrobus_logWrite:
0x2E94	0xF8DDE000  LDR	LR, [SP, #0]
0x2E98	0xB003    ADD	SP, SP, #12
0x2E9A	0x4770    BX	LR
; end of _mikrobus_logWrite
clicker_2_MSP432__log_write:
;__c2_msp432_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x2728	0xB081    SUB	SP, SP, #4
0x272A	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__c2_msp432_log.c, 19 :: 		logger( *data_ );
0x272E	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x2730	0xB2CC    UXTB	R4, R1
0x2732	0xB2A0    UXTH	R0, R4
0x2734	0x4C03    LDR	R4, [PC, #12]
0x2736	0x6824    LDR	R4, [R4, #0]
0x2738	0x47A0    BLX	R4
;__c2_msp432_log.c, 20 :: 		return 0;
0x273A	0x2000    MOVS	R0, #0
;__c2_msp432_log.c, 21 :: 		}
L_end__log_write:
0x273C	0xF8DDE000  LDR	LR, [SP, #0]
0x2740	0xB001    ADD	SP, SP, #4
0x2742	0x4770    BX	LR
0x2744	0x00782000  	_logger+0
; end of clicker_2_MSP432__log_write
_SPI1_Write:
;__Lib_SPI_MSP.c, 111 :: 		
; data_out start address is: 0 (R0)
0x17E8	0xB081    SUB	SP, SP, #4
0x17EA	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 112 :: 		
; data_out end address is: 0 (R0)
0x17EE	0xF7FFFD25  BL	__Lib_SPI_MSP_SPI1_Write_Static+0
;__Lib_SPI_MSP.c, 113 :: 		
L_end_SPI1_Write:
0x17F2	0xF8DDE000  LDR	LR, [SP, #0]
0x17F6	0xB001    ADD	SP, SP, #4
0x17F8	0x4770    BX	LR
; end of _SPI1_Write
__Lib_SPI_MSP_SPI1_Write_Static:
;__Lib_SPI_MSP.c, 104 :: 		
; data_out start address is: 0 (R0)
0x123C	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 105 :: 		
L___Lib_SPI_MSP_SPI1_Write_Static1:
; data_out start address is: 0 (R0)
0x123E	0x4906    LDR	R1, [PC, #24]
0x1240	0x8809    LDRH	R1, [R1, #0]
0x1242	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI1_Write_Static2
0x1244	0xE7FB    B	L___Lib_SPI_MSP_SPI1_Write_Static1
L___Lib_SPI_MSP_SPI1_Write_Static2:
;__Lib_SPI_MSP.c, 106 :: 		
0x1246	0x4905    LDR	R1, [PC, #20]
0x1248	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 107 :: 		
L___Lib_SPI_MSP_SPI1_Write_Static3:
0x124A	0x4903    LDR	R1, [PC, #12]
0x124C	0x8809    LDRH	R1, [R1, #0]
0x124E	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI1_Write_Static4
0x1250	0xE7FB    B	L___Lib_SPI_MSP_SPI1_Write_Static3
L___Lib_SPI_MSP_SPI1_Write_Static4:
;__Lib_SPI_MSP.c, 108 :: 		
L_end_SPI1_Write_Static:
0x1252	0xB001    ADD	SP, SP, #4
0x1254	0x4770    BX	LR
0x1256	0xBF00    NOP
0x1258	0x01404202  	EUSCI_A0_UCA0STATW+0
0x125C	0x100E4000  	EUSCI_A0_UCA0TXBUF+0
; end of __Lib_SPI_MSP_SPI1_Write_Static
_SPI2_Write:
;__Lib_SPI_MSP.c, 191 :: 		
; data_out start address is: 0 (R0)
0x17D4	0xB081    SUB	SP, SP, #4
0x17D6	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 192 :: 		
; data_out end address is: 0 (R0)
0x17DA	0xF7FFFCE7  BL	__Lib_SPI_MSP_SPI2_Write_Static+0
;__Lib_SPI_MSP.c, 193 :: 		
L_end_SPI2_Write:
0x17DE	0xF8DDE000  LDR	LR, [SP, #0]
0x17E2	0xB001    ADD	SP, SP, #4
0x17E4	0x4770    BX	LR
; end of _SPI2_Write
__Lib_SPI_MSP_SPI2_Write_Static:
;__Lib_SPI_MSP.c, 184 :: 		
; data_out start address is: 0 (R0)
0x11AC	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 185 :: 		
L___Lib_SPI_MSP_SPI2_Write_Static8:
; data_out start address is: 0 (R0)
0x11AE	0x4906    LDR	R1, [PC, #24]
0x11B0	0x8809    LDRH	R1, [R1, #0]
0x11B2	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI2_Write_Static9
0x11B4	0xE7FB    B	L___Lib_SPI_MSP_SPI2_Write_Static8
L___Lib_SPI_MSP_SPI2_Write_Static9:
;__Lib_SPI_MSP.c, 186 :: 		
0x11B6	0x4905    LDR	R1, [PC, #20]
0x11B8	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 187 :: 		
L___Lib_SPI_MSP_SPI2_Write_Static10:
0x11BA	0x4903    LDR	R1, [PC, #12]
0x11BC	0x8809    LDRH	R1, [R1, #0]
0x11BE	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI2_Write_Static11
0x11C0	0xE7FB    B	L___Lib_SPI_MSP_SPI2_Write_Static10
L___Lib_SPI_MSP_SPI2_Write_Static11:
;__Lib_SPI_MSP.c, 188 :: 		
L_end_SPI2_Write_Static:
0x11C2	0xB001    ADD	SP, SP, #4
0x11C4	0x4770    BX	LR
0x11C6	0xBF00    NOP
0x11C8	0x81404202  	EUSCI_A1_UCA1STATW+0
0x11CC	0x140E4000  	EUSCI_A1_UCA1TXBUF+0
; end of __Lib_SPI_MSP_SPI2_Write_Static
_SPI3_Write:
;__Lib_SPI_MSP.c, 271 :: 		
; data_out start address is: 0 (R0)
0x1830	0xB081    SUB	SP, SP, #4
0x1832	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 272 :: 		
; data_out end address is: 0 (R0)
0x1836	0xF7FFFCA7  BL	__Lib_SPI_MSP_SPI3_Write_Static+0
;__Lib_SPI_MSP.c, 273 :: 		
L_end_SPI3_Write:
0x183A	0xF8DDE000  LDR	LR, [SP, #0]
0x183E	0xB001    ADD	SP, SP, #4
0x1840	0x4770    BX	LR
; end of _SPI3_Write
__Lib_SPI_MSP_SPI3_Write_Static:
;__Lib_SPI_MSP.c, 264 :: 		
; data_out start address is: 0 (R0)
0x1188	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 265 :: 		
L___Lib_SPI_MSP_SPI3_Write_Static15:
; data_out start address is: 0 (R0)
0x118A	0x4906    LDR	R1, [PC, #24]
0x118C	0x8809    LDRH	R1, [R1, #0]
0x118E	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI3_Write_Static16
0x1190	0xE7FB    B	L___Lib_SPI_MSP_SPI3_Write_Static15
L___Lib_SPI_MSP_SPI3_Write_Static16:
;__Lib_SPI_MSP.c, 266 :: 		
0x1192	0x4905    LDR	R1, [PC, #20]
0x1194	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 267 :: 		
L___Lib_SPI_MSP_SPI3_Write_Static17:
0x1196	0x4903    LDR	R1, [PC, #12]
0x1198	0x8809    LDRH	R1, [R1, #0]
0x119A	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI3_Write_Static18
0x119C	0xE7FB    B	L___Lib_SPI_MSP_SPI3_Write_Static17
L___Lib_SPI_MSP_SPI3_Write_Static18:
;__Lib_SPI_MSP.c, 268 :: 		
L_end_SPI3_Write_Static:
0x119E	0xB001    ADD	SP, SP, #4
0x11A0	0x4770    BX	LR
0x11A2	0xBF00    NOP
0x11A4	0x01404203  	EUSCI_A2_UCA2STATW+0
0x11A8	0x180E4000  	EUSCI_A2_UCA2TXBUF+0
; end of __Lib_SPI_MSP_SPI3_Write_Static
_SPI4_Write:
;__Lib_SPI_MSP.c, 351 :: 		
; data_out start address is: 0 (R0)
0x17C0	0xB081    SUB	SP, SP, #4
0x17C2	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 352 :: 		
; data_out end address is: 0 (R0)
0x17C6	0xF7FFFD15  BL	__Lib_SPI_MSP_SPI4_Write_Static+0
;__Lib_SPI_MSP.c, 353 :: 		
L_end_SPI4_Write:
0x17CA	0xF8DDE000  LDR	LR, [SP, #0]
0x17CE	0xB001    ADD	SP, SP, #4
0x17D0	0x4770    BX	LR
; end of _SPI4_Write
__Lib_SPI_MSP_SPI4_Write_Static:
;__Lib_SPI_MSP.c, 344 :: 		
; data_out start address is: 0 (R0)
0x11F4	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 345 :: 		
L___Lib_SPI_MSP_SPI4_Write_Static22:
; data_out start address is: 0 (R0)
0x11F6	0x4906    LDR	R1, [PC, #24]
0x11F8	0x8809    LDRH	R1, [R1, #0]
0x11FA	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI4_Write_Static23
0x11FC	0xE7FB    B	L___Lib_SPI_MSP_SPI4_Write_Static22
L___Lib_SPI_MSP_SPI4_Write_Static23:
;__Lib_SPI_MSP.c, 346 :: 		
0x11FE	0x4905    LDR	R1, [PC, #20]
0x1200	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 347 :: 		
L___Lib_SPI_MSP_SPI4_Write_Static24:
0x1202	0x4903    LDR	R1, [PC, #12]
0x1204	0x8809    LDRH	R1, [R1, #0]
0x1206	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI4_Write_Static25
0x1208	0xE7FB    B	L___Lib_SPI_MSP_SPI4_Write_Static24
L___Lib_SPI_MSP_SPI4_Write_Static25:
;__Lib_SPI_MSP.c, 348 :: 		
L_end_SPI4_Write_Static:
0x120A	0xB001    ADD	SP, SP, #4
0x120C	0x4770    BX	LR
0x120E	0xBF00    NOP
0x1210	0x81404203  	EUSCI_A3_UCA3STATW+0
0x1214	0x1C0E4000  	EUSCI_A3_UCA3TXBUF+0
; end of __Lib_SPI_MSP_SPI4_Write_Static
_SPI5_Write:
;__Lib_SPI_MSP.c, 429 :: 		
; data_out start address is: 0 (R0)
0x17AC	0xB081    SUB	SP, SP, #4
0x17AE	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 430 :: 		
; data_out end address is: 0 (R0)
0x17B2	0xF7FFFD0D  BL	__Lib_SPI_MSP_SPI5_Write_Static+0
;__Lib_SPI_MSP.c, 431 :: 		
L_end_SPI5_Write:
0x17B6	0xF8DDE000  LDR	LR, [SP, #0]
0x17BA	0xB001    ADD	SP, SP, #4
0x17BC	0x4770    BX	LR
; end of _SPI5_Write
__Lib_SPI_MSP_SPI5_Write_Static:
;__Lib_SPI_MSP.c, 422 :: 		
; data_out start address is: 0 (R0)
0x11D0	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 423 :: 		
L___Lib_SPI_MSP_SPI5_Write_Static29:
; data_out start address is: 0 (R0)
0x11D2	0x4906    LDR	R1, [PC, #24]
0x11D4	0x8809    LDRH	R1, [R1, #0]
0x11D6	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI5_Write_Static30
0x11D8	0xE7FB    B	L___Lib_SPI_MSP_SPI5_Write_Static29
L___Lib_SPI_MSP_SPI5_Write_Static30:
;__Lib_SPI_MSP.c, 424 :: 		
0x11DA	0x4905    LDR	R1, [PC, #20]
0x11DC	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 425 :: 		
L___Lib_SPI_MSP_SPI5_Write_Static31:
0x11DE	0x4903    LDR	R1, [PC, #12]
0x11E0	0x8809    LDRH	R1, [R1, #0]
0x11E2	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI5_Write_Static32
0x11E4	0xE7FB    B	L___Lib_SPI_MSP_SPI5_Write_Static31
L___Lib_SPI_MSP_SPI5_Write_Static32:
;__Lib_SPI_MSP.c, 426 :: 		
L_end_SPI5_Write_Static:
0x11E6	0xB001    ADD	SP, SP, #4
0x11E8	0x4770    BX	LR
0x11EA	0xBF00    NOP
0x11EC	0x01004204  	EUSCI_B0_UCB0STATW+0
0x11F0	0x200E4000  	EUSCI_B0_UCB0TXBUF+0
; end of __Lib_SPI_MSP_SPI5_Write_Static
_SPI6_Write:
;__Lib_SPI_MSP.c, 507 :: 		
; data_out start address is: 0 (R0)
0x191C	0xB081    SUB	SP, SP, #4
0x191E	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 508 :: 		
; data_out end address is: 0 (R0)
0x1922	0xF7FFFC9D  BL	__Lib_SPI_MSP_SPI6_Write_Static+0
;__Lib_SPI_MSP.c, 509 :: 		
L_end_SPI6_Write:
0x1926	0xF8DDE000  LDR	LR, [SP, #0]
0x192A	0xB001    ADD	SP, SP, #4
0x192C	0x4770    BX	LR
; end of _SPI6_Write
__Lib_SPI_MSP_SPI6_Write_Static:
;__Lib_SPI_MSP.c, 500 :: 		
; data_out start address is: 0 (R0)
0x1260	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 501 :: 		
L___Lib_SPI_MSP_SPI6_Write_Static36:
; data_out start address is: 0 (R0)
0x1262	0x4906    LDR	R1, [PC, #24]
0x1264	0x8809    LDRH	R1, [R1, #0]
0x1266	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI6_Write_Static37
0x1268	0xE7FB    B	L___Lib_SPI_MSP_SPI6_Write_Static36
L___Lib_SPI_MSP_SPI6_Write_Static37:
;__Lib_SPI_MSP.c, 502 :: 		
0x126A	0x4905    LDR	R1, [PC, #20]
0x126C	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 503 :: 		
L___Lib_SPI_MSP_SPI6_Write_Static38:
0x126E	0x4903    LDR	R1, [PC, #12]
0x1270	0x8809    LDRH	R1, [R1, #0]
0x1272	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI6_Write_Static39
0x1274	0xE7FB    B	L___Lib_SPI_MSP_SPI6_Write_Static38
L___Lib_SPI_MSP_SPI6_Write_Static39:
;__Lib_SPI_MSP.c, 504 :: 		
L_end_SPI6_Write_Static:
0x1276	0xB001    ADD	SP, SP, #4
0x1278	0x4770    BX	LR
0x127A	0xBF00    NOP
0x127C	0x81004204  	EUSCI_B1_UCB1STATW+0
0x1280	0x240E4000  	EUSCI_B1_UCB1TXBUF+0
; end of __Lib_SPI_MSP_SPI6_Write_Static
_SPI7_Write:
;__Lib_SPI_MSP.c, 585 :: 		
; data_out start address is: 0 (R0)
0x1908	0xB081    SUB	SP, SP, #4
0x190A	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 586 :: 		
; data_out end address is: 0 (R0)
0x190E	0xF7FFFCB9  BL	__Lib_SPI_MSP_SPI7_Write_Static+0
;__Lib_SPI_MSP.c, 587 :: 		
L_end_SPI7_Write:
0x1912	0xF8DDE000  LDR	LR, [SP, #0]
0x1916	0xB001    ADD	SP, SP, #4
0x1918	0x4770    BX	LR
; end of _SPI7_Write
__Lib_SPI_MSP_SPI7_Write_Static:
;__Lib_SPI_MSP.c, 578 :: 		
; data_out start address is: 0 (R0)
0x1284	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 579 :: 		
L___Lib_SPI_MSP_SPI7_Write_Static43:
; data_out start address is: 0 (R0)
0x1286	0x4906    LDR	R1, [PC, #24]
0x1288	0x8809    LDRH	R1, [R1, #0]
0x128A	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI7_Write_Static44
0x128C	0xE7FB    B	L___Lib_SPI_MSP_SPI7_Write_Static43
L___Lib_SPI_MSP_SPI7_Write_Static44:
;__Lib_SPI_MSP.c, 580 :: 		
0x128E	0x4905    LDR	R1, [PC, #20]
0x1290	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 581 :: 		
L___Lib_SPI_MSP_SPI7_Write_Static45:
0x1292	0x4903    LDR	R1, [PC, #12]
0x1294	0x8809    LDRH	R1, [R1, #0]
0x1296	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI7_Write_Static46
0x1298	0xE7FB    B	L___Lib_SPI_MSP_SPI7_Write_Static45
L___Lib_SPI_MSP_SPI7_Write_Static46:
;__Lib_SPI_MSP.c, 582 :: 		
L_end_SPI7_Write_Static:
0x129A	0xB001    ADD	SP, SP, #4
0x129C	0x4770    BX	LR
0x129E	0xBF00    NOP
0x12A0	0x01004205  	EUSCI_B2_UCB2STATW+0
0x12A4	0x280E4000  	EUSCI_B2_UCB2TXBUF+0
; end of __Lib_SPI_MSP_SPI7_Write_Static
_SPI8_Write:
;__Lib_SPI_MSP.c, 663 :: 		
; data_out start address is: 0 (R0)
0x194C	0xB081    SUB	SP, SP, #4
0x194E	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_MSP.c, 664 :: 		
; data_out end address is: 0 (R0)
0x1952	0xF7FFFC61  BL	__Lib_SPI_MSP_SPI8_Write_Static+0
;__Lib_SPI_MSP.c, 665 :: 		
L_end_SPI8_Write:
0x1956	0xF8DDE000  LDR	LR, [SP, #0]
0x195A	0xB001    ADD	SP, SP, #4
0x195C	0x4770    BX	LR
; end of _SPI8_Write
__Lib_SPI_MSP_SPI8_Write_Static:
;__Lib_SPI_MSP.c, 656 :: 		
; data_out start address is: 0 (R0)
0x1218	0xB081    SUB	SP, SP, #4
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 657 :: 		
L___Lib_SPI_MSP_SPI8_Write_Static50:
; data_out start address is: 0 (R0)
0x121A	0x4906    LDR	R1, [PC, #24]
0x121C	0x8809    LDRH	R1, [R1, #0]
0x121E	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI8_Write_Static51
0x1220	0xE7FB    B	L___Lib_SPI_MSP_SPI8_Write_Static50
L___Lib_SPI_MSP_SPI8_Write_Static51:
;__Lib_SPI_MSP.c, 658 :: 		
0x1222	0x4905    LDR	R1, [PC, #20]
0x1224	0x8008    STRH	R0, [R1, #0]
; data_out end address is: 0 (R0)
;__Lib_SPI_MSP.c, 659 :: 		
L___Lib_SPI_MSP_SPI8_Write_Static52:
0x1226	0x4903    LDR	R1, [PC, #12]
0x1228	0x8809    LDRH	R1, [R1, #0]
0x122A	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI8_Write_Static53
0x122C	0xE7FB    B	L___Lib_SPI_MSP_SPI8_Write_Static52
L___Lib_SPI_MSP_SPI8_Write_Static53:
;__Lib_SPI_MSP.c, 660 :: 		
L_end_SPI8_Write_Static:
0x122E	0xB001    ADD	SP, SP, #4
0x1230	0x4770    BX	LR
0x1232	0xBF00    NOP
0x1234	0x81004205  	EUSCI_B3_UCB3STATW+0
0x1238	0x2C0E4000  	EUSCI_B3_UCB3TXBUF+0
; end of __Lib_SPI_MSP_SPI8_Write_Static
_UART0_Write:
;__Lib_UART_MSP.c, 483 :: 		
; _data start address is: 0 (R0)
0x1930	0xB081    SUB	SP, SP, #4
0x1932	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_MSP.c, 484 :: 		
0x1936	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1938	0x4803    LDR	R0, [PC, #12]
0x193A	0xF7FFFBD9  BL	__Lib_UART_MSP_UARTx_Write+0
;__Lib_UART_MSP.c, 485 :: 		
L_end_UART0_Write:
0x193E	0xF8DDE000  LDR	LR, [SP, #0]
0x1942	0xB001    ADD	SP, SP, #4
0x1944	0x4770    BX	LR
0x1946	0xBF00    NOP
0x1948	0x10004000  	EUSCI_A0_UCA0CTLW0+0
; end of _UART0_Write
__Lib_UART_MSP_UARTx_Write:
;__Lib_UART_MSP.c, 372 :: 		
; _data start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x10F0	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; _data start address is: 4 (R1)
0x10F2	0xF8AD1000  STRH	R1, [SP, #0]
; uartBase end address is: 0 (R0)
; _data end address is: 4 (R1)
0x10F6	0x4601    MOV	R1, R0
0x10F8	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_MSP.c, 373 :: 		
L___Lib_UART_MSP_UARTx_Write35:
; _data start address is: 0 (R0)
; uartBase start address is: 4 (R1)
0x10FC	0xF201020A  ADDW	R2, R1, #10
0x1100	0x8812    LDRH	R2, [R2, #0]
0x1102	0xF0020201  AND	R2, R2, #1
0x1106	0xB292    UXTH	R2, R2
0x1108	0xB102    CBZ	R2, L___Lib_UART_MSP_UARTx_Write36
0x110A	0xE7F7    B	L___Lib_UART_MSP_UARTx_Write35
L___Lib_UART_MSP_UARTx_Write36:
;__Lib_UART_MSP.c, 374 :: 		
0x110C	0xF201020E  ADDW	R2, R1, #14
; uartBase end address is: 4 (R1)
0x1110	0x8010    STRH	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_MSP.c, 375 :: 		
L_end_UARTx_Write:
0x1112	0xB001    ADD	SP, SP, #4
0x1114	0x4770    BX	LR
; end of __Lib_UART_MSP_UARTx_Write
_UART1_Write:
;__Lib_UART_MSP.c, 606 :: 		
; _data start address is: 0 (R0)
0x18EC	0xB081    SUB	SP, SP, #4
0x18EE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_MSP.c, 607 :: 		
0x18F2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x18F4	0x4803    LDR	R0, [PC, #12]
0x18F6	0xF7FFFBFB  BL	__Lib_UART_MSP_UARTx_Write+0
;__Lib_UART_MSP.c, 608 :: 		
L_end_UART1_Write:
0x18FA	0xF8DDE000  LDR	LR, [SP, #0]
0x18FE	0xB001    ADD	SP, SP, #4
0x1900	0x4770    BX	LR
0x1902	0xBF00    NOP
0x1904	0x14004000  	EUSCI_A1_UCA1CTLW0+0
; end of _UART1_Write
_UART2_Write:
;__Lib_UART_MSP.c, 728 :: 		
; _data start address is: 0 (R0)
0x1860	0xB081    SUB	SP, SP, #4
0x1862	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_MSP.c, 729 :: 		
0x1866	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1868	0x4803    LDR	R0, [PC, #12]
0x186A	0xF7FFFC41  BL	__Lib_UART_MSP_UARTx_Write+0
;__Lib_UART_MSP.c, 730 :: 		
L_end_UART2_Write:
0x186E	0xF8DDE000  LDR	LR, [SP, #0]
0x1872	0xB001    ADD	SP, SP, #4
0x1874	0x4770    BX	LR
0x1876	0xBF00    NOP
0x1878	0x18004000  	EUSCI_A2_UCA2CTLW0+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_MSP.c, 850 :: 		
; _data start address is: 0 (R0)
0x1844	0xB081    SUB	SP, SP, #4
0x1846	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_MSP.c, 851 :: 		
0x184A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x184C	0x4803    LDR	R0, [PC, #12]
0x184E	0xF7FFFC4F  BL	__Lib_UART_MSP_UARTx_Write+0
;__Lib_UART_MSP.c, 852 :: 		
L_end_UART3_Write:
0x1852	0xF8DDE000  LDR	LR, [SP, #0]
0x1856	0xB001    ADD	SP, SP, #4
0x1858	0x4770    BX	LR
0x185A	0xBF00    NOP
0x185C	0x1C004000  	EUSCI_A3_UCA3CTLW0+0
; end of _UART3_Write
_gyro2_getID:
;__gyro2_driver.c, 221 :: 		uint8_t gyro2_getID()
0x2BFC	0xB081    SUB	SP, SP, #4
0x2BFE	0xF8CDE000  STR	LR, [SP, #0]
;__gyro2_driver.c, 224 :: 		tmp = gyro2_singleRead(GYRO2_WHO_AM_I);
0x2C02	0x4804    LDR	R0, [PC, #16]
0x2C04	0x7800    LDRB	R0, [R0, #0]
0x2C06	0xF7FFFF35  BL	_gyro2_singleRead+0
;__gyro2_driver.c, 225 :: 		return tmp;
;__gyro2_driver.c, 226 :: 		}
L_end_gyro2_getID:
0x2C0A	0xF8DDE000  LDR	LR, [SP, #0]
0x2C0E	0xB001    ADD	SP, SP, #4
0x2C10	0x4770    BX	LR
0x2C12	0xBF00    NOP
0x2C14	0x005B2000  	_GYRO2_WHO_AM_I+0
; end of _gyro2_getID
_gyro2_singleRead:
;__gyro2_driver.c, 179 :: 		uint8_t gyro2_singleRead(uint8_t rAddr)
; rAddr start address is: 0 (R0)
0x2A74	0xB082    SUB	SP, SP, #8
0x2A76	0xF8CDE000  STR	LR, [SP, #0]
; rAddr end address is: 0 (R0)
; rAddr start address is: 0 (R0)
;__gyro2_driver.c, 182 :: 		reg_data[0] = rAddr;
0x2A7A	0xA901    ADD	R1, SP, #4
0x2A7C	0x7008    STRB	R0, [R1, #0]
; rAddr end address is: 0 (R0)
;__gyro2_driver.c, 183 :: 		if (dirverUsed == GYRO2_SPI_PROTO)
0x2A7E	0x4920    LDR	R1, [PC, #128]
0x2A80	0x780A    LDRB	R2, [R1, #0]
0x2A82	0x4920    LDR	R1, [PC, #128]
0x2A84	0x7809    LDRB	R1, [R1, #0]
0x2A86	0x4291    CMP	R1, R2
0x2A88	0xD116    BNE	L_gyro2_singleRead6
;__gyro2_driver.c, 185 :: 		reg_data[0] |= 0x80;
0x2A8A	0xAA01    ADD	R2, SP, #4
0x2A8C	0x7811    LDRB	R1, [R2, #0]
0x2A8E	0xF0410180  ORR	R1, R1, #128
0x2A92	0x7011    STRB	R1, [R2, #0]
;__gyro2_driver.c, 186 :: 		hal_gpio_csSet(0);
0x2A94	0x2000    MOVS	R0, #0
0x2A96	0x4C1C    LDR	R4, [PC, #112]
0x2A98	0x6824    LDR	R4, [R4, #0]
0x2A9A	0x47A0    BLX	R4
;__gyro2_driver.c, 187 :: 		hal_spiTransfer(&reg_data[0],&reg_data[0],2);
0x2A9C	0xA901    ADD	R1, SP, #4
0x2A9E	0x2202    MOVS	R2, #2
0x2AA0	0x4608    MOV	R0, R1
0x2AA2	0xF7FEFEFD  BL	__gyro2_driver_hal_spiTransfer+0
;__gyro2_driver.c, 188 :: 		hal_gpio_csSet(1);
0x2AA6	0x2001    MOVS	R0, #1
0x2AA8	0x4C17    LDR	R4, [PC, #92]
0x2AAA	0x6824    LDR	R4, [R4, #0]
0x2AAC	0x47A0    BLX	R4
;__gyro2_driver.c, 189 :: 		return reg_data[1];
0x2AAE	0xA901    ADD	R1, SP, #4
0x2AB0	0x1C49    ADDS	R1, R1, #1
0x2AB2	0x7809    LDRB	R1, [R1, #0]
0x2AB4	0xB2C8    UXTB	R0, R1
0x2AB6	0xE01E    B	L_end_gyro2_singleRead
;__gyro2_driver.c, 190 :: 		}
L_gyro2_singleRead6:
;__gyro2_driver.c, 191 :: 		if (dirverUsed == GYRO2_I2C_PROTO)
0x2AB8	0x4914    LDR	R1, [PC, #80]
0x2ABA	0x780A    LDRB	R2, [R1, #0]
0x2ABC	0x4911    LDR	R1, [PC, #68]
0x2ABE	0x7809    LDRB	R1, [R1, #0]
0x2AC0	0x4291    CMP	R1, R2
0x2AC2	0xD117    BNE	L_gyro2_singleRead7
;__gyro2_driver.c, 193 :: 		hal_i2cStart();
0x2AC4	0xF7FEFEAE  BL	__gyro2_driver_hal_i2cStart+0
;__gyro2_driver.c, 194 :: 		hal_i2cWrite( _slaveAddress, &reg_data[0], 1, END_MODE_RESTART );
0x2AC8	0xAA01    ADD	R2, SP, #4
0x2ACA	0x4911    LDR	R1, [PC, #68]
0x2ACC	0x7809    LDRB	R1, [R1, #0]
0x2ACE	0x2300    MOVS	R3, #0
0x2AD0	0xB2C8    UXTB	R0, R1
0x2AD2	0x4611    MOV	R1, R2
0x2AD4	0x2201    MOVS	R2, #1
0x2AD6	0xF7FEFE91  BL	__gyro2_driver_hal_i2cWrite+0
;__gyro2_driver.c, 195 :: 		hal_i2cRead( _slaveAddress, &reg_data[0], 1, END_MODE_STOP );
0x2ADA	0xAA01    ADD	R2, SP, #4
0x2ADC	0x490C    LDR	R1, [PC, #48]
0x2ADE	0x7809    LDRB	R1, [R1, #0]
0x2AE0	0x2301    MOVS	R3, #1
0x2AE2	0xB2C8    UXTB	R0, R1
0x2AE4	0x4611    MOV	R1, R2
0x2AE6	0x2201    MOVS	R2, #1
0x2AE8	0xF7FEFEC8  BL	__gyro2_driver_hal_i2cRead+0
;__gyro2_driver.c, 196 :: 		return reg_data[0];
0x2AEC	0xA901    ADD	R1, SP, #4
0x2AEE	0x7809    LDRB	R1, [R1, #0]
0x2AF0	0xB2C8    UXTB	R0, R1
0x2AF2	0xE000    B	L_end_gyro2_singleRead
;__gyro2_driver.c, 197 :: 		}
L_gyro2_singleRead7:
;__gyro2_driver.c, 198 :: 		return 0xAA;
0x2AF4	0x20AA    MOVS	R0, #170
;__gyro2_driver.c, 199 :: 		}
L_end_gyro2_singleRead:
0x2AF6	0xF8DDE000  LDR	LR, [SP, #0]
0x2AFA	0xB002    ADD	SP, SP, #8
0x2AFC	0x4770    BX	LR
0x2AFE	0xBF00    NOP
0x2B00	0x00532000  	__gyro2_driver_GYRO2_SPI_PROTO+0
0x2B04	0x006D2000  	__gyro2_driver_dirverUsed+0
0x2B08	0x00A02000  	__gyro2_driver_hal_gpio_csSet+0
0x2B0C	0x00542000  	__gyro2_driver_GYRO2_I2C_PROTO+0
0x2B10	0x006E2000  	__gyro2_driver__slaveAddress+0
; end of _gyro2_singleRead
__gyro2_driver_hal_spiTransfer:
;__hal_msp432.c, 55 :: 		static void hal_spiTransfer(uint8_t *pIn, uint8_t *pOut, uint16_t nBytes)
; pOut start address is: 4 (R1)
; pIn start address is: 0 (R0)
0x18A0	0xB084    SUB	SP, SP, #16
0x18A2	0xF8CDE000  STR	LR, [SP, #0]
0x18A6	0xF8AD200C  STRH	R2, [SP, #12]
; pOut end address is: 4 (R1)
; pIn end address is: 0 (R0)
; pIn start address is: 0 (R0)
; pOut start address is: 4 (R1)
;__hal_msp432.c, 57 :: 		uint8_t *in = pIn;
0x18AA	0x9001    STR	R0, [SP, #4]
; pIn end address is: 0 (R0)
;__hal_msp432.c, 58 :: 		uint8_t *out = pOut;
0x18AC	0x9102    STR	R1, [SP, #8]
; pOut end address is: 4 (R1)
;__hal_msp432.c, 59 :: 		while( nBytes-- )
L___gyro2_driver_hal_spiTransfer4:
0x18AE	0xF8BD400C  LDRH	R4, [SP, #12]
0x18B2	0xF8BD300C  LDRH	R3, [SP, #12]
0x18B6	0x1E5B    SUBS	R3, R3, #1
0x18B8	0xF8AD300C  STRH	R3, [SP, #12]
0x18BC	0xB17C    CBZ	R4, L___gyro2_driver_hal_spiTransfer5
;__hal_msp432.c, 60 :: 		*( out++ ) = fp_spiRead( *( in++ ) );
0x18BE	0x9B01    LDR	R3, [SP, #4]
0x18C0	0x781B    LDRB	R3, [R3, #0]
0x18C2	0xB2DC    UXTB	R4, R3
0x18C4	0xB2A0    UXTH	R0, R4
0x18C6	0x4C08    LDR	R4, [PC, #32]
0x18C8	0x6824    LDR	R4, [R4, #0]
0x18CA	0x47A0    BLX	R4
0x18CC	0x9B02    LDR	R3, [SP, #8]
0x18CE	0x7018    STRB	R0, [R3, #0]
0x18D0	0x9B02    LDR	R3, [SP, #8]
0x18D2	0x1C5B    ADDS	R3, R3, #1
0x18D4	0x9302    STR	R3, [SP, #8]
0x18D6	0x9B01    LDR	R3, [SP, #4]
0x18D8	0x1C5B    ADDS	R3, R3, #1
0x18DA	0x9301    STR	R3, [SP, #4]
0x18DC	0xE7E7    B	L___gyro2_driver_hal_spiTransfer4
L___gyro2_driver_hal_spiTransfer5:
;__hal_msp432.c, 61 :: 		}
L_end_hal_spiTransfer:
0x18DE	0xF8DDE000  LDR	LR, [SP, #0]
0x18E2	0xB004    ADD	SP, SP, #16
0x18E4	0x4770    BX	LR
0x18E6	0xBF00    NOP
0x18E8	0x00982000  	__gyro2_driver_fp_spiRead+0
; end of __gyro2_driver_hal_spiTransfer
_SPI1_Read:
;__Lib_SPI_MSP.c, 123 :: 		
; buffer start address is: 0 (R0)
0x10DC	0xB081    SUB	SP, SP, #4
0x10DE	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 124 :: 		
; buffer end address is: 0 (R0)
0x10E2	0xF7FFFB87  BL	__Lib_SPI_MSP_SPI1_Read_Static+0
;__Lib_SPI_MSP.c, 125 :: 		
L_end_SPI1_Read:
0x10E6	0xF8DDE000  LDR	LR, [SP, #0]
0x10EA	0xB001    ADD	SP, SP, #4
0x10EC	0x4770    BX	LR
; end of _SPI1_Read
__Lib_SPI_MSP_SPI1_Read_Static:
;__Lib_SPI_MSP.c, 116 :: 		
; buffer start address is: 0 (R0)
0x07F4	0xB081    SUB	SP, SP, #4
0x07F6	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 117 :: 		
; buffer end address is: 0 (R0)
0x07FA	0xF000FD1F  BL	__Lib_SPI_MSP_SPI1_Write_Static+0
;__Lib_SPI_MSP.c, 118 :: 		
L___Lib_SPI_MSP_SPI1_Read_Static5:
0x07FE	0x4905    LDR	R1, [PC, #20]
0x0800	0x8809    LDRH	R1, [R1, #0]
0x0802	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI1_Read_Static6
0x0804	0xE7FB    B	L___Lib_SPI_MSP_SPI1_Read_Static5
L___Lib_SPI_MSP_SPI1_Read_Static6:
;__Lib_SPI_MSP.c, 119 :: 		
0x0806	0x4904    LDR	R1, [PC, #16]
0x0808	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 120 :: 		
L_end_SPI1_Read_Static:
0x080A	0xF8DDE000  LDR	LR, [SP, #0]
0x080E	0xB001    ADD	SP, SP, #4
0x0810	0x4770    BX	LR
0x0812	0xBF00    NOP
0x0814	0x01404202  	EUSCI_A0_UCA0STATW+0
0x0818	0x100C4000  	EUSCI_A0_UCA0RXBUF+0
; end of __Lib_SPI_MSP_SPI1_Read_Static
_SPI2_Read:
;__Lib_SPI_MSP.c, 203 :: 		
; buffer start address is: 0 (R0)
0x1118	0xB081    SUB	SP, SP, #4
0x111A	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 204 :: 		
; buffer end address is: 0 (R0)
0x111E	0xF7FFFC75  BL	__Lib_SPI_MSP_SPI2_Read_Static+0
;__Lib_SPI_MSP.c, 205 :: 		
L_end_SPI2_Read:
0x1122	0xF8DDE000  LDR	LR, [SP, #0]
0x1126	0xB001    ADD	SP, SP, #4
0x1128	0x4770    BX	LR
; end of _SPI2_Read
__Lib_SPI_MSP_SPI2_Read_Static:
;__Lib_SPI_MSP.c, 196 :: 		
; buffer start address is: 0 (R0)
0x0A0C	0xB081    SUB	SP, SP, #4
0x0A0E	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 197 :: 		
; buffer end address is: 0 (R0)
0x0A12	0xF000FBCB  BL	__Lib_SPI_MSP_SPI2_Write_Static+0
;__Lib_SPI_MSP.c, 198 :: 		
L___Lib_SPI_MSP_SPI2_Read_Static12:
0x0A16	0x4905    LDR	R1, [PC, #20]
0x0A18	0x8809    LDRH	R1, [R1, #0]
0x0A1A	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI2_Read_Static13
0x0A1C	0xE7FB    B	L___Lib_SPI_MSP_SPI2_Read_Static12
L___Lib_SPI_MSP_SPI2_Read_Static13:
;__Lib_SPI_MSP.c, 199 :: 		
0x0A1E	0x4904    LDR	R1, [PC, #16]
0x0A20	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 200 :: 		
L_end_SPI2_Read_Static:
0x0A22	0xF8DDE000  LDR	LR, [SP, #0]
0x0A26	0xB001    ADD	SP, SP, #4
0x0A28	0x4770    BX	LR
0x0A2A	0xBF00    NOP
0x0A2C	0x81404202  	EUSCI_A1_UCA1STATW+0
0x0A30	0x140C4000  	EUSCI_A1_UCA1RXBUF+0
; end of __Lib_SPI_MSP_SPI2_Read_Static
_SPI3_Read:
;__Lib_SPI_MSP.c, 283 :: 		
; buffer start address is: 0 (R0)
0x1150	0xB081    SUB	SP, SP, #4
0x1152	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 284 :: 		
; buffer end address is: 0 (R0)
0x1156	0xF7FFFD75  BL	__Lib_SPI_MSP_SPI3_Read_Static+0
;__Lib_SPI_MSP.c, 285 :: 		
L_end_SPI3_Read:
0x115A	0xF8DDE000  LDR	LR, [SP, #0]
0x115E	0xB001    ADD	SP, SP, #4
0x1160	0x4770    BX	LR
; end of _SPI3_Read
__Lib_SPI_MSP_SPI3_Read_Static:
;__Lib_SPI_MSP.c, 276 :: 		
; buffer start address is: 0 (R0)
0x0C44	0xB081    SUB	SP, SP, #4
0x0C46	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 277 :: 		
; buffer end address is: 0 (R0)
0x0C4A	0xF000FA9D  BL	__Lib_SPI_MSP_SPI3_Write_Static+0
;__Lib_SPI_MSP.c, 278 :: 		
L___Lib_SPI_MSP_SPI3_Read_Static19:
0x0C4E	0x4905    LDR	R1, [PC, #20]
0x0C50	0x8809    LDRH	R1, [R1, #0]
0x0C52	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI3_Read_Static20
0x0C54	0xE7FB    B	L___Lib_SPI_MSP_SPI3_Read_Static19
L___Lib_SPI_MSP_SPI3_Read_Static20:
;__Lib_SPI_MSP.c, 279 :: 		
0x0C56	0x4904    LDR	R1, [PC, #16]
0x0C58	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 280 :: 		
L_end_SPI3_Read_Static:
0x0C5A	0xF8DDE000  LDR	LR, [SP, #0]
0x0C5E	0xB001    ADD	SP, SP, #4
0x0C60	0x4770    BX	LR
0x0C62	0xBF00    NOP
0x0C64	0x01404203  	EUSCI_A2_UCA2STATW+0
0x0C68	0x180C4000  	EUSCI_A2_UCA2RXBUF+0
; end of __Lib_SPI_MSP_SPI3_Read_Static
_SPI4_Read:
;__Lib_SPI_MSP.c, 363 :: 		
; buffer start address is: 0 (R0)
0x12A8	0xB081    SUB	SP, SP, #4
0x12AA	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 364 :: 		
; buffer end address is: 0 (R0)
0x12AE	0xF7FFFCDD  BL	__Lib_SPI_MSP_SPI4_Read_Static+0
;__Lib_SPI_MSP.c, 365 :: 		
L_end_SPI4_Read:
0x12B2	0xF8DDE000  LDR	LR, [SP, #0]
0x12B6	0xB001    ADD	SP, SP, #4
0x12B8	0x4770    BX	LR
; end of _SPI4_Read
__Lib_SPI_MSP_SPI4_Read_Static:
;__Lib_SPI_MSP.c, 356 :: 		
; buffer start address is: 0 (R0)
0x0C6C	0xB081    SUB	SP, SP, #4
0x0C6E	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 357 :: 		
; buffer end address is: 0 (R0)
0x0C72	0xF000FABF  BL	__Lib_SPI_MSP_SPI4_Write_Static+0
;__Lib_SPI_MSP.c, 358 :: 		
L___Lib_SPI_MSP_SPI4_Read_Static26:
0x0C76	0x4905    LDR	R1, [PC, #20]
0x0C78	0x8809    LDRH	R1, [R1, #0]
0x0C7A	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI4_Read_Static27
0x0C7C	0xE7FB    B	L___Lib_SPI_MSP_SPI4_Read_Static26
L___Lib_SPI_MSP_SPI4_Read_Static27:
;__Lib_SPI_MSP.c, 359 :: 		
0x0C7E	0x4904    LDR	R1, [PC, #16]
0x0C80	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 360 :: 		
L_end_SPI4_Read_Static:
0x0C82	0xF8DDE000  LDR	LR, [SP, #0]
0x0C86	0xB001    ADD	SP, SP, #4
0x0C88	0x4770    BX	LR
0x0C8A	0xBF00    NOP
0x0C8C	0x81404203  	EUSCI_A3_UCA3STATW+0
0x0C90	0x1C0C4000  	EUSCI_A3_UCA3RXBUF+0
; end of __Lib_SPI_MSP_SPI4_Read_Static
_SPI5_Read:
;__Lib_SPI_MSP.c, 441 :: 		
; buffer start address is: 0 (R0)
0x16FC	0xB081    SUB	SP, SP, #4
0x16FE	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 442 :: 		
; buffer end address is: 0 (R0)
0x1702	0xF7FFFA79  BL	__Lib_SPI_MSP_SPI5_Read_Static+0
;__Lib_SPI_MSP.c, 443 :: 		
L_end_SPI5_Read:
0x1706	0xF8DDE000  LDR	LR, [SP, #0]
0x170A	0xB001    ADD	SP, SP, #4
0x170C	0x4770    BX	LR
; end of _SPI5_Read
__Lib_SPI_MSP_SPI5_Read_Static:
;__Lib_SPI_MSP.c, 434 :: 		
; buffer start address is: 0 (R0)
0x0BF8	0xB081    SUB	SP, SP, #4
0x0BFA	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 435 :: 		
; buffer end address is: 0 (R0)
0x0BFE	0xF000FAE7  BL	__Lib_SPI_MSP_SPI5_Write_Static+0
;__Lib_SPI_MSP.c, 436 :: 		
L___Lib_SPI_MSP_SPI5_Read_Static33:
0x0C02	0x4905    LDR	R1, [PC, #20]
0x0C04	0x8809    LDRH	R1, [R1, #0]
0x0C06	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI5_Read_Static34
0x0C08	0xE7FB    B	L___Lib_SPI_MSP_SPI5_Read_Static33
L___Lib_SPI_MSP_SPI5_Read_Static34:
;__Lib_SPI_MSP.c, 437 :: 		
0x0C0A	0x4904    LDR	R1, [PC, #16]
0x0C0C	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 438 :: 		
L_end_SPI5_Read_Static:
0x0C0E	0xF8DDE000  LDR	LR, [SP, #0]
0x0C12	0xB001    ADD	SP, SP, #4
0x0C14	0x4770    BX	LR
0x0C16	0xBF00    NOP
0x0C18	0x01004204  	EUSCI_B0_UCB0STATW+0
0x0C1C	0x200C4000  	EUSCI_B0_UCB0RXBUF+0
; end of __Lib_SPI_MSP_SPI5_Read_Static
_SPI6_Read:
;__Lib_SPI_MSP.c, 519 :: 		
; buffer start address is: 0 (R0)
0x16C4	0xB081    SUB	SP, SP, #4
0x16C6	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 520 :: 		
; buffer end address is: 0 (R0)
0x16CA	0xF7FFFA6D  BL	__Lib_SPI_MSP_SPI6_Read_Static+0
;__Lib_SPI_MSP.c, 521 :: 		
L_end_SPI6_Read:
0x16CE	0xF8DDE000  LDR	LR, [SP, #0]
0x16D2	0xB001    ADD	SP, SP, #4
0x16D4	0x4770    BX	LR
; end of _SPI6_Read
__Lib_SPI_MSP_SPI6_Read_Static:
;__Lib_SPI_MSP.c, 512 :: 		
; buffer start address is: 0 (R0)
0x0BA8	0xB081    SUB	SP, SP, #4
0x0BAA	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 513 :: 		
; buffer end address is: 0 (R0)
0x0BAE	0xF000FB57  BL	__Lib_SPI_MSP_SPI6_Write_Static+0
;__Lib_SPI_MSP.c, 514 :: 		
L___Lib_SPI_MSP_SPI6_Read_Static40:
0x0BB2	0x4905    LDR	R1, [PC, #20]
0x0BB4	0x8809    LDRH	R1, [R1, #0]
0x0BB6	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI6_Read_Static41
0x0BB8	0xE7FB    B	L___Lib_SPI_MSP_SPI6_Read_Static40
L___Lib_SPI_MSP_SPI6_Read_Static41:
;__Lib_SPI_MSP.c, 515 :: 		
0x0BBA	0x4904    LDR	R1, [PC, #16]
0x0BBC	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 516 :: 		
L_end_SPI6_Read_Static:
0x0BBE	0xF8DDE000  LDR	LR, [SP, #0]
0x0BC2	0xB001    ADD	SP, SP, #4
0x0BC4	0x4770    BX	LR
0x0BC6	0xBF00    NOP
0x0BC8	0x81004204  	EUSCI_B1_UCB1STATW+0
0x0BCC	0x240C4000  	EUSCI_B1_UCB1RXBUF+0
; end of __Lib_SPI_MSP_SPI6_Read_Static
_SPI7_Read:
;__Lib_SPI_MSP.c, 597 :: 		
; buffer start address is: 0 (R0)
0x1798	0xB081    SUB	SP, SP, #4
0x179A	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 598 :: 		
; buffer end address is: 0 (R0)
0x179E	0xF7FFFA17  BL	__Lib_SPI_MSP_SPI7_Read_Static+0
;__Lib_SPI_MSP.c, 599 :: 		
L_end_SPI7_Read:
0x17A2	0xF8DDE000  LDR	LR, [SP, #0]
0x17A6	0xB001    ADD	SP, SP, #4
0x17A8	0x4770    BX	LR
; end of _SPI7_Read
__Lib_SPI_MSP_SPI7_Read_Static:
;__Lib_SPI_MSP.c, 590 :: 		
; buffer start address is: 0 (R0)
0x0BD0	0xB081    SUB	SP, SP, #4
0x0BD2	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 591 :: 		
; buffer end address is: 0 (R0)
0x0BD6	0xF000FB55  BL	__Lib_SPI_MSP_SPI7_Write_Static+0
;__Lib_SPI_MSP.c, 592 :: 		
L___Lib_SPI_MSP_SPI7_Read_Static47:
0x0BDA	0x4905    LDR	R1, [PC, #20]
0x0BDC	0x8809    LDRH	R1, [R1, #0]
0x0BDE	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI7_Read_Static48
0x0BE0	0xE7FB    B	L___Lib_SPI_MSP_SPI7_Read_Static47
L___Lib_SPI_MSP_SPI7_Read_Static48:
;__Lib_SPI_MSP.c, 593 :: 		
0x0BE2	0x4904    LDR	R1, [PC, #16]
0x0BE4	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 594 :: 		
L_end_SPI7_Read_Static:
0x0BE6	0xF8DDE000  LDR	LR, [SP, #0]
0x0BEA	0xB001    ADD	SP, SP, #4
0x0BEC	0x4770    BX	LR
0x0BEE	0xBF00    NOP
0x0BF0	0x01004205  	EUSCI_B2_UCB2STATW+0
0x0BF4	0x280C4000  	EUSCI_B2_UCB2RXBUF+0
; end of __Lib_SPI_MSP_SPI7_Read_Static
_SPI8_Read:
;__Lib_SPI_MSP.c, 675 :: 		
; buffer start address is: 0 (R0)
0x12BC	0xB081    SUB	SP, SP, #4
0x12BE	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 676 :: 		
; buffer end address is: 0 (R0)
0x12C2	0xF7FFFB6D  BL	__Lib_SPI_MSP_SPI8_Read_Static+0
;__Lib_SPI_MSP.c, 677 :: 		
L_end_SPI8_Read:
0x12C6	0xF8DDE000  LDR	LR, [SP, #0]
0x12CA	0xB001    ADD	SP, SP, #4
0x12CC	0x4770    BX	LR
; end of _SPI8_Read
__Lib_SPI_MSP_SPI8_Read_Static:
;__Lib_SPI_MSP.c, 668 :: 		
; buffer start address is: 0 (R0)
0x09A0	0xB081    SUB	SP, SP, #4
0x09A2	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__Lib_SPI_MSP.c, 669 :: 		
; buffer end address is: 0 (R0)
0x09A6	0xF000FC37  BL	__Lib_SPI_MSP_SPI8_Write_Static+0
;__Lib_SPI_MSP.c, 670 :: 		
L___Lib_SPI_MSP_SPI8_Read_Static54:
0x09AA	0x4905    LDR	R1, [PC, #20]
0x09AC	0x8809    LDRH	R1, [R1, #0]
0x09AE	0xB101    CBZ	R1, L___Lib_SPI_MSP_SPI8_Read_Static55
0x09B0	0xE7FB    B	L___Lib_SPI_MSP_SPI8_Read_Static54
L___Lib_SPI_MSP_SPI8_Read_Static55:
;__Lib_SPI_MSP.c, 671 :: 		
0x09B2	0x4904    LDR	R1, [PC, #16]
0x09B4	0x8808    LDRH	R0, [R1, #0]
;__Lib_SPI_MSP.c, 672 :: 		
L_end_SPI8_Read_Static:
0x09B6	0xF8DDE000  LDR	LR, [SP, #0]
0x09BA	0xB001    ADD	SP, SP, #4
0x09BC	0x4770    BX	LR
0x09BE	0xBF00    NOP
0x09C0	0x81004205  	EUSCI_B3_UCB3STATW+0
0x09C4	0x2C0C4000  	EUSCI_B3_UCB3RXBUF+0
; end of __Lib_SPI_MSP_SPI8_Read_Static
__gyro2_driver_hal_i2cStart:
;__hal_msp432.c, 87 :: 		static int hal_i2cStart()
0x1824	0xB081    SUB	SP, SP, #4
;__hal_msp432.c, 89 :: 		int res = 0;
; res start address is: 0 (R0)
0x1826	0xF2400000  MOVW	R0, #0
0x182A	0xB200    SXTH	R0, R0
;__hal_msp432.c, 90 :: 		return res;
; res end address is: 0 (R0)
;__hal_msp432.c, 91 :: 		}
L_end_hal_i2cStart:
0x182C	0xB001    ADD	SP, SP, #4
0x182E	0x4770    BX	LR
; end of __gyro2_driver_hal_i2cStart
__gyro2_driver_hal_i2cWrite:
;__hal_msp432.c, 93 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x17FC	0xB082    SUB	SP, SP, #8
0x17FE	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_msp432.c, 95 :: 		int res = 0;
0x1802	0xF2400400  MOVW	R4, #0
0x1806	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_msp432.c, 97 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x180A	0x4C05    LDR	R4, [PC, #20]
0x180C	0x6824    LDR	R4, [R4, #0]
0x180E	0x47A0    BLX	R4
0x1810	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1814	0x4304    ORRS	R4, R0
;__hal_msp432.c, 98 :: 		return res;
0x1816	0xB220    SXTH	R0, R4
;__hal_msp432.c, 99 :: 		}
L_end_hal_i2cWrite:
0x1818	0xF8DDE000  LDR	LR, [SP, #0]
0x181C	0xB002    ADD	SP, SP, #8
0x181E	0x4770    BX	LR
0x1820	0x00AC2000  	__gyro2_driver_fp_i2cWrite+0
; end of __gyro2_driver_hal_i2cWrite
_I2C0_Write:
;__Lib_I2C_MSP.c, 498 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x13E4	0xB081    SUB	SP, SP, #4
0x13E6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 499 :: 		
0x13EA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x13EC	0x4613    MOV	R3, R2
0x13EE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x13F0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x13F2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x13F4	0xF7FFFA12  BL	__Lib_I2C_MSP_I2Cx_Write+0
0x13F8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 500 :: 		
L_end_I2C0_Write:
0x13FA	0xF8DDE000  LDR	LR, [SP, #0]
0x13FE	0xB001    ADD	SP, SP, #4
0x1400	0x4770    BX	LR
0x1402	0xBF00    NOP
0x1404	0x20004000  	EUSCI_B0_UCB0CTLW0+0
; end of _I2C0_Write
__Lib_I2C_MSP_I2Cx_Write:
;__Lib_I2C_MSP.c, 263 :: 		
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x081C	0xB087    SUB	SP, SP, #28
0x081E	0xF8CDE000  STR	LR, [SP, #0]
0x0822	0xF88D1004  STRB	R1, [SP, #4]
0x0826	0x4601    MOV	R1, R0
0x0828	0xF89D0004  LDRB	R0, [SP, #4]
0x082C	0x9205    STR	R2, [SP, #20]
0x082E	0x9306    STR	R3, [SP, #24]
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0830	0x9C07    LDR	R4, [SP, #28]
0x0832	0x9407    STR	R4, [SP, #28]
;__Lib_I2C_MSP.c, 266 :: 		
0x0834	0x4C4C    LDR	R4, [PC, #304]
0x0836	0x42A1    CMP	R1, R4
0x0838	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Write45
;__Lib_I2C_MSP.c, 267 :: 		
0x083A	0x4D4C    LDR	R5, [PC, #304]
0x083C	0x682C    LDR	R4, [R5, #0]
0x083E	0x9403    STR	R4, [SP, #12]
0x0840	0x462C    MOV	R4, R5
0x0842	0x6824    LDR	R4, [R4, #0]
0x0844	0x9404    STR	R4, [SP, #16]
;__Lib_I2C_MSP.c, 268 :: 		
0x0846	0x4C4A    LDR	R4, [PC, #296]
0x0848	0x6825    LDR	R5, [R4, #0]
0x084A	0x4C4A    LDR	R4, [PC, #296]
0x084C	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 269 :: 		
0x084E	0xE028    B	L___Lib_I2C_MSP_I2Cx_Write46
L___Lib_I2C_MSP_I2Cx_Write45:
;__Lib_I2C_MSP.c, 270 :: 		
0x0850	0x4C49    LDR	R4, [PC, #292]
0x0852	0x42A1    CMP	R1, R4
0x0854	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Write47
;__Lib_I2C_MSP.c, 271 :: 		
0x0856	0x4D49    LDR	R5, [PC, #292]
0x0858	0x682C    LDR	R4, [R5, #0]
0x085A	0x9403    STR	R4, [SP, #12]
0x085C	0x462C    MOV	R4, R5
0x085E	0x6824    LDR	R4, [R4, #0]
0x0860	0x9404    STR	R4, [SP, #16]
;__Lib_I2C_MSP.c, 272 :: 		
0x0862	0x4C47    LDR	R4, [PC, #284]
0x0864	0x6825    LDR	R5, [R4, #0]
0x0866	0x4C43    LDR	R4, [PC, #268]
0x0868	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 273 :: 		
0x086A	0xE01A    B	L___Lib_I2C_MSP_I2Cx_Write48
L___Lib_I2C_MSP_I2Cx_Write47:
;__Lib_I2C_MSP.c, 274 :: 		
0x086C	0x4C45    LDR	R4, [PC, #276]
0x086E	0x42A1    CMP	R1, R4
0x0870	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Write49
;__Lib_I2C_MSP.c, 275 :: 		
0x0872	0x4D45    LDR	R5, [PC, #276]
0x0874	0x682C    LDR	R4, [R5, #0]
0x0876	0x9403    STR	R4, [SP, #12]
0x0878	0x462C    MOV	R4, R5
0x087A	0x6824    LDR	R4, [R4, #0]
0x087C	0x9404    STR	R4, [SP, #16]
;__Lib_I2C_MSP.c, 276 :: 		
0x087E	0x4C43    LDR	R4, [PC, #268]
0x0880	0x6825    LDR	R5, [R4, #0]
0x0882	0x4C3C    LDR	R4, [PC, #240]
0x0884	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 277 :: 		
0x0886	0xE00C    B	L___Lib_I2C_MSP_I2Cx_Write50
L___Lib_I2C_MSP_I2Cx_Write49:
;__Lib_I2C_MSP.c, 278 :: 		
0x0888	0x4C41    LDR	R4, [PC, #260]
0x088A	0x42A1    CMP	R1, R4
0x088C	0xD109    BNE	L___Lib_I2C_MSP_I2Cx_Write51
;__Lib_I2C_MSP.c, 279 :: 		
0x088E	0x4D41    LDR	R5, [PC, #260]
0x0890	0x682C    LDR	R4, [R5, #0]
0x0892	0x9403    STR	R4, [SP, #12]
0x0894	0x462C    MOV	R4, R5
0x0896	0x6824    LDR	R4, [R4, #0]
0x0898	0x9404    STR	R4, [SP, #16]
;__Lib_I2C_MSP.c, 280 :: 		
0x089A	0x4C3F    LDR	R4, [PC, #252]
0x089C	0x6825    LDR	R5, [R4, #0]
0x089E	0x4C35    LDR	R4, [PC, #212]
0x08A0	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 281 :: 		
L___Lib_I2C_MSP_I2Cx_Write51:
L___Lib_I2C_MSP_I2Cx_Write50:
L___Lib_I2C_MSP_I2Cx_Write48:
L___Lib_I2C_MSP_I2Cx_Write46:
;__Lib_I2C_MSP.c, 283 :: 		
0x08A2	0x9101    STR	R1, [SP, #4]
; slave_address end address is: 0 (R0)
0x08A4	0x9102    STR	R1, [SP, #8]
0x08A6	0xB2C1    UXTB	R1, R0
0x08A8	0x9802    LDR	R0, [SP, #8]
0x08AA	0xF7FFFEF9  BL	__Lib_I2C_MSP_I2C_setSlaveAddress+0
0x08AE	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_MSP.c, 284 :: 		
0x08B0	0x4C3A    LDR	R4, [PC, #232]
0x08B2	0x7824    LDRB	R4, [R4, #0]
0x08B4	0xB954    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Write52
;__Lib_I2C_MSP.c, 285 :: 		
0x08B6	0x9101    STR	R1, [SP, #4]
0x08B8	0x4608    MOV	R0, R1
0x08BA	0x2101    MOVS	R1, #1
0x08BC	0xF7FFFE28  BL	__Lib_I2C_MSP_I2Cx_Start+0
0x08C0	0x9901    LDR	R1, [SP, #4]
0x08C2	0xB108    CBZ	R0, L___Lib_I2C_MSP_I2Cx_Write53
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_MSP.c, 286 :: 		
0x08C4	0x2001    MOVS	R0, #1
0x08C6	0xE04B    B	L_end_I2Cx_Write
L___Lib_I2C_MSP_I2Cx_Write53:
;__Lib_I2C_MSP.c, 287 :: 		
; I2C_BASE start address is: 4 (R1)
0x08C8	0x460D    MOV	R5, R1
0x08CA	0xE01F    B	L___Lib_I2C_MSP_I2Cx_Write54
L___Lib_I2C_MSP_I2Cx_Write52:
;__Lib_I2C_MSP.c, 289 :: 		
0x08CC	0x2501    MOVS	R5, #1
0x08CE	0x880C    LDRH	R4, [R1, #0]
0x08D0	0xF3651404  BFI	R4, R5, #4, #1
0x08D4	0x800C    STRH	R4, [R1, #0]
; I2C_BASE end address is: 4 (R1)
0x08D6	0x4608    MOV	R0, R1
;__Lib_I2C_MSP.c, 290 :: 		
L___Lib_I2C_MSP_I2Cx_Write55:
; I2C_BASE start address is: 0 (R0)
0x08D8	0x8805    LDRH	R5, [R0, #0]
0x08DA	0xF3C50480  UBFX	R4, R5, #2, #1
0x08DE	0xB16C    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Write56
;__Lib_I2C_MSP.c, 291 :: 		
0x08E0	0x9C04    LDR	R4, [SP, #16]
0x08E2	0xB154    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Write57
;__Lib_I2C_MSP.c, 292 :: 		
0x08E4	0x9C03    LDR	R4, [SP, #12]
0x08E6	0xB92C    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Write58
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 293 :: 		
0x08E8	0x2007    MOVS	R0, #7
0x08EA	0x4C22    LDR	R4, [PC, #136]
0x08EC	0x6824    LDR	R4, [R4, #0]
0x08EE	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 294 :: 		
0x08F0	0x2001    MOVS	R0, #1
0x08F2	0xE035    B	L_end_I2Cx_Write
;__Lib_I2C_MSP.c, 295 :: 		
L___Lib_I2C_MSP_I2Cx_Write58:
;__Lib_I2C_MSP.c, 296 :: 		
; I2C_BASE start address is: 0 (R0)
0x08F4	0x9C03    LDR	R4, [SP, #12]
0x08F6	0x1E64    SUBS	R4, R4, #1
0x08F8	0x9403    STR	R4, [SP, #12]
;__Lib_I2C_MSP.c, 297 :: 		
L___Lib_I2C_MSP_I2Cx_Write57:
;__Lib_I2C_MSP.c, 298 :: 		
0x08FA	0xE7ED    B	L___Lib_I2C_MSP_I2Cx_Write55
L___Lib_I2C_MSP_I2Cx_Write56:
;__Lib_I2C_MSP.c, 299 :: 		
0x08FC	0x8804    LDRH	R4, [R0, #0]
0x08FE	0xF0440402  ORR	R4, R4, #2
0x0902	0x8004    STRH	R4, [R0, #0]
;__Lib_I2C_MSP.c, 300 :: 		
0x0904	0x2500    MOVS	R5, #0
0x0906	0x4C25    LDR	R4, [PC, #148]
0x0908	0x7025    STRB	R5, [R4, #0]
; I2C_BASE end address is: 0 (R0)
0x090A	0x4605    MOV	R5, R0
;__Lib_I2C_MSP.c, 301 :: 		
L___Lib_I2C_MSP_I2Cx_Write54:
;__Lib_I2C_MSP.c, 303 :: 		
; I2C_BASE start address is: 20 (R5)
; i start address is: 24 (R6)
0x090C	0x2600    MOVS	R6, #0
; I2C_BASE end address is: 20 (R5)
; i end address is: 24 (R6)
0x090E	0x462A    MOV	R2, R5
0x0910	0x4631    MOV	R1, R6
L___Lib_I2C_MSP_I2Cx_Write59:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
0x0912	0x9C06    LDR	R4, [SP, #24]
0x0914	0x42A1    CMP	R1, R4
0x0916	0xD214    BCS	L___Lib_I2C_MSP_I2Cx_Write60
;__Lib_I2C_MSP.c, 304 :: 		
0x0918	0x9C05    LDR	R4, [SP, #20]
0x091A	0x1864    ADDS	R4, R4, R1
0x091C	0x7824    LDRB	R4, [R4, #0]
0x091E	0x9201    STR	R2, [SP, #4]
0x0920	0x9102    STR	R1, [SP, #8]
0x0922	0xB2E1    UXTB	R1, R4
0x0924	0x4610    MOV	R0, R2
0x0926	0xF7FFFCBF  BL	__Lib_I2C_MSP_I2Cx_WriteByte+0
0x092A	0x9902    LDR	R1, [SP, #8]
0x092C	0x9A01    LDR	R2, [SP, #4]
0x092E	0xB120    CBZ	R0, L___Lib_I2C_MSP_I2Cx_Write62
; i end address is: 4 (R1)
;__Lib_I2C_MSP.c, 305 :: 		
0x0930	0x4610    MOV	R0, R2
; I2C_BASE end address is: 8 (R2)
0x0932	0xF7FFFD41  BL	__Lib_I2C_MSP_I2Cx_Stop+0
;__Lib_I2C_MSP.c, 306 :: 		
0x0936	0x2001    MOVS	R0, #1
0x0938	0xE012    B	L_end_I2Cx_Write
;__Lib_I2C_MSP.c, 307 :: 		
L___Lib_I2C_MSP_I2Cx_Write62:
;__Lib_I2C_MSP.c, 303 :: 		
; I2C_BASE start address is: 8 (R2)
; i start address is: 4 (R1)
0x093A	0x1C4C    ADDS	R4, R1, #1
; i end address is: 4 (R1)
; i start address is: 24 (R6)
0x093C	0x4626    MOV	R6, R4
;__Lib_I2C_MSP.c, 308 :: 		
; i end address is: 24 (R6)
0x093E	0x4631    MOV	R1, R6
0x0940	0xE7E7    B	L___Lib_I2C_MSP_I2Cx_Write59
L___Lib_I2C_MSP_I2Cx_Write60:
;__Lib_I2C_MSP.c, 310 :: 		
0x0942	0x9C07    LDR	R4, [SP, #28]
0x0944	0x2C01    CMP	R4, #1
0x0946	0xD107    BNE	L___Lib_I2C_MSP_I2Cx_Write63
;__Lib_I2C_MSP.c, 311 :: 		
0x0948	0x4610    MOV	R0, R2
; I2C_BASE end address is: 8 (R2)
0x094A	0xF7FFFD35  BL	__Lib_I2C_MSP_I2Cx_Stop+0
0x094E	0x2800    CMP	R0, #0
0x0950	0xD001    BEQ	L___Lib_I2C_MSP_I2Cx_Write64
;__Lib_I2C_MSP.c, 312 :: 		
0x0952	0x2001    MOVS	R0, #1
0x0954	0xE004    B	L_end_I2Cx_Write
L___Lib_I2C_MSP_I2Cx_Write64:
;__Lib_I2C_MSP.c, 313 :: 		
0x0956	0xE002    B	L___Lib_I2C_MSP_I2Cx_Write65
L___Lib_I2C_MSP_I2Cx_Write63:
;__Lib_I2C_MSP.c, 315 :: 		
0x0958	0x2501    MOVS	R5, #1
0x095A	0x4C10    LDR	R4, [PC, #64]
0x095C	0x7025    STRB	R5, [R4, #0]
;__Lib_I2C_MSP.c, 316 :: 		
L___Lib_I2C_MSP_I2Cx_Write65:
;__Lib_I2C_MSP.c, 318 :: 		
0x095E	0x2000    MOVS	R0, #0
;__Lib_I2C_MSP.c, 319 :: 		
L_end_I2Cx_Write:
0x0960	0xF8DDE000  LDR	LR, [SP, #0]
0x0964	0xB007    ADD	SP, SP, #28
0x0966	0x4770    BX	LR
0x0968	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x096C	0x005C2000  	__Lib_I2C_MSP__I2C0_TIMEOUT+0
0x0970	0x00C42000  	_I2C0_timeout_Ptr+0
0x0974	0x00C02000  	__Lib_I2C_MSP_I2C_Timeout_Ptr+0
0x0978	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x097C	0x00602000  	__Lib_I2C_MSP__I2C1_TIMEOUT+0
0x0980	0x00C82000  	_I2C1_timeout_Ptr+0
0x0984	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x0988	0x00642000  	__Lib_I2C_MSP__I2C2_TIMEOUT+0
0x098C	0x00CC2000  	_I2C2_timeout_Ptr+0
0x0990	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x0994	0x00682000  	__Lib_I2C_MSP__I2C3_TIMEOUT+0
0x0998	0x00D02000  	_I2C3_timeout_Ptr+0
0x099C	0x006C2000  	__Lib_I2C_MSP__DELAY_RESTART+0
; end of __Lib_I2C_MSP_I2Cx_Write
__Lib_I2C_MSP_I2C_setSlaveAddress:
;__Lib_I2C_MSP.c, 90 :: 		
; slaveAddress start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06A0	0xB081    SUB	SP, SP, #4
; slaveAddress end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slaveAddress start address is: 4 (R1)
;__Lib_I2C_MSP.c, 91 :: 		
0x06A2	0xF2000214  ADDW	R2, R0, #20
0x06A6	0x8812    LDRH	R2, [R2, #0]
;__Lib_I2C_MSP.c, 92 :: 		
0x06A8	0x428A    CMP	R2, R1
0x06AA	0xD00F    BEQ	L___Lib_I2C_MSP_I2C_setSlaveAddress118
0x06AC	0xF2000216  ADDW	R2, R0, #22
0x06B0	0x8812    LDRH	R2, [R2, #0]
0x06B2	0x428A    CMP	R2, R1
0x06B4	0xD00A    BEQ	L___Lib_I2C_MSP_I2C_setSlaveAddress117
;__Lib_I2C_MSP.c, 93 :: 		
0x06B6	0xF2000218  ADDW	R2, R0, #24
0x06BA	0x8812    LDRH	R2, [R2, #0]
0x06BC	0x428A    CMP	R2, R1
0x06BE	0xD005    BEQ	L___Lib_I2C_MSP_I2C_setSlaveAddress116
;__Lib_I2C_MSP.c, 94 :: 		
0x06C0	0xF200021A  ADDW	R2, R0, #26
0x06C4	0x8812    LDRH	R2, [R2, #0]
0x06C6	0x428A    CMP	R2, R1
0x06C8	0xD000    BEQ	L___Lib_I2C_MSP_I2C_setSlaveAddress115
0x06CA	0xE000    B	L___Lib_I2C_MSP_I2C_setSlaveAddress2
; I2C_BASE end address is: 0 (R0)
; slaveAddress end address is: 4 (R1)
;__Lib_I2C_MSP.c, 92 :: 		
L___Lib_I2C_MSP_I2C_setSlaveAddress118:
L___Lib_I2C_MSP_I2C_setSlaveAddress117:
;__Lib_I2C_MSP.c, 93 :: 		
L___Lib_I2C_MSP_I2C_setSlaveAddress116:
;__Lib_I2C_MSP.c, 94 :: 		
L___Lib_I2C_MSP_I2C_setSlaveAddress115:
0x06CC	0xE002    B	L_end_I2C_setSlaveAddress
L___Lib_I2C_MSP_I2C_setSlaveAddress2:
;__Lib_I2C_MSP.c, 96 :: 		
; slaveAddress start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06CE	0xF2000220  ADDW	R2, R0, #32
; I2C_BASE end address is: 0 (R0)
0x06D2	0x8011    STRH	R1, [R2, #0]
; slaveAddress end address is: 4 (R1)
;__Lib_I2C_MSP.c, 97 :: 		
L_end_I2C_setSlaveAddress:
0x06D4	0xB001    ADD	SP, SP, #4
0x06D6	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2C_setSlaveAddress
__Lib_I2C_MSP_I2Cx_Start:
;__Lib_I2C_MSP.c, 159 :: 		
; mode start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0510	0xB085    SUB	SP, SP, #20
0x0512	0xF8CDE000  STR	LR, [SP, #0]
0x0516	0xB2CC    UXTB	R4, R1
0x0518	0x4601    MOV	R1, R0
; mode end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; mode start address is: 16 (R4)
;__Lib_I2C_MSP.c, 162 :: 		
0x051A	0x4A46    LDR	R2, [PC, #280]
0x051C	0x4291    CMP	R1, R2
0x051E	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Start14
;__Lib_I2C_MSP.c, 163 :: 		
0x0520	0x4B45    LDR	R3, [PC, #276]
0x0522	0x681A    LDR	R2, [R3, #0]
0x0524	0x9203    STR	R2, [SP, #12]
0x0526	0x461A    MOV	R2, R3
0x0528	0x6812    LDR	R2, [R2, #0]
0x052A	0x9204    STR	R2, [SP, #16]
;__Lib_I2C_MSP.c, 164 :: 		
0x052C	0x4A43    LDR	R2, [PC, #268]
0x052E	0x6813    LDR	R3, [R2, #0]
0x0530	0x4A43    LDR	R2, [PC, #268]
0x0532	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 165 :: 		
0x0534	0xE028    B	L___Lib_I2C_MSP_I2Cx_Start15
L___Lib_I2C_MSP_I2Cx_Start14:
;__Lib_I2C_MSP.c, 166 :: 		
0x0536	0x4A43    LDR	R2, [PC, #268]
0x0538	0x4291    CMP	R1, R2
0x053A	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Start16
;__Lib_I2C_MSP.c, 167 :: 		
0x053C	0x4B42    LDR	R3, [PC, #264]
0x053E	0x681A    LDR	R2, [R3, #0]
0x0540	0x9203    STR	R2, [SP, #12]
0x0542	0x461A    MOV	R2, R3
0x0544	0x6812    LDR	R2, [R2, #0]
0x0546	0x9204    STR	R2, [SP, #16]
;__Lib_I2C_MSP.c, 168 :: 		
0x0548	0x4A40    LDR	R2, [PC, #256]
0x054A	0x6813    LDR	R3, [R2, #0]
0x054C	0x4A3C    LDR	R2, [PC, #240]
0x054E	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 169 :: 		
0x0550	0xE01A    B	L___Lib_I2C_MSP_I2Cx_Start17
L___Lib_I2C_MSP_I2Cx_Start16:
;__Lib_I2C_MSP.c, 170 :: 		
0x0552	0x4A3F    LDR	R2, [PC, #252]
0x0554	0x4291    CMP	R1, R2
0x0556	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Start18
;__Lib_I2C_MSP.c, 171 :: 		
0x0558	0x4B3E    LDR	R3, [PC, #248]
0x055A	0x681A    LDR	R2, [R3, #0]
0x055C	0x9203    STR	R2, [SP, #12]
0x055E	0x461A    MOV	R2, R3
0x0560	0x6812    LDR	R2, [R2, #0]
0x0562	0x9204    STR	R2, [SP, #16]
;__Lib_I2C_MSP.c, 172 :: 		
0x0564	0x4A3C    LDR	R2, [PC, #240]
0x0566	0x6813    LDR	R3, [R2, #0]
0x0568	0x4A35    LDR	R2, [PC, #212]
0x056A	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 173 :: 		
0x056C	0xE00C    B	L___Lib_I2C_MSP_I2Cx_Start19
L___Lib_I2C_MSP_I2Cx_Start18:
;__Lib_I2C_MSP.c, 174 :: 		
0x056E	0x4A3B    LDR	R2, [PC, #236]
0x0570	0x4291    CMP	R1, R2
0x0572	0xD109    BNE	L___Lib_I2C_MSP_I2Cx_Start20
;__Lib_I2C_MSP.c, 175 :: 		
0x0574	0x4B3A    LDR	R3, [PC, #232]
0x0576	0x681A    LDR	R2, [R3, #0]
0x0578	0x9203    STR	R2, [SP, #12]
0x057A	0x461A    MOV	R2, R3
0x057C	0x6812    LDR	R2, [R2, #0]
0x057E	0x9204    STR	R2, [SP, #16]
;__Lib_I2C_MSP.c, 176 :: 		
0x0580	0x4A38    LDR	R2, [PC, #224]
0x0582	0x6813    LDR	R3, [R2, #0]
0x0584	0x4A2E    LDR	R2, [PC, #184]
0x0586	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 177 :: 		
L___Lib_I2C_MSP_I2Cx_Start20:
L___Lib_I2C_MSP_I2Cx_Start19:
L___Lib_I2C_MSP_I2Cx_Start17:
L___Lib_I2C_MSP_I2Cx_Start15:
;__Lib_I2C_MSP.c, 179 :: 		
0x0588	0xF88D4004  STRB	R4, [SP, #4]
0x058C	0x9102    STR	R1, [SP, #8]
0x058E	0x4608    MOV	R0, R1
0x0590	0xF7FFFDC2  BL	__Lib_I2C_MSP_I2Cx_Wait_For_Idle+0
0x0594	0x9902    LDR	R1, [SP, #8]
0x0596	0xF89D4004  LDRB	R4, [SP, #4]
0x059A	0xB108    CBZ	R0, L___Lib_I2C_MSP_I2Cx_Start21
; I2C_BASE end address is: 4 (R1)
; mode end address is: 16 (R4)
;__Lib_I2C_MSP.c, 180 :: 		
0x059C	0x2001    MOVS	R0, #1
0x059E	0xE044    B	L_end_I2Cx_Start
L___Lib_I2C_MSP_I2Cx_Start21:
;__Lib_I2C_MSP.c, 182 :: 		
; mode start address is: 16 (R4)
; I2C_BASE start address is: 4 (R1)
0x05A0	0xB2E3    UXTB	R3, R4
0x05A2	0x880A    LDRH	R2, [R1, #0]
0x05A4	0xF3631204  BFI	R2, R3, #4, #1
0x05A8	0x800A    STRH	R2, [R1, #0]
;__Lib_I2C_MSP.c, 185 :: 		
0x05AA	0x880A    LDRH	R2, [R1, #0]
0x05AC	0xF0420202  ORR	R2, R2, #2
0x05B0	0x800A    STRH	R2, [R1, #0]
;__Lib_I2C_MSP.c, 187 :: 		
0x05B2	0x2C01    CMP	R4, #1
0x05B4	0xD11C    BNE	L___Lib_I2C_MSP_I2Cx_Start22
; I2C_BASE end address is: 4 (R1)
; mode end address is: 16 (R4)
0x05B6	0x4608    MOV	R0, R1
;__Lib_I2C_MSP.c, 188 :: 		
L___Lib_I2C_MSP_I2Cx_Start23:
; I2C_BASE start address is: 0 (R0)
0x05B8	0xF200022C  ADDW	R2, R0, #44
0x05BC	0x8813    LDRH	R3, [R2, #0]
0x05BE	0xF3C30240  UBFX	R2, R3, #1, #1
0x05C2	0xB96A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_Start24
;__Lib_I2C_MSP.c, 189 :: 		
0x05C4	0x9A04    LDR	R2, [SP, #16]
0x05C6	0xB152    CBZ	R2, L___Lib_I2C_MSP_I2Cx_Start25
;__Lib_I2C_MSP.c, 190 :: 		
0x05C8	0x9A03    LDR	R2, [SP, #12]
0x05CA	0xB92A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_Start26
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 191 :: 		
0x05CC	0x2006    MOVS	R0, #6
0x05CE	0x4C1C    LDR	R4, [PC, #112]
0x05D0	0x6824    LDR	R4, [R4, #0]
0x05D2	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 192 :: 		
0x05D4	0x2001    MOVS	R0, #1
0x05D6	0xE028    B	L_end_I2Cx_Start
;__Lib_I2C_MSP.c, 193 :: 		
L___Lib_I2C_MSP_I2Cx_Start26:
;__Lib_I2C_MSP.c, 194 :: 		
; I2C_BASE start address is: 0 (R0)
0x05D8	0x9A03    LDR	R2, [SP, #12]
0x05DA	0x1E52    SUBS	R2, R2, #1
0x05DC	0x9203    STR	R2, [SP, #12]
;__Lib_I2C_MSP.c, 195 :: 		
L___Lib_I2C_MSP_I2Cx_Start25:
;__Lib_I2C_MSP.c, 196 :: 		
0x05DE	0xE7EB    B	L___Lib_I2C_MSP_I2Cx_Start23
L___Lib_I2C_MSP_I2Cx_Start24:
;__Lib_I2C_MSP.c, 197 :: 		
0x05E0	0xF200042C  ADDW	R4, R0, #44
; I2C_BASE end address is: 0 (R0)
0x05E4	0x2300    MOVS	R3, #0
0x05E6	0x8822    LDRH	R2, [R4, #0]
0x05E8	0xF3630241  BFI	R2, R3, #1, #1
0x05EC	0x8022    STRH	R2, [R4, #0]
;__Lib_I2C_MSP.c, 198 :: 		
0x05EE	0xE01B    B	L___Lib_I2C_MSP_I2Cx_Start27
L___Lib_I2C_MSP_I2Cx_Start22:
;__Lib_I2C_MSP.c, 200 :: 		
; I2C_BASE start address is: 4 (R1)
0x05F0	0x4608    MOV	R0, R1
L___Lib_I2C_MSP_I2Cx_Start28:
; I2C_BASE end address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x05F2	0xF200022C  ADDW	R2, R0, #44
0x05F6	0x8813    LDRH	R3, [R2, #0]
0x05F8	0xF3C30200  UBFX	R2, R3, #0, #1
0x05FC	0xB96A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_Start29
;__Lib_I2C_MSP.c, 201 :: 		
0x05FE	0x9A04    LDR	R2, [SP, #16]
0x0600	0xB152    CBZ	R2, L___Lib_I2C_MSP_I2Cx_Start30
;__Lib_I2C_MSP.c, 202 :: 		
0x0602	0x9A03    LDR	R2, [SP, #12]
0x0604	0xB92A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_Start31
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 203 :: 		
0x0606	0x2006    MOVS	R0, #6
0x0608	0x4C0D    LDR	R4, [PC, #52]
0x060A	0x6824    LDR	R4, [R4, #0]
0x060C	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 204 :: 		
0x060E	0x2001    MOVS	R0, #1
0x0610	0xE00B    B	L_end_I2Cx_Start
;__Lib_I2C_MSP.c, 205 :: 		
L___Lib_I2C_MSP_I2Cx_Start31:
;__Lib_I2C_MSP.c, 206 :: 		
; I2C_BASE start address is: 0 (R0)
0x0612	0x9A03    LDR	R2, [SP, #12]
0x0614	0x1E52    SUBS	R2, R2, #1
0x0616	0x9203    STR	R2, [SP, #12]
;__Lib_I2C_MSP.c, 207 :: 		
L___Lib_I2C_MSP_I2Cx_Start30:
;__Lib_I2C_MSP.c, 208 :: 		
0x0618	0xE7EB    B	L___Lib_I2C_MSP_I2Cx_Start28
L___Lib_I2C_MSP_I2Cx_Start29:
;__Lib_I2C_MSP.c, 209 :: 		
0x061A	0xF200042C  ADDW	R4, R0, #44
; I2C_BASE end address is: 0 (R0)
0x061E	0x2300    MOVS	R3, #0
0x0620	0x8822    LDRH	R2, [R4, #0]
0x0622	0xF3630200  BFI	R2, R3, #0, #1
0x0626	0x8022    STRH	R2, [R4, #0]
;__Lib_I2C_MSP.c, 210 :: 		
L___Lib_I2C_MSP_I2Cx_Start27:
;__Lib_I2C_MSP.c, 212 :: 		
0x0628	0x2000    MOVS	R0, #0
;__Lib_I2C_MSP.c, 213 :: 		
L_end_I2Cx_Start:
0x062A	0xF8DDE000  LDR	LR, [SP, #0]
0x062E	0xB005    ADD	SP, SP, #20
0x0630	0x4770    BX	LR
0x0632	0xBF00    NOP
0x0634	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x0638	0x005C2000  	__Lib_I2C_MSP__I2C0_TIMEOUT+0
0x063C	0x00C42000  	_I2C0_timeout_Ptr+0
0x0640	0x00C02000  	__Lib_I2C_MSP_I2C_Timeout_Ptr+0
0x0644	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x0648	0x00602000  	__Lib_I2C_MSP__I2C1_TIMEOUT+0
0x064C	0x00C82000  	_I2C1_timeout_Ptr+0
0x0650	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x0654	0x00642000  	__Lib_I2C_MSP__I2C2_TIMEOUT+0
0x0658	0x00CC2000  	_I2C2_timeout_Ptr+0
0x065C	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x0660	0x00682000  	__Lib_I2C_MSP__I2C3_TIMEOUT+0
0x0664	0x00D02000  	_I2C3_timeout_Ptr+0
; end of __Lib_I2C_MSP_I2Cx_Start
__Lib_I2C_MSP_I2Cx_Wait_For_Idle:
;__Lib_I2C_MSP.c, 125 :: 		
; I2C_BASE start address is: 0 (R0)
0x0118	0xB083    SUB	SP, SP, #12
0x011A	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_MSP.c, 128 :: 		
0x011E	0x4927    LDR	R1, [PC, #156]
0x0120	0x4288    CMP	R0, R1
0x0122	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle3
;__Lib_I2C_MSP.c, 129 :: 		
0x0124	0x4A26    LDR	R2, [PC, #152]
0x0126	0x6811    LDR	R1, [R2, #0]
0x0128	0x9101    STR	R1, [SP, #4]
0x012A	0x4611    MOV	R1, R2
0x012C	0x6809    LDR	R1, [R1, #0]
0x012E	0x9102    STR	R1, [SP, #8]
;__Lib_I2C_MSP.c, 130 :: 		
0x0130	0x4924    LDR	R1, [PC, #144]
0x0132	0x680A    LDR	R2, [R1, #0]
0x0134	0x4924    LDR	R1, [PC, #144]
0x0136	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_MSP.c, 131 :: 		
0x0138	0xE028    B	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle4
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle3:
;__Lib_I2C_MSP.c, 132 :: 		
0x013A	0x4924    LDR	R1, [PC, #144]
0x013C	0x4288    CMP	R0, R1
0x013E	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle5
;__Lib_I2C_MSP.c, 133 :: 		
0x0140	0x4A23    LDR	R2, [PC, #140]
0x0142	0x6811    LDR	R1, [R2, #0]
0x0144	0x9101    STR	R1, [SP, #4]
0x0146	0x4611    MOV	R1, R2
0x0148	0x6809    LDR	R1, [R1, #0]
0x014A	0x9102    STR	R1, [SP, #8]
;__Lib_I2C_MSP.c, 134 :: 		
0x014C	0x4921    LDR	R1, [PC, #132]
0x014E	0x680A    LDR	R2, [R1, #0]
0x0150	0x491D    LDR	R1, [PC, #116]
0x0152	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_MSP.c, 135 :: 		
0x0154	0xE01A    B	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle6
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle5:
;__Lib_I2C_MSP.c, 136 :: 		
0x0156	0x4920    LDR	R1, [PC, #128]
0x0158	0x4288    CMP	R0, R1
0x015A	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle7
;__Lib_I2C_MSP.c, 137 :: 		
0x015C	0x4A1F    LDR	R2, [PC, #124]
0x015E	0x6811    LDR	R1, [R2, #0]
0x0160	0x9101    STR	R1, [SP, #4]
0x0162	0x4611    MOV	R1, R2
0x0164	0x6809    LDR	R1, [R1, #0]
0x0166	0x9102    STR	R1, [SP, #8]
;__Lib_I2C_MSP.c, 138 :: 		
0x0168	0x491D    LDR	R1, [PC, #116]
0x016A	0x680A    LDR	R2, [R1, #0]
0x016C	0x4916    LDR	R1, [PC, #88]
0x016E	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_MSP.c, 139 :: 		
0x0170	0xE00C    B	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle8
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle7:
;__Lib_I2C_MSP.c, 140 :: 		
0x0172	0x491C    LDR	R1, [PC, #112]
0x0174	0x4288    CMP	R0, R1
0x0176	0xD109    BNE	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle9
;__Lib_I2C_MSP.c, 141 :: 		
0x0178	0x4A1B    LDR	R2, [PC, #108]
0x017A	0x6811    LDR	R1, [R2, #0]
0x017C	0x9101    STR	R1, [SP, #4]
0x017E	0x4611    MOV	R1, R2
0x0180	0x6809    LDR	R1, [R1, #0]
0x0182	0x9102    STR	R1, [SP, #8]
;__Lib_I2C_MSP.c, 142 :: 		
0x0184	0x4919    LDR	R1, [PC, #100]
0x0186	0x680A    LDR	R2, [R1, #0]
0x0188	0x490F    LDR	R1, [PC, #60]
0x018A	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_MSP.c, 143 :: 		
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle9:
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle8:
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle6:
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle4:
;__Lib_I2C_MSP.c, 145 :: 		
0x018C	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle10:
; I2C_BASE start address is: 12 (R3)
0x018E	0x4618    MOV	R0, R3
0x0190	0xF7FFFFB6  BL	__Lib_I2C_MSP_I2Cx_Is_Idle+0
0x0194	0xB968    CBNZ	R0, L___Lib_I2C_MSP_I2Cx_Wait_For_Idle11
;__Lib_I2C_MSP.c, 147 :: 		
0x0196	0x9902    LDR	R1, [SP, #8]
0x0198	0xB151    CBZ	R1, L___Lib_I2C_MSP_I2Cx_Wait_For_Idle12
;__Lib_I2C_MSP.c, 148 :: 		
0x019A	0x9901    LDR	R1, [SP, #4]
0x019C	0xB929    CBNZ	R1, L___Lib_I2C_MSP_I2Cx_Wait_For_Idle13
; I2C_BASE end address is: 12 (R3)
;__Lib_I2C_MSP.c, 149 :: 		
0x019E	0x2005    MOVS	R0, #5
0x01A0	0x4C09    LDR	R4, [PC, #36]
0x01A2	0x6824    LDR	R4, [R4, #0]
0x01A4	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 150 :: 		
0x01A6	0x2001    MOVS	R0, #1
0x01A8	0xE004    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_MSP.c, 151 :: 		
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle13:
;__Lib_I2C_MSP.c, 152 :: 		
; I2C_BASE start address is: 12 (R3)
0x01AA	0x9901    LDR	R1, [SP, #4]
0x01AC	0x1E49    SUBS	R1, R1, #1
0x01AE	0x9101    STR	R1, [SP, #4]
;__Lib_I2C_MSP.c, 153 :: 		
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle12:
;__Lib_I2C_MSP.c, 154 :: 		
; I2C_BASE end address is: 12 (R3)
0x01B0	0xE7ED    B	L___Lib_I2C_MSP_I2Cx_Wait_For_Idle10
L___Lib_I2C_MSP_I2Cx_Wait_For_Idle11:
;__Lib_I2C_MSP.c, 155 :: 		
0x01B2	0x2000    MOVS	R0, #0
;__Lib_I2C_MSP.c, 156 :: 		
L_end_I2Cx_Wait_For_Idle:
0x01B4	0xF8DDE000  LDR	LR, [SP, #0]
0x01B8	0xB003    ADD	SP, SP, #12
0x01BA	0x4770    BX	LR
0x01BC	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x01C0	0x005C2000  	__Lib_I2C_MSP__I2C0_TIMEOUT+0
0x01C4	0x00C42000  	_I2C0_timeout_Ptr+0
0x01C8	0x00C02000  	__Lib_I2C_MSP_I2C_Timeout_Ptr+0
0x01CC	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x01D0	0x00602000  	__Lib_I2C_MSP__I2C1_TIMEOUT+0
0x01D4	0x00C82000  	_I2C1_timeout_Ptr+0
0x01D8	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x01DC	0x00642000  	__Lib_I2C_MSP__I2C2_TIMEOUT+0
0x01E0	0x00CC2000  	_I2C2_timeout_Ptr+0
0x01E4	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x01E8	0x00682000  	__Lib_I2C_MSP__I2C3_TIMEOUT+0
0x01EC	0x00D02000  	_I2C3_timeout_Ptr+0
; end of __Lib_I2C_MSP_I2Cx_Wait_For_Idle
__Lib_I2C_MSP_I2Cx_Is_Idle:
;__Lib_I2C_MSP.c, 121 :: 		
; I2C_BASE start address is: 0 (R0)
0x0100	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_MSP.c, 122 :: 		
0x0102	0xF2000108  ADDW	R1, R0, #8
; I2C_BASE end address is: 0 (R0)
0x0106	0x880A    LDRH	R2, [R1, #0]
0x0108	0xF3C21100  UBFX	R1, R2, #4, #1
0x010C	0xF0810101  EOR	R1, R1, #1
0x0110	0xB2C9    UXTB	R1, R1
0x0112	0xB2C8    UXTB	R0, R1
;__Lib_I2C_MSP.c, 123 :: 		
L_end_I2Cx_Is_Idle:
0x0114	0xB001    ADD	SP, SP, #4
0x0116	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2Cx_Is_Idle
__Lib_I2C_MSP_I2Cx_WriteByte:
;__Lib_I2C_MSP.c, 222 :: 		
; dataByte start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02A8	0xB083    SUB	SP, SP, #12
0x02AA	0xF8CDE000  STR	LR, [SP, #0]
; dataByte end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; dataByte start address is: 4 (R1)
;__Lib_I2C_MSP.c, 225 :: 		
0x02AE	0x4A35    LDR	R2, [PC, #212]
0x02B0	0x4290    CMP	R0, R2
0x02B2	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_WriteByte33
;__Lib_I2C_MSP.c, 226 :: 		
0x02B4	0x4B34    LDR	R3, [PC, #208]
0x02B6	0x681A    LDR	R2, [R3, #0]
0x02B8	0x9201    STR	R2, [SP, #4]
0x02BA	0x461A    MOV	R2, R3
0x02BC	0x6812    LDR	R2, [R2, #0]
0x02BE	0x9202    STR	R2, [SP, #8]
;__Lib_I2C_MSP.c, 227 :: 		
0x02C0	0x4A32    LDR	R2, [PC, #200]
0x02C2	0x6813    LDR	R3, [R2, #0]
0x02C4	0x4A32    LDR	R2, [PC, #200]
0x02C6	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 228 :: 		
0x02C8	0xE028    B	L___Lib_I2C_MSP_I2Cx_WriteByte34
L___Lib_I2C_MSP_I2Cx_WriteByte33:
;__Lib_I2C_MSP.c, 229 :: 		
0x02CA	0x4A32    LDR	R2, [PC, #200]
0x02CC	0x4290    CMP	R0, R2
0x02CE	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_WriteByte35
;__Lib_I2C_MSP.c, 230 :: 		
0x02D0	0x4B31    LDR	R3, [PC, #196]
0x02D2	0x681A    LDR	R2, [R3, #0]
0x02D4	0x9201    STR	R2, [SP, #4]
0x02D6	0x461A    MOV	R2, R3
0x02D8	0x6812    LDR	R2, [R2, #0]
0x02DA	0x9202    STR	R2, [SP, #8]
;__Lib_I2C_MSP.c, 231 :: 		
0x02DC	0x4A2F    LDR	R2, [PC, #188]
0x02DE	0x6813    LDR	R3, [R2, #0]
0x02E0	0x4A2B    LDR	R2, [PC, #172]
0x02E2	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 232 :: 		
0x02E4	0xE01A    B	L___Lib_I2C_MSP_I2Cx_WriteByte36
L___Lib_I2C_MSP_I2Cx_WriteByte35:
;__Lib_I2C_MSP.c, 233 :: 		
0x02E6	0x4A2E    LDR	R2, [PC, #184]
0x02E8	0x4290    CMP	R0, R2
0x02EA	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_WriteByte37
;__Lib_I2C_MSP.c, 234 :: 		
0x02EC	0x4B2D    LDR	R3, [PC, #180]
0x02EE	0x681A    LDR	R2, [R3, #0]
0x02F0	0x9201    STR	R2, [SP, #4]
0x02F2	0x461A    MOV	R2, R3
0x02F4	0x6812    LDR	R2, [R2, #0]
0x02F6	0x9202    STR	R2, [SP, #8]
;__Lib_I2C_MSP.c, 235 :: 		
0x02F8	0x4A2B    LDR	R2, [PC, #172]
0x02FA	0x6813    LDR	R3, [R2, #0]
0x02FC	0x4A24    LDR	R2, [PC, #144]
0x02FE	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 236 :: 		
0x0300	0xE00C    B	L___Lib_I2C_MSP_I2Cx_WriteByte38
L___Lib_I2C_MSP_I2Cx_WriteByte37:
;__Lib_I2C_MSP.c, 237 :: 		
0x0302	0x4A2A    LDR	R2, [PC, #168]
0x0304	0x4290    CMP	R0, R2
0x0306	0xD109    BNE	L___Lib_I2C_MSP_I2Cx_WriteByte39
;__Lib_I2C_MSP.c, 238 :: 		
0x0308	0x4B29    LDR	R3, [PC, #164]
0x030A	0x681A    LDR	R2, [R3, #0]
0x030C	0x9201    STR	R2, [SP, #4]
0x030E	0x461A    MOV	R2, R3
0x0310	0x6812    LDR	R2, [R2, #0]
0x0312	0x9202    STR	R2, [SP, #8]
;__Lib_I2C_MSP.c, 239 :: 		
0x0314	0x4A27    LDR	R2, [PC, #156]
0x0316	0x6813    LDR	R3, [R2, #0]
0x0318	0x4A1D    LDR	R2, [PC, #116]
0x031A	0x6013    STR	R3, [R2, #0]
;__Lib_I2C_MSP.c, 240 :: 		
L___Lib_I2C_MSP_I2Cx_WriteByte39:
L___Lib_I2C_MSP_I2Cx_WriteByte38:
L___Lib_I2C_MSP_I2Cx_WriteByte36:
L___Lib_I2C_MSP_I2Cx_WriteByte34:
;__Lib_I2C_MSP.c, 242 :: 		
0x031C	0xF200022C  ADDW	R2, R0, #44
0x0320	0x8813    LDRH	R3, [R2, #0]
0x0322	0xF3C31240  UBFX	R2, R3, #5, #1
0x0326	0xB132    CBZ	R2, L___Lib_I2C_MSP_I2Cx_WriteByte40
;__Lib_I2C_MSP.c, 243 :: 		
0x0328	0xF200042C  ADDW	R4, R0, #44
0x032C	0x2300    MOVS	R3, #0
0x032E	0x8822    LDRH	R2, [R4, #0]
0x0330	0xF3631245  BFI	R2, R3, #5, #1
0x0334	0x8022    STRH	R2, [R4, #0]
;__Lib_I2C_MSP.c, 244 :: 		
L___Lib_I2C_MSP_I2Cx_WriteByte40:
;__Lib_I2C_MSP.c, 246 :: 		
0x0336	0xF200020E  ADDW	R2, R0, #14
0x033A	0x8011    STRH	R1, [R2, #0]
; dataByte end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 248 :: 		
L___Lib_I2C_MSP_I2Cx_WriteByte41:
; I2C_BASE start address is: 0 (R0)
0x033C	0xF200022C  ADDW	R2, R0, #44
0x0340	0x8813    LDRH	R3, [R2, #0]
0x0342	0xF3C30240  UBFX	R2, R3, #1, #1
0x0346	0xB96A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_WriteByte42
;__Lib_I2C_MSP.c, 249 :: 		
0x0348	0x9A02    LDR	R2, [SP, #8]
0x034A	0xB152    CBZ	R2, L___Lib_I2C_MSP_I2Cx_WriteByte43
;__Lib_I2C_MSP.c, 250 :: 		
0x034C	0x9A01    LDR	R2, [SP, #4]
0x034E	0xB92A    CBNZ	R2, L___Lib_I2C_MSP_I2Cx_WriteByte44
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_MSP.c, 251 :: 		
0x0350	0x2004    MOVS	R0, #4
0x0352	0x4C0F    LDR	R4, [PC, #60]
0x0354	0x6824    LDR	R4, [R4, #0]
0x0356	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 252 :: 		
0x0358	0x2001    MOVS	R0, #1
0x035A	0xE00F    B	L_end_I2Cx_WriteByte
;__Lib_I2C_MSP.c, 253 :: 		
L___Lib_I2C_MSP_I2Cx_WriteByte44:
;__Lib_I2C_MSP.c, 254 :: 		
; I2C_BASE start address is: 0 (R0)
0x035C	0x9A01    LDR	R2, [SP, #4]
0x035E	0x1E52    SUBS	R2, R2, #1
0x0360	0x9201    STR	R2, [SP, #4]
;__Lib_I2C_MSP.c, 255 :: 		
L___Lib_I2C_MSP_I2Cx_WriteByte43:
;__Lib_I2C_MSP.c, 256 :: 		
0x0362	0xE7EB    B	L___Lib_I2C_MSP_I2Cx_WriteByte41
L___Lib_I2C_MSP_I2Cx_WriteByte42:
;__Lib_I2C_MSP.c, 258 :: 		
0x0364	0xF200042C  ADDW	R4, R0, #44
0x0368	0x2300    MOVS	R3, #0
0x036A	0x8822    LDRH	R2, [R4, #0]
0x036C	0xF3630241  BFI	R2, R3, #1, #1
0x0370	0x8022    STRH	R2, [R4, #0]
;__Lib_I2C_MSP.c, 260 :: 		
0x0372	0xF200022C  ADDW	R2, R0, #44
; I2C_BASE end address is: 0 (R0)
0x0376	0x8813    LDRH	R3, [R2, #0]
0x0378	0xF3C31040  UBFX	R0, R3, #5, #1
;__Lib_I2C_MSP.c, 261 :: 		
L_end_I2Cx_WriteByte:
0x037C	0xF8DDE000  LDR	LR, [SP, #0]
0x0380	0xB003    ADD	SP, SP, #12
0x0382	0x4770    BX	LR
0x0384	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x0388	0x005C2000  	__Lib_I2C_MSP__I2C0_TIMEOUT+0
0x038C	0x00C42000  	_I2C0_timeout_Ptr+0
0x0390	0x00C02000  	__Lib_I2C_MSP_I2C_Timeout_Ptr+0
0x0394	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x0398	0x00602000  	__Lib_I2C_MSP__I2C1_TIMEOUT+0
0x039C	0x00C82000  	_I2C1_timeout_Ptr+0
0x03A0	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x03A4	0x00642000  	__Lib_I2C_MSP__I2C2_TIMEOUT+0
0x03A8	0x00CC2000  	_I2C2_timeout_Ptr+0
0x03AC	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x03B0	0x00682000  	__Lib_I2C_MSP__I2C3_TIMEOUT+0
0x03B4	0x00D02000  	_I2C3_timeout_Ptr+0
; end of __Lib_I2C_MSP_I2Cx_WriteByte
__Lib_I2C_MSP_I2Cx_Stop:
;__Lib_I2C_MSP.c, 215 :: 		
; I2C_BASE start address is: 0 (R0)
0x03B8	0xB081    SUB	SP, SP, #4
0x03BA	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_MSP.c, 216 :: 		
0x03BE	0x2201    MOVS	R2, #1
0x03C0	0x8801    LDRH	R1, [R0, #0]
0x03C2	0xF3620182  BFI	R1, R2, #2, #1
0x03C6	0x8001    STRH	R1, [R0, #0]
;__Lib_I2C_MSP.c, 217 :: 		
; I2C_BASE end address is: 0 (R0)
0x03C8	0xF7FFFEA6  BL	__Lib_I2C_MSP_I2Cx_Wait_For_Idle+0
0x03CC	0xB108    CBZ	R0, L___Lib_I2C_MSP_I2Cx_Stop32
;__Lib_I2C_MSP.c, 218 :: 		
0x03CE	0x2001    MOVS	R0, #1
0x03D0	0xE000    B	L_end_I2Cx_Stop
L___Lib_I2C_MSP_I2Cx_Stop32:
;__Lib_I2C_MSP.c, 219 :: 		
0x03D2	0x2000    MOVS	R0, #0
;__Lib_I2C_MSP.c, 220 :: 		
L_end_I2Cx_Stop:
0x03D4	0xF8DDE000  LDR	LR, [SP, #0]
0x03D8	0xB001    ADD	SP, SP, #4
0x03DA	0x4770    BX	LR
; end of __Lib_I2C_MSP_I2Cx_Stop
_I2C1_Write:
;__Lib_I2C_MSP.c, 577 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x142C	0xB081    SUB	SP, SP, #4
0x142E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 578 :: 		
0x1432	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1434	0x4613    MOV	R3, R2
0x1436	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1438	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x143A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x143C	0xF7FFF9EE  BL	__Lib_I2C_MSP_I2Cx_Write+0
0x1440	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 579 :: 		
L_end_I2C1_Write:
0x1442	0xF8DDE000  LDR	LR, [SP, #0]
0x1446	0xB001    ADD	SP, SP, #4
0x1448	0x4770    BX	LR
0x144A	0xBF00    NOP
0x144C	0x24004000  	EUSCI_B1_UCB1CTLW0+0
; end of _I2C1_Write
_I2C2_Write:
;__Lib_I2C_MSP.c, 656 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1408	0xB081    SUB	SP, SP, #4
0x140A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 657 :: 		
0x140E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1410	0x4613    MOV	R3, R2
0x1412	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1414	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1416	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1418	0xF7FFFA00  BL	__Lib_I2C_MSP_I2Cx_Write+0
0x141C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 658 :: 		
L_end_I2C2_Write:
0x141E	0xF8DDE000  LDR	LR, [SP, #0]
0x1422	0xB001    ADD	SP, SP, #4
0x1424	0x4770    BX	LR
0x1426	0xBF00    NOP
0x1428	0x28004000  	EUSCI_B2_UCB2CTLW0+0
; end of _I2C2_Write
_I2C3_Write:
;__Lib_I2C_MSP.c, 735 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1774	0xB081    SUB	SP, SP, #4
0x1776	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 736 :: 		
0x177A	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x177C	0x4613    MOV	R3, R2
0x177E	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1780	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1782	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1784	0xF7FFF84A  BL	__Lib_I2C_MSP_I2Cx_Write+0
0x1788	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 737 :: 		
L_end_I2C3_Write:
0x178A	0xF8DDE000  LDR	LR, [SP, #0]
0x178E	0xB001    ADD	SP, SP, #4
0x1790	0x4770    BX	LR
0x1792	0xBF00    NOP
0x1794	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
; end of _I2C3_Write
__gyro2_driver_hal_i2cRead:
;__hal_msp432.c, 101 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x187C	0xB082    SUB	SP, SP, #8
0x187E	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_msp432.c, 103 :: 		int res = 0;
0x1882	0xF2400400  MOVW	R4, #0
0x1886	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_msp432.c, 105 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x188A	0x4C04    LDR	R4, [PC, #16]
0x188C	0x6824    LDR	R4, [R4, #0]
0x188E	0x47A0    BLX	R4
;__hal_msp432.c, 106 :: 		return res;
0x1890	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_msp432.c, 107 :: 		}
L_end_hal_i2cRead:
0x1894	0xF8DDE000  LDR	LR, [SP, #0]
0x1898	0xB002    ADD	SP, SP, #8
0x189A	0x4770    BX	LR
0x189C	0x00A82000  	__gyro2_driver_fp_i2cRead+0
; end of __gyro2_driver_hal_i2cRead
_I2C0_Read:
;__Lib_I2C_MSP.c, 484 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x16D8	0xB081    SUB	SP, SP, #4
0x16DA	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 485 :: 		
0x16DE	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x16E0	0x4613    MOV	R3, R2
0x16E2	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x16E4	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x16E6	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x16E8	0xF7FFFB4A  BL	__Lib_I2C_MSP_I2Cx_Read+0
0x16EC	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 486 :: 		
L_end_I2C0_Read:
0x16EE	0xF8DDE000  LDR	LR, [SP, #0]
0x16F2	0xB001    ADD	SP, SP, #4
0x16F4	0x4770    BX	LR
0x16F6	0xBF00    NOP
0x16F8	0x20004000  	EUSCI_B0_UCB0CTLW0+0
; end of _I2C0_Read
__Lib_I2C_MSP_I2Cx_Read:
;__Lib_I2C_MSP.c, 323 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0D80	0xB087    SUB	SP, SP, #28
0x0D82	0xF8CDE000  STR	LR, [SP, #0]
0x0D86	0xF88D1004  STRB	R1, [SP, #4]
0x0D8A	0x4601    MOV	R1, R0
0x0D8C	0xF89D0004  LDRB	R0, [SP, #4]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 0 (R0)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0D90	0x9E07    LDR	R6, [SP, #28]
;__Lib_I2C_MSP.c, 327 :: 		
0x0D92	0x4C7B    LDR	R4, [PC, #492]
0x0D94	0x42A1    CMP	R1, R4
0x0D96	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Read66
;__Lib_I2C_MSP.c, 328 :: 		
0x0D98	0x4D7A    LDR	R5, [PC, #488]
0x0D9A	0x682C    LDR	R4, [R5, #0]
0x0D9C	0x9405    STR	R4, [SP, #20]
0x0D9E	0x462C    MOV	R4, R5
0x0DA0	0x6824    LDR	R4, [R4, #0]
0x0DA2	0x9406    STR	R4, [SP, #24]
;__Lib_I2C_MSP.c, 329 :: 		
0x0DA4	0x4C78    LDR	R4, [PC, #480]
0x0DA6	0x6825    LDR	R5, [R4, #0]
0x0DA8	0x4C78    LDR	R4, [PC, #480]
0x0DAA	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 330 :: 		
0x0DAC	0xE028    B	L___Lib_I2C_MSP_I2Cx_Read67
L___Lib_I2C_MSP_I2Cx_Read66:
;__Lib_I2C_MSP.c, 331 :: 		
0x0DAE	0x4C78    LDR	R4, [PC, #480]
0x0DB0	0x42A1    CMP	R1, R4
0x0DB2	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Read68
;__Lib_I2C_MSP.c, 332 :: 		
0x0DB4	0x4D77    LDR	R5, [PC, #476]
0x0DB6	0x682C    LDR	R4, [R5, #0]
0x0DB8	0x9405    STR	R4, [SP, #20]
0x0DBA	0x462C    MOV	R4, R5
0x0DBC	0x6824    LDR	R4, [R4, #0]
0x0DBE	0x9406    STR	R4, [SP, #24]
;__Lib_I2C_MSP.c, 333 :: 		
0x0DC0	0x4C75    LDR	R4, [PC, #468]
0x0DC2	0x6825    LDR	R5, [R4, #0]
0x0DC4	0x4C71    LDR	R4, [PC, #452]
0x0DC6	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 334 :: 		
0x0DC8	0xE01A    B	L___Lib_I2C_MSP_I2Cx_Read69
L___Lib_I2C_MSP_I2Cx_Read68:
;__Lib_I2C_MSP.c, 335 :: 		
0x0DCA	0x4C74    LDR	R4, [PC, #464]
0x0DCC	0x42A1    CMP	R1, R4
0x0DCE	0xD10A    BNE	L___Lib_I2C_MSP_I2Cx_Read70
;__Lib_I2C_MSP.c, 336 :: 		
0x0DD0	0x4D73    LDR	R5, [PC, #460]
0x0DD2	0x682C    LDR	R4, [R5, #0]
0x0DD4	0x9405    STR	R4, [SP, #20]
0x0DD6	0x462C    MOV	R4, R5
0x0DD8	0x6824    LDR	R4, [R4, #0]
0x0DDA	0x9406    STR	R4, [SP, #24]
;__Lib_I2C_MSP.c, 337 :: 		
0x0DDC	0x4C71    LDR	R4, [PC, #452]
0x0DDE	0x6825    LDR	R5, [R4, #0]
0x0DE0	0x4C6A    LDR	R4, [PC, #424]
0x0DE2	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 338 :: 		
0x0DE4	0xE00C    B	L___Lib_I2C_MSP_I2Cx_Read71
L___Lib_I2C_MSP_I2Cx_Read70:
;__Lib_I2C_MSP.c, 339 :: 		
0x0DE6	0x4C70    LDR	R4, [PC, #448]
0x0DE8	0x42A1    CMP	R1, R4
0x0DEA	0xD109    BNE	L___Lib_I2C_MSP_I2Cx_Read72
;__Lib_I2C_MSP.c, 340 :: 		
0x0DEC	0x4D6F    LDR	R5, [PC, #444]
0x0DEE	0x682C    LDR	R4, [R5, #0]
0x0DF0	0x9405    STR	R4, [SP, #20]
0x0DF2	0x462C    MOV	R4, R5
0x0DF4	0x6824    LDR	R4, [R4, #0]
0x0DF6	0x9406    STR	R4, [SP, #24]
;__Lib_I2C_MSP.c, 341 :: 		
0x0DF8	0x4C6D    LDR	R4, [PC, #436]
0x0DFA	0x6825    LDR	R5, [R4, #0]
0x0DFC	0x4C63    LDR	R4, [PC, #396]
0x0DFE	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_MSP.c, 342 :: 		
L___Lib_I2C_MSP_I2Cx_Read72:
L___Lib_I2C_MSP_I2Cx_Read71:
L___Lib_I2C_MSP_I2Cx_Read69:
L___Lib_I2C_MSP_I2Cx_Read67:
;__Lib_I2C_MSP.c, 344 :: 		
0x0E00	0x9201    STR	R2, [SP, #4]
; slave_address end address is: 0 (R0)
0x0E02	0x9102    STR	R1, [SP, #8]
0x0E04	0x9103    STR	R1, [SP, #12]
0x0E06	0xB2C1    UXTB	R1, R0
0x0E08	0x9803    LDR	R0, [SP, #12]
0x0E0A	0xF7FFFC49  BL	__Lib_I2C_MSP_I2C_setSlaveAddress+0
0x0E0E	0x9902    LDR	R1, [SP, #8]
0x0E10	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_MSP.c, 345 :: 		
0x0E12	0x4C68    LDR	R4, [PC, #416]
0x0E14	0x7824    LDRB	R4, [R4, #0]
0x0E16	0xB97C    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read73
;__Lib_I2C_MSP.c, 346 :: 		
0x0E18	0x9601    STR	R6, [SP, #4]
0x0E1A	0x9302    STR	R3, [SP, #8]
0x0E1C	0x9203    STR	R2, [SP, #12]
0x0E1E	0x9104    STR	R1, [SP, #16]
0x0E20	0x4608    MOV	R0, R1
0x0E22	0x2100    MOVS	R1, #0
0x0E24	0xF7FFFB74  BL	__Lib_I2C_MSP_I2Cx_Start+0
0x0E28	0x9904    LDR	R1, [SP, #16]
0x0E2A	0x9A03    LDR	R2, [SP, #12]
0x0E2C	0x9B02    LDR	R3, [SP, #8]
0x0E2E	0x9E01    LDR	R6, [SP, #4]
0x0E30	0xB100    CBZ	R0, L___Lib_I2C_MSP_I2Cx_Read74
; END_mode end address is: 24 (R6)
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_MSP.c, 347 :: 		
0x0E32	0xE0A0    B	L_end_I2Cx_Read
L___Lib_I2C_MSP_I2Cx_Read74:
;__Lib_I2C_MSP.c, 348 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0E34	0x4630    MOV	R0, R6
0x0E36	0xE061    B	L___Lib_I2C_MSP_I2Cx_Read75
L___Lib_I2C_MSP_I2Cx_Read73:
;__Lib_I2C_MSP.c, 350 :: 		
0x0E38	0x2500    MOVS	R5, #0
0x0E3A	0x880C    LDRH	R4, [R1, #0]
0x0E3C	0xF3651404  BFI	R4, R5, #4, #1
0x0E40	0x800C    STRH	R4, [R1, #0]
;__Lib_I2C_MSP.c, 351 :: 		
0x0E42	0x2B01    CMP	R3, #1
0x0E44	0xD139    BNE	L___Lib_I2C_MSP_I2Cx_Read76
; END_mode end address is: 24 (R6)
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x0E46	0x4630    MOV	R0, R6
;__Lib_I2C_MSP.c, 352 :: 		
L___Lib_I2C_MSP_I2Cx_Read77:
; END_mode start address is: 0 (R0)
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0E48	0x880D    LDRH	R5, [R1, #0]
0x0E4A	0xF3C50480  UBFX	R4, R5, #2, #1
0x0E4E	0xB164    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read78
;__Lib_I2C_MSP.c, 353 :: 		
0x0E50	0x9C06    LDR	R4, [SP, #24]
0x0E52	0xB14C    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read79
;__Lib_I2C_MSP.c, 354 :: 		
0x0E54	0x9C05    LDR	R4, [SP, #20]
0x0E56	0xB924    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read80
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_MSP.c, 355 :: 		
0x0E58	0x2007    MOVS	R0, #7
0x0E5A	0x4C4C    LDR	R4, [PC, #304]
0x0E5C	0x6824    LDR	R4, [R4, #0]
0x0E5E	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 356 :: 		
0x0E60	0xE089    B	L_end_I2Cx_Read
;__Lib_I2C_MSP.c, 357 :: 		
L___Lib_I2C_MSP_I2Cx_Read80:
;__Lib_I2C_MSP.c, 358 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 0 (R0)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
0x0E62	0x9C05    LDR	R4, [SP, #20]
0x0E64	0x1E64    SUBS	R4, R4, #1
0x0E66	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 359 :: 		
L___Lib_I2C_MSP_I2Cx_Read79:
;__Lib_I2C_MSP.c, 360 :: 		
0x0E68	0xE7EE    B	L___Lib_I2C_MSP_I2Cx_Read77
L___Lib_I2C_MSP_I2Cx_Read78:
;__Lib_I2C_MSP.c, 361 :: 		
0x0E6A	0x9C06    LDR	R4, [SP, #24]
0x0E6C	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 363 :: 		
0x0E6E	0x880C    LDRH	R4, [R1, #0]
0x0E70	0xF0440402  ORR	R4, R4, #2
0x0E74	0x800C    STRH	R4, [R1, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
0x0E76	0x9101    STR	R1, [SP, #4]
0x0E78	0x4611    MOV	R1, R2
0x0E7A	0x461A    MOV	R2, R3
0x0E7C	0x4603    MOV	R3, R0
0x0E7E	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_MSP.c, 364 :: 		
L___Lib_I2C_MSP_I2Cx_Read81:
; I2C_BASE start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
0x0E80	0x8805    LDRH	R5, [R0, #0]
0x0E82	0xF3C50440  UBFX	R4, R5, #1, #1
0x0E86	0xB164    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read82
;__Lib_I2C_MSP.c, 365 :: 		
0x0E88	0x9C06    LDR	R4, [SP, #24]
0x0E8A	0xB14C    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read83
;__Lib_I2C_MSP.c, 366 :: 		
0x0E8C	0x9C05    LDR	R4, [SP, #20]
0x0E8E	0xB924    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read84
; I2C_BASE end address is: 0 (R0)
; buf end address is: 4 (R1)
; count end address is: 8 (R2)
; END_mode end address is: 12 (R3)
;__Lib_I2C_MSP.c, 367 :: 		
0x0E90	0x2006    MOVS	R0, #6
0x0E92	0x4C3E    LDR	R4, [PC, #248]
0x0E94	0x6824    LDR	R4, [R4, #0]
0x0E96	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 368 :: 		
0x0E98	0xE06D    B	L_end_I2Cx_Read
;__Lib_I2C_MSP.c, 369 :: 		
L___Lib_I2C_MSP_I2Cx_Read84:
;__Lib_I2C_MSP.c, 370 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0E9A	0x9C05    LDR	R4, [SP, #20]
0x0E9C	0x1E64    SUBS	R4, R4, #1
0x0E9E	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 371 :: 		
L___Lib_I2C_MSP_I2Cx_Read83:
;__Lib_I2C_MSP.c, 372 :: 		
0x0EA0	0xE7EE    B	L___Lib_I2C_MSP_I2Cx_Read81
L___Lib_I2C_MSP_I2Cx_Read82:
;__Lib_I2C_MSP.c, 373 :: 		
0x0EA2	0x9C06    LDR	R4, [SP, #24]
0x0EA4	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 375 :: 		
0x0EA6	0x8804    LDRH	R4, [R0, #0]
0x0EA8	0xF0440404  ORR	R4, R4, #4
0x0EAC	0x8004    STRH	R4, [R0, #0]
;__Lib_I2C_MSP.c, 376 :: 		
0x0EAE	0x9201    STR	R2, [SP, #4]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 4 (R1)
; count end address is: 8 (R2)
; END_mode end address is: 12 (R3)
0x0EB0	0x460A    MOV	R2, R1
0x0EB2	0x4601    MOV	R1, R0
0x0EB4	0x4618    MOV	R0, R3
0x0EB6	0x9B01    LDR	R3, [SP, #4]
0x0EB8	0xE01D    B	L___Lib_I2C_MSP_I2Cx_Read85
L___Lib_I2C_MSP_I2Cx_Read76:
;__Lib_I2C_MSP.c, 378 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0EBA	0x9301    STR	R3, [SP, #4]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
0x0EBC	0x460B    MOV	R3, R1
0x0EBE	0x4630    MOV	R0, R6
0x0EC0	0x9901    LDR	R1, [SP, #4]
L___Lib_I2C_MSP_I2Cx_Read86:
; END_mode end address is: 24 (R6)
; END_mode start address is: 0 (R0)
; count start address is: 4 (R1)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 12 (R3)
0x0EC2	0x881D    LDRH	R5, [R3, #0]
0x0EC4	0xF3C50480  UBFX	R4, R5, #2, #1
0x0EC8	0xB164    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read87
;__Lib_I2C_MSP.c, 379 :: 		
0x0ECA	0x9C06    LDR	R4, [SP, #24]
0x0ECC	0xB14C    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read88
;__Lib_I2C_MSP.c, 380 :: 		
0x0ECE	0x9C05    LDR	R4, [SP, #20]
0x0ED0	0xB924    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read89
; count end address is: 4 (R1)
; I2C_BASE end address is: 12 (R3)
; buf end address is: 8 (R2)
; END_mode end address is: 0 (R0)
;__Lib_I2C_MSP.c, 381 :: 		
0x0ED2	0x2007    MOVS	R0, #7
0x0ED4	0x4C2D    LDR	R4, [PC, #180]
0x0ED6	0x6824    LDR	R4, [R4, #0]
0x0ED8	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 382 :: 		
0x0EDA	0xE04C    B	L_end_I2Cx_Read
;__Lib_I2C_MSP.c, 383 :: 		
L___Lib_I2C_MSP_I2Cx_Read89:
;__Lib_I2C_MSP.c, 384 :: 		
; END_mode start address is: 0 (R0)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 12 (R3)
; count start address is: 4 (R1)
0x0EDC	0x9C05    LDR	R4, [SP, #20]
0x0EDE	0x1E64    SUBS	R4, R4, #1
0x0EE0	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 385 :: 		
L___Lib_I2C_MSP_I2Cx_Read88:
;__Lib_I2C_MSP.c, 386 :: 		
0x0EE2	0xE7EE    B	L___Lib_I2C_MSP_I2Cx_Read86
L___Lib_I2C_MSP_I2Cx_Read87:
;__Lib_I2C_MSP.c, 387 :: 		
0x0EE4	0x9C06    LDR	R4, [SP, #24]
0x0EE6	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 389 :: 		
0x0EE8	0x881C    LDRH	R4, [R3, #0]
0x0EEA	0xF0440402  ORR	R4, R4, #2
0x0EEE	0x801C    STRH	R4, [R3, #0]
; count end address is: 4 (R1)
; I2C_BASE end address is: 12 (R3)
; buf end address is: 8 (R2)
; END_mode end address is: 0 (R0)
0x0EF0	0x9301    STR	R3, [SP, #4]
0x0EF2	0x460B    MOV	R3, R1
0x0EF4	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_MSP.c, 390 :: 		
L___Lib_I2C_MSP_I2Cx_Read85:
;__Lib_I2C_MSP.c, 391 :: 		
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 0 (R0)
0x0EF6	0x2500    MOVS	R5, #0
0x0EF8	0x4C2E    LDR	R4, [PC, #184]
0x0EFA	0x7025    STRB	R5, [R4, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_MSP.c, 392 :: 		
L___Lib_I2C_MSP_I2Cx_Read75:
;__Lib_I2C_MSP.c, 394 :: 		
; END_mode start address is: 0 (R0)
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0EFC	0x1E5C    SUBS	R4, R3, #1
; count end address is: 12 (R3)
; i start address is: 12 (R3)
0x0EFE	0x4623    MOV	R3, R4
; buf end address is: 8 (R2)
; i end address is: 12 (R3)
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
0x0F00	0x9301    STR	R3, [SP, #4]
0x0F02	0x4613    MOV	R3, R2
0x0F04	0x9A01    LDR	R2, [SP, #4]
L___Lib_I2C_MSP_I2Cx_Read90:
; i start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 12 (R3)
; END_mode start address is: 0 (R0)
0x0F06	0x2A00    CMP	R2, #0
0x0F08	0xDB31    BLT	L___Lib_I2C_MSP_I2Cx_Read91
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
; buf end address is: 12 (R3)
; i end address is: 8 (R2)
;__Lib_I2C_MSP.c, 395 :: 		
L___Lib_I2C_MSP_I2Cx_Read93:
; END_mode start address is: 0 (R0)
; buf start address is: 12 (R3)
; I2C_BASE start address is: 4 (R1)
; i start address is: 8 (R2)
0x0F0A	0xF201042C  ADDW	R4, R1, #44
0x0F0E	0x8825    LDRH	R5, [R4, #0]
0x0F10	0xF3C50400  UBFX	R4, R5, #0, #1
0x0F14	0xB964    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read94
;__Lib_I2C_MSP.c, 396 :: 		
0x0F16	0x9C06    LDR	R4, [SP, #24]
0x0F18	0xB14C    CBZ	R4, L___Lib_I2C_MSP_I2Cx_Read95
;__Lib_I2C_MSP.c, 397 :: 		
0x0F1A	0x9C05    LDR	R4, [SP, #20]
0x0F1C	0xB924    CBNZ	R4, L___Lib_I2C_MSP_I2Cx_Read96
; END_mode end address is: 0 (R0)
; I2C_BASE end address is: 4 (R1)
; buf end address is: 12 (R3)
; i end address is: 8 (R2)
;__Lib_I2C_MSP.c, 398 :: 		
0x0F1E	0x2003    MOVS	R0, #3
0x0F20	0x4C1A    LDR	R4, [PC, #104]
0x0F22	0x6824    LDR	R4, [R4, #0]
0x0F24	0x47A0    BLX	R4
;__Lib_I2C_MSP.c, 399 :: 		
0x0F26	0xE026    B	L_end_I2Cx_Read
;__Lib_I2C_MSP.c, 400 :: 		
L___Lib_I2C_MSP_I2Cx_Read96:
;__Lib_I2C_MSP.c, 401 :: 		
; i start address is: 8 (R2)
; buf start address is: 12 (R3)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 0 (R0)
0x0F28	0x9C05    LDR	R4, [SP, #20]
0x0F2A	0x1E64    SUBS	R4, R4, #1
0x0F2C	0x9405    STR	R4, [SP, #20]
;__Lib_I2C_MSP.c, 402 :: 		
L___Lib_I2C_MSP_I2Cx_Read95:
;__Lib_I2C_MSP.c, 403 :: 		
0x0F2E	0xE7EC    B	L___Lib_I2C_MSP_I2Cx_Read93
L___Lib_I2C_MSP_I2Cx_Read94:
;__Lib_I2C_MSP.c, 404 :: 		
0x0F30	0xE016    B	L___Lib_I2C_MSP_I2Cx_Read97
;__Lib_I2C_MSP.c, 405 :: 		
L___Lib_I2C_MSP_I2Cx_Read99:
;__Lib_I2C_MSP.c, 406 :: 		
0x0F32	0xF201040C  ADDW	R4, R1, #12
0x0F36	0x8824    LDRH	R4, [R4, #0]
0x0F38	0x701C    STRB	R4, [R3, #0]
0x0F3A	0x1C5B    ADDS	R3, R3, #1
;__Lib_I2C_MSP.c, 407 :: 		
0x0F3C	0xE015    B	L___Lib_I2C_MSP_I2Cx_Read98
;__Lib_I2C_MSP.c, 408 :: 		
L___Lib_I2C_MSP_I2Cx_Read100:
;__Lib_I2C_MSP.c, 409 :: 		
0x0F3E	0x2501    MOVS	R5, #1
0x0F40	0x880C    LDRH	R4, [R1, #0]
0x0F42	0xF3650482  BFI	R4, R5, #2, #1
0x0F46	0x800C    STRH	R4, [R1, #0]
;__Lib_I2C_MSP.c, 410 :: 		
0x0F48	0xF201040C  ADDW	R4, R1, #12
0x0F4C	0x8824    LDRH	R4, [R4, #0]
0x0F4E	0x701C    STRB	R4, [R3, #0]
0x0F50	0x1C5B    ADDS	R3, R3, #1
;__Lib_I2C_MSP.c, 411 :: 		
0x0F52	0xE00A    B	L___Lib_I2C_MSP_I2Cx_Read98
;__Lib_I2C_MSP.c, 412 :: 		
L___Lib_I2C_MSP_I2Cx_Read101:
;__Lib_I2C_MSP.c, 413 :: 		
0x0F54	0xF201040C  ADDW	R4, R1, #12
0x0F58	0x8824    LDRH	R4, [R4, #0]
0x0F5A	0x701C    STRB	R4, [R3, #0]
0x0F5C	0x1C5B    ADDS	R3, R3, #1
;__Lib_I2C_MSP.c, 414 :: 		
0x0F5E	0xE004    B	L___Lib_I2C_MSP_I2Cx_Read98
;__Lib_I2C_MSP.c, 415 :: 		
L___Lib_I2C_MSP_I2Cx_Read97:
0x0F60	0x2A00    CMP	R2, #0
0x0F62	0xD0E6    BEQ	L___Lib_I2C_MSP_I2Cx_Read99
0x0F64	0x2A01    CMP	R2, #1
0x0F66	0xD0EA    BEQ	L___Lib_I2C_MSP_I2Cx_Read100
0x0F68	0xE7F4    B	L___Lib_I2C_MSP_I2Cx_Read101
; buf end address is: 12 (R3)
L___Lib_I2C_MSP_I2Cx_Read98:
;__Lib_I2C_MSP.c, 394 :: 		
; buf start address is: 12 (R3)
0x0F6A	0x1E52    SUBS	R2, R2, #1
;__Lib_I2C_MSP.c, 416 :: 		
; I2C_BASE end address is: 4 (R1)
; buf end address is: 12 (R3)
; i end address is: 8 (R2)
0x0F6C	0xE7CB    B	L___Lib_I2C_MSP_I2Cx_Read90
L___Lib_I2C_MSP_I2Cx_Read91:
;__Lib_I2C_MSP.c, 418 :: 		
0x0F6E	0xB910    CBNZ	R0, L___Lib_I2C_MSP_I2Cx_Read102
; END_mode end address is: 0 (R0)
;__Lib_I2C_MSP.c, 419 :: 		
0x0F70	0x2501    MOVS	R5, #1
0x0F72	0x4C10    LDR	R4, [PC, #64]
0x0F74	0x7025    STRB	R5, [R4, #0]
;__Lib_I2C_MSP.c, 420 :: 		
L___Lib_I2C_MSP_I2Cx_Read102:
;__Lib_I2C_MSP.c, 421 :: 		
L_end_I2Cx_Read:
0x0F76	0xF8DDE000  LDR	LR, [SP, #0]
0x0F7A	0xB007    ADD	SP, SP, #28
0x0F7C	0x4770    BX	LR
0x0F7E	0xBF00    NOP
0x0F80	0x20004000  	EUSCI_B0_UCB0CTLW0+0
0x0F84	0x005C2000  	__Lib_I2C_MSP__I2C0_TIMEOUT+0
0x0F88	0x00C42000  	_I2C0_timeout_Ptr+0
0x0F8C	0x00C02000  	__Lib_I2C_MSP_I2C_Timeout_Ptr+0
0x0F90	0x24004000  	EUSCI_B1_UCB1CTLW0+0
0x0F94	0x00602000  	__Lib_I2C_MSP__I2C1_TIMEOUT+0
0x0F98	0x00C82000  	_I2C1_timeout_Ptr+0
0x0F9C	0x28004000  	EUSCI_B2_UCB2CTLW0+0
0x0FA0	0x00642000  	__Lib_I2C_MSP__I2C2_TIMEOUT+0
0x0FA4	0x00CC2000  	_I2C2_timeout_Ptr+0
0x0FA8	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
0x0FAC	0x00682000  	__Lib_I2C_MSP__I2C3_TIMEOUT+0
0x0FB0	0x00D02000  	_I2C3_timeout_Ptr+0
0x0FB4	0x006C2000  	__Lib_I2C_MSP__DELAY_RESTART+0
; end of __Lib_I2C_MSP_I2Cx_Read
_I2C1_Read:
;__Lib_I2C_MSP.c, 563 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x112C	0xB081    SUB	SP, SP, #4
0x112E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 564 :: 		
0x1132	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1134	0x4613    MOV	R3, R2
0x1136	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1138	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x113A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x113C	0xF7FFFE20  BL	__Lib_I2C_MSP_I2Cx_Read+0
0x1140	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 565 :: 		
L_end_I2C1_Read:
0x1142	0xF8DDE000  LDR	LR, [SP, #0]
0x1146	0xB001    ADD	SP, SP, #4
0x1148	0x4770    BX	LR
0x114A	0xBF00    NOP
0x114C	0x24004000  	EUSCI_B1_UCB1CTLW0+0
; end of _I2C1_Read
_I2C2_Read:
;__Lib_I2C_MSP.c, 642 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1164	0xB081    SUB	SP, SP, #4
0x1166	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 643 :: 		
0x116A	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x116C	0x4613    MOV	R3, R2
0x116E	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1170	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1172	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1174	0xF7FFFE04  BL	__Lib_I2C_MSP_I2Cx_Read+0
0x1178	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 644 :: 		
L_end_I2C2_Read:
0x117A	0xF8DDE000  LDR	LR, [SP, #0]
0x117E	0xB001    ADD	SP, SP, #4
0x1180	0x4770    BX	LR
0x1182	0xBF00    NOP
0x1184	0x28004000  	EUSCI_B2_UCB2CTLW0+0
; end of _I2C2_Read
_I2C3_Read:
;__Lib_I2C_MSP.c, 721 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x10B8	0xB081    SUB	SP, SP, #4
0x10BA	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_MSP.c, 722 :: 		
0x10BE	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x10C0	0x4613    MOV	R3, R2
0x10C2	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x10C4	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x10C6	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x10C8	0xF7FFFE5A  BL	__Lib_I2C_MSP_I2Cx_Read+0
0x10CC	0xB001    ADD	SP, SP, #4
;__Lib_I2C_MSP.c, 723 :: 		
L_end_I2C3_Read:
0x10CE	0xF8DDE000  LDR	LR, [SP, #0]
0x10D2	0xB001    ADD	SP, SP, #4
0x10D4	0x4770    BX	LR
0x10D6	0xBF00    NOP
0x10D8	0x2C004000  	EUSCI_B3_UCB3CTLW0+0
; end of _I2C3_Read
_gyro2_interruptEventgeneration:
;__gyro2_driver.c, 319 :: 		void gyro2_interruptEventgeneration(uint8_t cfg)
; cfg start address is: 0 (R0)
0x3214	0xB081    SUB	SP, SP, #4
0x3216	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__gyro2_driver.c, 322 :: 		tmp = ( cfg & 0x0F );
0x321A	0xF000020F  AND	R2, R0, #15
; cfg end address is: 0 (R0)
;__gyro2_driver.c, 323 :: 		gyro2_singleWrite( GYRO2_RT_CFG, tmp );
0x321E	0x4905    LDR	R1, [PC, #20]
0x3220	0x7809    LDRB	R1, [R1, #0]
0x3222	0xB2C8    UXTB	R0, R1
0x3224	0xB2D1    UXTB	R1, R2
0x3226	0xF7FFF8D7  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 324 :: 		}
L_end_gyro2_interruptEventgeneration:
0x322A	0xF8DDE000  LDR	LR, [SP, #0]
0x322E	0xB001    ADD	SP, SP, #4
0x3230	0x4770    BX	LR
0x3232	0xBF00    NOP
0x3234	0x00552000  	_GYRO2_RT_CFG+0
; end of _gyro2_interruptEventgeneration
_gyro2_singleWrite:
;__gyro2_driver.c, 201 :: 		void gyro2_singleWrite(uint8_t wAddr, uint8_t rAddr)
; rAddr start address is: 4 (R1)
; wAddr start address is: 0 (R0)
0x23D8	0xB082    SUB	SP, SP, #8
0x23DA	0xF8CDE000  STR	LR, [SP, #0]
; rAddr end address is: 4 (R1)
; wAddr end address is: 0 (R0)
; wAddr start address is: 0 (R0)
; rAddr start address is: 4 (R1)
;__gyro2_driver.c, 205 :: 		reg_data[0] = wAddr;
0x23DE	0xAA01    ADD	R2, SP, #4
0x23E0	0x7010    STRB	R0, [R2, #0]
; wAddr end address is: 0 (R0)
;__gyro2_driver.c, 206 :: 		reg_data[1] = rAddr;
0x23E2	0x1C52    ADDS	R2, R2, #1
0x23E4	0x7011    STRB	R1, [R2, #0]
; rAddr end address is: 4 (R1)
;__gyro2_driver.c, 207 :: 		if (dirverUsed == GYRO2_SPI_PROTO)
0x23E6	0x4A18    LDR	R2, [PC, #96]
0x23E8	0x7813    LDRB	R3, [R2, #0]
0x23EA	0x4A18    LDR	R2, [PC, #96]
0x23EC	0x7812    LDRB	R2, [R2, #0]
0x23EE	0x429A    CMP	R2, R3
0x23F0	0xD114    BNE	L_gyro2_singleWrite8
;__gyro2_driver.c, 209 :: 		reg_data[0] &= ~0x80;
0x23F2	0xAB01    ADD	R3, SP, #4
0x23F4	0x781A    LDRB	R2, [R3, #0]
0x23F6	0xF002027F  AND	R2, R2, #127
0x23FA	0x701A    STRB	R2, [R3, #0]
;__gyro2_driver.c, 210 :: 		hal_gpio_csSet(0);
0x23FC	0x2000    MOVS	R0, #0
0x23FE	0x4C14    LDR	R4, [PC, #80]
0x2400	0x6824    LDR	R4, [R4, #0]
0x2402	0x47A0    BLX	R4
;__gyro2_driver.c, 211 :: 		hal_spiTransfer(&reg_data[0],&dummy[0],2);
0x2404	0xF10D0306  ADD	R3, SP, #6
0x2408	0xAA01    ADD	R2, SP, #4
0x240A	0x4619    MOV	R1, R3
0x240C	0x4610    MOV	R0, R2
0x240E	0x2202    MOVS	R2, #2
0x2410	0xF7FFFA46  BL	__gyro2_driver_hal_spiTransfer+0
;__gyro2_driver.c, 212 :: 		hal_gpio_csSet(1);
0x2414	0x2001    MOVS	R0, #1
0x2416	0x4C0E    LDR	R4, [PC, #56]
0x2418	0x6824    LDR	R4, [R4, #0]
0x241A	0x47A0    BLX	R4
;__gyro2_driver.c, 213 :: 		}
L_gyro2_singleWrite8:
;__gyro2_driver.c, 214 :: 		if (dirverUsed == GYRO2_I2C_PROTO)
0x241C	0x4A0D    LDR	R2, [PC, #52]
0x241E	0x7813    LDRB	R3, [R2, #0]
0x2420	0x4A0A    LDR	R2, [PC, #40]
0x2422	0x7812    LDRB	R2, [R2, #0]
0x2424	0x429A    CMP	R2, R3
0x2426	0xD10A    BNE	L_gyro2_singleWrite9
;__gyro2_driver.c, 216 :: 		hal_i2cStart();
0x2428	0xF7FFF9FC  BL	__gyro2_driver_hal_i2cStart+0
;__gyro2_driver.c, 217 :: 		hal_i2cWrite( _slaveAddress, &reg_data[0], 2, END_MODE_STOP );
0x242C	0xAB01    ADD	R3, SP, #4
0x242E	0x4A0A    LDR	R2, [PC, #40]
0x2430	0x7812    LDRB	R2, [R2, #0]
0x2432	0x4619    MOV	R1, R3
0x2434	0x2301    MOVS	R3, #1
0x2436	0xB2D0    UXTB	R0, R2
0x2438	0x2202    MOVS	R2, #2
0x243A	0xF7FFF9DF  BL	__gyro2_driver_hal_i2cWrite+0
;__gyro2_driver.c, 218 :: 		}
L_gyro2_singleWrite9:
;__gyro2_driver.c, 219 :: 		}
L_end_gyro2_singleWrite:
0x243E	0xF8DDE000  LDR	LR, [SP, #0]
0x2442	0xB002    ADD	SP, SP, #8
0x2444	0x4770    BX	LR
0x2446	0xBF00    NOP
0x2448	0x00532000  	__gyro2_driver_GYRO2_SPI_PROTO+0
0x244C	0x006D2000  	__gyro2_driver_dirverUsed+0
0x2450	0x00A02000  	__gyro2_driver_hal_gpio_csSet+0
0x2454	0x00542000  	__gyro2_driver_GYRO2_I2C_PROTO+0
0x2458	0x006E2000  	__gyro2_driver__slaveAddress+0
; end of _gyro2_singleWrite
_gyro2_sensitivity:
;__gyro2_driver.c, 326 :: 		void gyro2_sensitivity(uint8_t sSetting)
; sSetting start address is: 0 (R0)
0x31F0	0xB081    SUB	SP, SP, #4
0x31F2	0xF8CDE000  STR	LR, [SP, #0]
; sSetting end address is: 0 (R0)
; sSetting start address is: 0 (R0)
;__gyro2_driver.c, 329 :: 		tmp = ( sSetting & 0x7F );
0x31F6	0xF000027F  AND	R2, R0, #127
; sSetting end address is: 0 (R0)
;__gyro2_driver.c, 330 :: 		gyro2_singleWrite( GYRO2_RT_THS, tmp );
0x31FA	0x4905    LDR	R1, [PC, #20]
0x31FC	0x7809    LDRB	R1, [R1, #0]
0x31FE	0xB2C8    UXTB	R0, R1
0x3200	0xB2D1    UXTB	R1, R2
0x3202	0xF7FFF8E9  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 331 :: 		}
L_end_gyro2_sensitivity:
0x3206	0xF8DDE000  LDR	LR, [SP, #0]
0x320A	0xB001    ADD	SP, SP, #4
0x320C	0x4770    BX	LR
0x320E	0xBF00    NOP
0x3210	0x00572000  	_GYRO2_RT_THS+0
; end of _gyro2_sensitivity
_gyro2_setOpmode:
;__gyro2_driver.c, 291 :: 		void gyro2_setOpmode(uint8_t opmode)
; opmode start address is: 0 (R0)
0x2E9C	0xB082    SUB	SP, SP, #8
0x2E9E	0xF8CDE000  STR	LR, [SP, #0]
; opmode end address is: 0 (R0)
; opmode start address is: 0 (R0)
;__gyro2_driver.c, 293 :: 		if(opmode>3) opmode = 3;
0x2EA2	0x2803    CMP	R0, #3
0x2EA4	0xD901    BLS	L__gyro2_setOpmode32
; opmode end address is: 0 (R0)
; opmode start address is: 12 (R3)
0x2EA6	0x2303    MOVS	R3, #3
; opmode end address is: 12 (R3)
0x2EA8	0xE000    B	L_gyro2_setOpmode14
L__gyro2_setOpmode32:
0x2EAA	0xB2C3    UXTB	R3, R0
L_gyro2_setOpmode14:
;__gyro2_driver.c, 294 :: 		_tmp_ctrl_reg1 = gyro2_singleRead(GYRO2_CTRL_REG1);
; opmode start address is: 12 (R3)
0x2EAC	0x490F    LDR	R1, [PC, #60]
0x2EAE	0x7809    LDRB	R1, [R1, #0]
0x2EB0	0xF88D3004  STRB	R3, [SP, #4]
0x2EB4	0xB2C8    UXTB	R0, R1
0x2EB6	0xF7FFFDDD  BL	_gyro2_singleRead+0
0x2EBA	0xF89D3004  LDRB	R3, [SP, #4]
0x2EBE	0x4A0C    LDR	R2, [PC, #48]
0x2EC0	0x7010    STRB	R0, [R2, #0]
;__gyro2_driver.c, 295 :: 		_tmp_ctrl_reg1 &= ~3; //clear the DR bitfield before setting
0x2EC2	0xF64F71FC  MOVW	R1, #65532
0x2EC6	0xB209    SXTH	R1, R1
0x2EC8	0xEA000101  AND	R1, R0, R1, LSL #0
0x2ECC	0x7011    STRB	R1, [R2, #0]
;__gyro2_driver.c, 296 :: 		_tmp_ctrl_reg1 |= opmode;
0x2ECE	0xB2C9    UXTB	R1, R1
0x2ED0	0x4319    ORRS	R1, R3
; opmode end address is: 12 (R3)
0x2ED2	0x7011    STRB	R1, [R2, #0]
;__gyro2_driver.c, 297 :: 		gyro2_singleWrite(GYRO2_CTRL_REG1, _tmp_ctrl_reg1);
0x2ED4	0xB2CA    UXTB	R2, R1
0x2ED6	0x4905    LDR	R1, [PC, #20]
0x2ED8	0x7809    LDRB	R1, [R1, #0]
0x2EDA	0xB2C8    UXTB	R0, R1
0x2EDC	0xB2D1    UXTB	R1, R2
0x2EDE	0xF7FFFA7B  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 298 :: 		}
L_end_gyro2_setOpmode:
0x2EE2	0xF8DDE000  LDR	LR, [SP, #0]
0x2EE6	0xB002    ADD	SP, SP, #8
0x2EE8	0x4770    BX	LR
0x2EEA	0xBF00    NOP
0x2EEC	0x00562000  	_GYRO2_CTRL_REG1+0
0x2EF0	0x006F2000  	__gyro2_driver__tmp_ctrl_reg1+0
; end of _gyro2_setOpmode
_gyro2_setDR:
;__gyro2_driver.c, 282 :: 		void gyro2_setDR(uint8_t rate)
; rate start address is: 0 (R0)
0x2DD0	0xB082    SUB	SP, SP, #8
0x2DD2	0xF8CDE000  STR	LR, [SP, #0]
; rate end address is: 0 (R0)
; rate start address is: 0 (R0)
;__gyro2_driver.c, 284 :: 		if(rate>7) rate = 7;
0x2DD6	0x2807    CMP	R0, #7
0x2DD8	0xD901    BLS	L__gyro2_setDR31
; rate end address is: 0 (R0)
; rate start address is: 16 (R4)
0x2DDA	0x2407    MOVS	R4, #7
; rate end address is: 16 (R4)
0x2DDC	0xE000    B	L_gyro2_setDR13
L__gyro2_setDR31:
0x2DDE	0xB2C4    UXTB	R4, R0
L_gyro2_setDR13:
;__gyro2_driver.c, 285 :: 		_tmp_ctrl_reg1 = gyro2_singleRead(GYRO2_CTRL_REG1);
; rate start address is: 16 (R4)
0x2DE0	0x4910    LDR	R1, [PC, #64]
0x2DE2	0x7809    LDRB	R1, [R1, #0]
0x2DE4	0xF88D4004  STRB	R4, [SP, #4]
0x2DE8	0xB2C8    UXTB	R0, R1
0x2DEA	0xF7FFFE43  BL	_gyro2_singleRead+0
0x2DEE	0xF89D4004  LDRB	R4, [SP, #4]
0x2DF2	0x4B0D    LDR	R3, [PC, #52]
0x2DF4	0x7018    STRB	R0, [R3, #0]
;__gyro2_driver.c, 286 :: 		_tmp_ctrl_reg1 &= ~(7<<2); //clear the DR bitfield before setting
0x2DF6	0xF64F71E3  MOVW	R1, #65507
0x2DFA	0xB209    SXTH	R1, R1
0x2DFC	0xEA000101  AND	R1, R0, R1, LSL #0
0x2E00	0x7019    STRB	R1, [R3, #0]
;__gyro2_driver.c, 287 :: 		_tmp_ctrl_reg1 |= (rate<<2);
0x2E02	0x00A2    LSLS	R2, R4, #2
0x2E04	0xB292    UXTH	R2, R2
; rate end address is: 16 (R4)
0x2E06	0xB2C9    UXTB	R1, R1
0x2E08	0x4311    ORRS	R1, R2
0x2E0A	0x7019    STRB	R1, [R3, #0]
;__gyro2_driver.c, 288 :: 		gyro2_singleWrite(GYRO2_CTRL_REG1, _tmp_ctrl_reg1);
0x2E0C	0xB2CA    UXTB	R2, R1
0x2E0E	0x4905    LDR	R1, [PC, #20]
0x2E10	0x7809    LDRB	R1, [R1, #0]
0x2E12	0xB2C8    UXTB	R0, R1
0x2E14	0xB2D1    UXTB	R1, R2
0x2E16	0xF7FFFADF  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 289 :: 		}
L_end_gyro2_setDR:
0x2E1A	0xF8DDE000  LDR	LR, [SP, #0]
0x2E1E	0xB002    ADD	SP, SP, #8
0x2E20	0x4770    BX	LR
0x2E22	0xBF00    NOP
0x2E24	0x00562000  	_GYRO2_CTRL_REG1+0
0x2E28	0x006F2000  	__gyro2_driver__tmp_ctrl_reg1+0
; end of _gyro2_setDR
_gyro2_interruptCfg:
;__gyro2_driver.c, 301 :: 		void gyro2_interruptCfg(uint8_t intRoute, uint8_t intEn, uint8_t polarity_outdrvsetting)
; polarity_outdrvsetting start address is: 8 (R2)
; intEn start address is: 4 (R1)
; intRoute start address is: 0 (R0)
0x2F44	0xB081    SUB	SP, SP, #4
0x2F46	0xF8CDE000  STR	LR, [SP, #0]
; polarity_outdrvsetting end address is: 8 (R2)
; intEn end address is: 4 (R1)
; intRoute end address is: 0 (R0)
; intRoute start address is: 0 (R0)
; intEn start address is: 4 (R1)
; polarity_outdrvsetting start address is: 8 (R2)
;__gyro2_driver.c, 305 :: 		_tmp_ctrl_reg2 = (intEn & 1<<2) ? ( _tmp_ctrl_reg2 | 4 ) : ( _tmp_ctrl_reg2 & 0xFB );
0x2F4A	0xF0010304  AND	R3, R1, #4
0x2F4E	0xB21B    SXTH	R3, R3
0x2F50	0xB12B    CBZ	R3, L_gyro2_interruptCfg15
0x2F52	0x4B47    LDR	R3, [PC, #284]
0x2F54	0x781B    LDRB	R3, [R3, #0]
0x2F56	0xF0430404  ORR	R4, R3, #4
0x2F5A	0xB2E4    UXTB	R4, R4
; ?FLOC___gyro2_interruptCfg?T272 start address is: 16 (R4)
; ?FLOC___gyro2_interruptCfg?T272 end address is: 16 (R4)
0x2F5C	0xE004    B	L_gyro2_interruptCfg16
L_gyro2_interruptCfg15:
0x2F5E	0x4B44    LDR	R3, [PC, #272]
0x2F60	0x781B    LDRB	R3, [R3, #0]
0x2F62	0xF00304FB  AND	R4, R3, #251
0x2F66	0xB2E4    UXTB	R4, R4
; ?FLOC___gyro2_interruptCfg?T272 start address is: 16 (R4)
; ?FLOC___gyro2_interruptCfg?T272 end address is: 16 (R4)
L_gyro2_interruptCfg16:
; ?FLOC___gyro2_interruptCfg?T272 start address is: 16 (R4)
0x2F68	0x4B41    LDR	R3, [PC, #260]
0x2F6A	0x701C    STRB	R4, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T272 end address is: 16 (R4)
;__gyro2_driver.c, 306 :: 		_tmp_ctrl_reg2 = (intEn & 1<<4) ? ( _tmp_ctrl_reg2 | 16 ) : ( _tmp_ctrl_reg2 & 0xEF );
0x2F6C	0xF0010310  AND	R3, R1, #16
0x2F70	0xB21B    SXTH	R3, R3
0x2F72	0xB12B    CBZ	R3, L_gyro2_interruptCfg17
0x2F74	0x4B3E    LDR	R3, [PC, #248]
0x2F76	0x781B    LDRB	R3, [R3, #0]
0x2F78	0xF0430410  ORR	R4, R3, #16
0x2F7C	0xB2E4    UXTB	R4, R4
; ?FLOC___gyro2_interruptCfg?T276 start address is: 16 (R4)
; ?FLOC___gyro2_interruptCfg?T276 end address is: 16 (R4)
0x2F7E	0xE004    B	L_gyro2_interruptCfg18
L_gyro2_interruptCfg17:
0x2F80	0x4B3B    LDR	R3, [PC, #236]
0x2F82	0x781B    LDRB	R3, [R3, #0]
0x2F84	0xF00304EF  AND	R4, R3, #239
0x2F88	0xB2E4    UXTB	R4, R4
; ?FLOC___gyro2_interruptCfg?T276 start address is: 16 (R4)
; ?FLOC___gyro2_interruptCfg?T276 end address is: 16 (R4)
L_gyro2_interruptCfg18:
; ?FLOC___gyro2_interruptCfg?T276 start address is: 16 (R4)
0x2F8A	0x4B39    LDR	R3, [PC, #228]
0x2F8C	0x701C    STRB	R4, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T276 end address is: 16 (R4)
;__gyro2_driver.c, 307 :: 		_tmp_ctrl_reg2 = (intEn & 1<<6) ? ( _tmp_ctrl_reg2 | 64 ) : ( _tmp_ctrl_reg2 & 0xBF );
0x2F8E	0xF0010340  AND	R3, R1, #64
0x2F92	0xB21B    SXTH	R3, R3
; intEn end address is: 4 (R1)
0x2F94	0xB12B    CBZ	R3, L_gyro2_interruptCfg19
0x2F96	0x4B36    LDR	R3, [PC, #216]
0x2F98	0x781B    LDRB	R3, [R3, #0]
0x2F9A	0xF0430140  ORR	R1, R3, #64
0x2F9E	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T280 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T280 end address is: 4 (R1)
0x2FA0	0xE004    B	L_gyro2_interruptCfg20
L_gyro2_interruptCfg19:
0x2FA2	0x4B33    LDR	R3, [PC, #204]
0x2FA4	0x781B    LDRB	R3, [R3, #0]
0x2FA6	0xF00301BF  AND	R1, R3, #191
0x2FAA	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T280 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T280 end address is: 4 (R1)
L_gyro2_interruptCfg20:
; ?FLOC___gyro2_interruptCfg?T280 start address is: 4 (R1)
0x2FAC	0x4B30    LDR	R3, [PC, #192]
0x2FAE	0x7019    STRB	R1, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T280 end address is: 4 (R1)
;__gyro2_driver.c, 309 :: 		_tmp_ctrl_reg2 = (polarity_outdrvsetting & 1) ? ( _tmp_ctrl_reg2 | 1 ) : ( _tmp_ctrl_reg2 & 0xFE );
0x2FB0	0xF0020301  AND	R3, R2, #1
0x2FB4	0xB2DB    UXTB	R3, R3
0x2FB6	0xB12B    CBZ	R3, L_gyro2_interruptCfg21
0x2FB8	0x4B2D    LDR	R3, [PC, #180]
0x2FBA	0x781B    LDRB	R3, [R3, #0]
0x2FBC	0xF0430101  ORR	R1, R3, #1
0x2FC0	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T284 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T284 end address is: 4 (R1)
0x2FC2	0xE004    B	L_gyro2_interruptCfg22
L_gyro2_interruptCfg21:
0x2FC4	0x4B2A    LDR	R3, [PC, #168]
0x2FC6	0x781B    LDRB	R3, [R3, #0]
0x2FC8	0xF00301FE  AND	R1, R3, #254
0x2FCC	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T284 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T284 end address is: 4 (R1)
L_gyro2_interruptCfg22:
; ?FLOC___gyro2_interruptCfg?T284 start address is: 4 (R1)
0x2FCE	0x4B28    LDR	R3, [PC, #160]
0x2FD0	0x7019    STRB	R1, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T284 end address is: 4 (R1)
;__gyro2_driver.c, 310 :: 		_tmp_ctrl_reg2 = (polarity_outdrvsetting & 1<<1) ? ( _tmp_ctrl_reg2 | 2 ) : ( _tmp_ctrl_reg2 & 0xFD );
0x2FD2	0xF0020302  AND	R3, R2, #2
0x2FD6	0xB21B    SXTH	R3, R3
; polarity_outdrvsetting end address is: 8 (R2)
0x2FD8	0xB12B    CBZ	R3, L_gyro2_interruptCfg23
0x2FDA	0x4B25    LDR	R3, [PC, #148]
0x2FDC	0x781B    LDRB	R3, [R3, #0]
0x2FDE	0xF0430102  ORR	R1, R3, #2
0x2FE2	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T288 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T288 end address is: 4 (R1)
0x2FE4	0xE004    B	L_gyro2_interruptCfg24
L_gyro2_interruptCfg23:
0x2FE6	0x4B22    LDR	R3, [PC, #136]
0x2FE8	0x781B    LDRB	R3, [R3, #0]
0x2FEA	0xF00301FD  AND	R1, R3, #253
0x2FEE	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T288 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T288 end address is: 4 (R1)
L_gyro2_interruptCfg24:
; ?FLOC___gyro2_interruptCfg?T288 start address is: 4 (R1)
0x2FF0	0x4B1F    LDR	R3, [PC, #124]
0x2FF2	0x7019    STRB	R1, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T288 end address is: 4 (R1)
;__gyro2_driver.c, 312 :: 		_tmp_ctrl_reg2 = (intRoute & 1<<3) ? ( _tmp_ctrl_reg2 | 8 )  : ( _tmp_ctrl_reg2 & 0xF7 );
0x2FF4	0xF0000308  AND	R3, R0, #8
0x2FF8	0xB21B    SXTH	R3, R3
0x2FFA	0xB12B    CBZ	R3, L_gyro2_interruptCfg25
0x2FFC	0x4B1C    LDR	R3, [PC, #112]
0x2FFE	0x781B    LDRB	R3, [R3, #0]
0x3000	0xF0430108  ORR	R1, R3, #8
0x3004	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T292 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T292 end address is: 4 (R1)
0x3006	0xE004    B	L_gyro2_interruptCfg26
L_gyro2_interruptCfg25:
0x3008	0x4B19    LDR	R3, [PC, #100]
0x300A	0x781B    LDRB	R3, [R3, #0]
0x300C	0xF00301F7  AND	R1, R3, #247
0x3010	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T292 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T292 end address is: 4 (R1)
L_gyro2_interruptCfg26:
; ?FLOC___gyro2_interruptCfg?T292 start address is: 4 (R1)
0x3012	0x4B17    LDR	R3, [PC, #92]
0x3014	0x7019    STRB	R1, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T292 end address is: 4 (R1)
;__gyro2_driver.c, 313 :: 		_tmp_ctrl_reg2 = (intRoute & 1<<5) ? ( _tmp_ctrl_reg2 | 32 ) : ( _tmp_ctrl_reg2 & 0xDF );
0x3016	0xF0000320  AND	R3, R0, #32
0x301A	0xB21B    SXTH	R3, R3
0x301C	0xB12B    CBZ	R3, L_gyro2_interruptCfg27
0x301E	0x4B14    LDR	R3, [PC, #80]
0x3020	0x781B    LDRB	R3, [R3, #0]
0x3022	0xF0430120  ORR	R1, R3, #32
0x3026	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T296 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T296 end address is: 4 (R1)
0x3028	0xE004    B	L_gyro2_interruptCfg28
L_gyro2_interruptCfg27:
0x302A	0x4B11    LDR	R3, [PC, #68]
0x302C	0x781B    LDRB	R3, [R3, #0]
0x302E	0xF00301DF  AND	R1, R3, #223
0x3032	0xB2C9    UXTB	R1, R1
; ?FLOC___gyro2_interruptCfg?T296 start address is: 4 (R1)
; ?FLOC___gyro2_interruptCfg?T296 end address is: 4 (R1)
L_gyro2_interruptCfg28:
; ?FLOC___gyro2_interruptCfg?T296 start address is: 4 (R1)
0x3034	0x4B0E    LDR	R3, [PC, #56]
0x3036	0x7019    STRB	R1, [R3, #0]
; ?FLOC___gyro2_interruptCfg?T296 end address is: 4 (R1)
;__gyro2_driver.c, 314 :: 		_tmp_ctrl_reg2 = (intRoute & 1<<7) ? ( _tmp_ctrl_reg2 | 128 ) : ( _tmp_ctrl_reg2 & 0x7F );
0x3038	0xF0000380  AND	R3, R0, #128
0x303C	0xB21B    SXTH	R3, R3
; intRoute end address is: 0 (R0)
0x303E	0xB12B    CBZ	R3, L_gyro2_interruptCfg29
0x3040	0x4B0B    LDR	R3, [PC, #44]
0x3042	0x781B    LDRB	R3, [R3, #0]
0x3044	0xF0430080  ORR	R0, R3, #128
0x3048	0xB2C0    UXTB	R0, R0
; ?FLOC___gyro2_interruptCfg?T300 start address is: 0 (R0)
; ?FLOC___gyro2_interruptCfg?T300 end address is: 0 (R0)
0x304A	0xE004    B	L_gyro2_interruptCfg30
L_gyro2_interruptCfg29:
0x304C	0x4B08    LDR	R3, [PC, #32]
0x304E	0x781B    LDRB	R3, [R3, #0]
0x3050	0xF003007F  AND	R0, R3, #127
0x3054	0xB2C0    UXTB	R0, R0
; ?FLOC___gyro2_interruptCfg?T300 start address is: 0 (R0)
; ?FLOC___gyro2_interruptCfg?T300 end address is: 0 (R0)
L_gyro2_interruptCfg30:
; ?FLOC___gyro2_interruptCfg?T300 start address is: 0 (R0)
0x3056	0x4B06    LDR	R3, [PC, #24]
0x3058	0x7018    STRB	R0, [R3, #0]
;__gyro2_driver.c, 316 :: 		gyro2_singleWrite(GYRO2_CTRL_REG2, _tmp_ctrl_reg2);
0x305A	0xB2C4    UXTB	R4, R0
; ?FLOC___gyro2_interruptCfg?T300 end address is: 0 (R0)
0x305C	0x4B05    LDR	R3, [PC, #20]
0x305E	0x781B    LDRB	R3, [R3, #0]
0x3060	0xB2E1    UXTB	R1, R4
0x3062	0xB2D8    UXTB	R0, R3
0x3064	0xF7FFF9B8  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 317 :: 		}
L_end_gyro2_interruptCfg:
0x3068	0xF8DDE000  LDR	LR, [SP, #0]
0x306C	0xB001    ADD	SP, SP, #4
0x306E	0x4770    BX	LR
0x3070	0x00A42000  	__gyro2_driver__tmp_ctrl_reg2+0
0x3074	0x00582000  	_GYRO2_CTRL_REG2+0
; end of _gyro2_interruptCfg
_gyro2_frSetup:
;__gyro2_driver.c, 335 :: 		void gyro2_frSetup(uint8_t lowPass, uint8_t hiPass, uint8_t scaleSet)
; scaleSet start address is: 8 (R2)
; hiPass start address is: 4 (R1)
; lowPass start address is: 0 (R0)
0x2F0C	0xB081    SUB	SP, SP, #4
0x2F0E	0xF8CDE000  STR	LR, [SP, #0]
; scaleSet end address is: 8 (R2)
; hiPass end address is: 4 (R1)
; lowPass end address is: 0 (R0)
; lowPass start address is: 0 (R0)
; hiPass start address is: 4 (R1)
; scaleSet start address is: 8 (R2)
;__gyro2_driver.c, 338 :: 		tmp =  ( lowPass & 0xC0 );
0x2F12	0xF00004C0  AND	R4, R0, #192
0x2F16	0xB2E4    UXTB	R4, R4
; lowPass end address is: 0 (R0)
;__gyro2_driver.c, 339 :: 		tmp |= ( hiPass &  0x1C );
0x2F18	0xF001031C  AND	R3, R1, #28
0x2F1C	0xB2DB    UXTB	R3, R3
; hiPass end address is: 4 (R1)
0x2F1E	0x431C    ORRS	R4, R3
0x2F20	0xB2E4    UXTB	R4, R4
;__gyro2_driver.c, 340 :: 		tmp |= ( scaleSet  & 0x03 );
0x2F22	0xF0020303  AND	R3, R2, #3
0x2F26	0xB2DB    UXTB	R3, R3
; scaleSet end address is: 8 (R2)
0x2F28	0x431C    ORRS	R4, R3
;__gyro2_driver.c, 341 :: 		gyro2_singleWrite(GYRO2_CTRL_REG0, tmp );
0x2F2A	0x4B05    LDR	R3, [PC, #20]
0x2F2C	0x781B    LDRB	R3, [R3, #0]
0x2F2E	0xB2E1    UXTB	R1, R4
0x2F30	0xB2D8    UXTB	R0, R3
0x2F32	0xF7FFFA51  BL	_gyro2_singleWrite+0
;__gyro2_driver.c, 342 :: 		}
L_end_gyro2_frSetup:
0x2F36	0xF8DDE000  LDR	LR, [SP, #0]
0x2F3A	0xB001    ADD	SP, SP, #4
0x2F3C	0x4770    BX	LR
0x2F3E	0xBF00    NOP
0x2F40	0x00592000  	_GYRO2_CTRL_REG0+0
; end of _gyro2_frSetup
_applicationTask:
;Click_Gyro2_MSP.c, 83 :: 		void applicationTask()
0x32A0	0xB081    SUB	SP, SP, #4
0x32A2	0xF8CDE000  STR	LR, [SP, #0]
;Click_Gyro2_MSP.c, 85 :: 		if(gyro2_pwmPin())
0x32A6	0xF7FFFE25  BL	_gyro2_pwmPin+0
0x32AA	0x2800    CMP	R0, #0
0x32AC	0xD03C    BEQ	L_applicationTask10
;Click_Gyro2_MSP.c, 87 :: 		gyro2_getAxisraw(&axisDatatmp[0]);
0x32AE	0x4820    LDR	R0, [PC, #128]
0x32B0	0xF7FFFCD6  BL	_gyro2_getAxisraw+0
;Click_Gyro2_MSP.c, 88 :: 		gyro2_calcAxis(&axisDatatmp[0]);
0x32B4	0x481E    LDR	R0, [PC, #120]
0x32B6	0xF7FFFF41  BL	_gyro2_calcAxis+0
;Click_Gyro2_MSP.c, 90 :: 		IntToStr( axisDatatmp[0], text);
0x32BA	0x481D    LDR	R0, [PC, #116]
0x32BC	0xF9B00000  LDRSH	R0, [R0, #0]
0x32C0	0x491C    LDR	R1, [PC, #112]
0x32C2	0xF7FFFF03  BL	_IntToStr+0
;Click_Gyro2_MSP.c, 91 :: 		mikrobus_logWrite( "X: ",_LOG_TEXT);
0x32C6	0x481C    LDR	R0, [PC, #112]
0x32C8	0x2101    MOVS	R1, #1
0x32CA	0xF7FFFDAF  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 92 :: 		Ltrim(text);
0x32CE	0x4819    LDR	R0, [PC, #100]
0x32D0	0xF7FFFFB2  BL	_Ltrim+0
;Click_Gyro2_MSP.c, 93 :: 		mikrobus_logWrite( text,_LOG_LINE);
0x32D4	0x2102    MOVS	R1, #2
0x32D6	0x4817    LDR	R0, [PC, #92]
0x32D8	0xF7FFFDA8  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 94 :: 		IntToStr( axisDatatmp[1], text);
0x32DC	0x4817    LDR	R0, [PC, #92]
0x32DE	0xF9B00000  LDRSH	R0, [R0, #0]
0x32E2	0x4914    LDR	R1, [PC, #80]
0x32E4	0xF7FFFEF2  BL	_IntToStr+0
;Click_Gyro2_MSP.c, 95 :: 		mikrobus_logWrite( "Y: ",_LOG_TEXT);
0x32E8	0x4815    LDR	R0, [PC, #84]
0x32EA	0x2101    MOVS	R1, #1
0x32EC	0xF7FFFD9E  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 96 :: 		Ltrim(text);
0x32F0	0x4810    LDR	R0, [PC, #64]
0x32F2	0xF7FFFFA1  BL	_Ltrim+0
;Click_Gyro2_MSP.c, 97 :: 		mikrobus_logWrite( text,_LOG_LINE);
0x32F6	0x2102    MOVS	R1, #2
0x32F8	0x480E    LDR	R0, [PC, #56]
0x32FA	0xF7FFFD97  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 98 :: 		IntToStr( axisDatatmp[2], text);
0x32FE	0x4811    LDR	R0, [PC, #68]
0x3300	0xF9B00000  LDRSH	R0, [R0, #0]
0x3304	0x490B    LDR	R1, [PC, #44]
0x3306	0xF7FFFEE1  BL	_IntToStr+0
;Click_Gyro2_MSP.c, 99 :: 		mikrobus_logWrite( "Z: ",_LOG_TEXT);
0x330A	0x480F    LDR	R0, [PC, #60]
0x330C	0x2101    MOVS	R1, #1
0x330E	0xF7FFFD8D  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 100 :: 		Ltrim(text);
0x3312	0x4808    LDR	R0, [PC, #32]
0x3314	0xF7FFFF90  BL	_Ltrim+0
;Click_Gyro2_MSP.c, 101 :: 		mikrobus_logWrite( text,_LOG_LINE);
0x3318	0x2102    MOVS	R1, #2
0x331A	0x4806    LDR	R0, [PC, #24]
0x331C	0xF7FFFD86  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 102 :: 		mikrobus_logWrite("---",_LOG_LINE);
0x3320	0x480A    LDR	R0, [PC, #40]
0x3322	0x2102    MOVS	R1, #2
0x3324	0xF7FFFD82  BL	_mikrobus_logWrite+0
;Click_Gyro2_MSP.c, 103 :: 		}
L_applicationTask10:
;Click_Gyro2_MSP.c, 104 :: 		}
L_end_applicationTask:
0x3328	0xF8DDE000  LDR	LR, [SP, #0]
0x332C	0xB001    ADD	SP, SP, #4
0x332E	0x4770    BX	LR
0x3330	0x007C2000  	_axisDatatmp+0
0x3334	0x00842000  	_text+0
0x3338	0x00432000  	?lstr4_Click_Gyro2_MSP+0
0x333C	0x007E2000  	_axisDatatmp+2
0x3340	0x00472000  	?lstr5_Click_Gyro2_MSP+0
0x3344	0x00802000  	_axisDatatmp+4
0x3348	0x004B2000  	?lstr6_Click_Gyro2_MSP+0
0x334C	0x004F2000  	?lstr7_Click_Gyro2_MSP+0
; end of _applicationTask
_gyro2_pwmPin:
;__gyro2_driver.c, 267 :: 		uint8_t gyro2_pwmPin()
0x2EF4	0xB081    SUB	SP, SP, #4
0x2EF6	0xF8CDE000  STR	LR, [SP, #0]
;__gyro2_driver.c, 270 :: 		tmp =  hal_gpio_pwmGet();
0x2EFA	0x4C03    LDR	R4, [PC, #12]
0x2EFC	0x6824    LDR	R4, [R4, #0]
0x2EFE	0x47A0    BLX	R4
;__gyro2_driver.c, 271 :: 		return tmp;
;__gyro2_driver.c, 272 :: 		}
L_end_gyro2_pwmPin:
0x2F00	0xF8DDE000  LDR	LR, [SP, #0]
0x2F04	0xB001    ADD	SP, SP, #4
0x2F06	0x4770    BX	LR
0x2F08	0x009C2000  	__gyro2_driver_hal_gpio_pwmGet+0
; end of _gyro2_pwmPin
clicker_2_MSP432__getAN_1:
;__c2_msp432_gpio.c, 31 :: 		static uint8_t _getAN_1  ()                         { return DIO_P6IN.B0;   }
0x2008	0xB081    SUB	SP, SP, #4
0x200A	0x4802    LDR	R0, [PC, #8]
0x200C	0x7800    LDRB	R0, [R0, #0]
L_end__getAN_1:
0x200E	0xB001    ADD	SP, SP, #4
0x2010	0x4770    BX	LR
0x2012	0xBF00    NOP
0x2014	0x88204209  	DIO_P6IN+0
; end of clicker_2_MSP432__getAN_1
clicker_2_MSP432__getRST_1:
;__c2_msp432_gpio.c, 32 :: 		static uint8_t _getRST_1 ()                         { return DIO_P5IN.B6;   }
0x2018	0xB081    SUB	SP, SP, #4
0x201A	0x4802    LDR	R0, [PC, #8]
0x201C	0x7800    LDRB	R0, [R0, #0]
L_end__getRST_1:
0x201E	0xB001    ADD	SP, SP, #4
0x2020	0x4770    BX	LR
0x2022	0xBF00    NOP
0x2024	0x88184209  	DIO_P5IN+0
; end of clicker_2_MSP432__getRST_1
clicker_2_MSP432__getCS_1:
;__c2_msp432_gpio.c, 33 :: 		static uint8_t _getCS_1  ()                         { return DIO_P5IN.B0;   }
0x2028	0xB081    SUB	SP, SP, #4
0x202A	0x4802    LDR	R0, [PC, #8]
0x202C	0x7800    LDRB	R0, [R0, #0]
L_end__getCS_1:
0x202E	0xB001    ADD	SP, SP, #4
0x2030	0x4770    BX	LR
0x2032	0xBF00    NOP
0x2034	0x88004209  	DIO_P5IN+0
; end of clicker_2_MSP432__getCS_1
clicker_2_MSP432__getSCK_1:
;__c2_msp432_gpio.c, 34 :: 		static uint8_t _getSCK_1 ()                         { return DIO_P1IN.B5;   }
0x1C08	0xB081    SUB	SP, SP, #4
0x1C0A	0x4802    LDR	R0, [PC, #8]
0x1C0C	0x7800    LDRB	R0, [R0, #0]
L_end__getSCK_1:
0x1C0E	0xB001    ADD	SP, SP, #4
0x1C10	0x4770    BX	LR
0x1C12	0xBF00    NOP
0x1C14	0x80144209  	DIO_P1IN+0
; end of clicker_2_MSP432__getSCK_1
clicker_2_MSP432__getMISO_1:
;__c2_msp432_gpio.c, 35 :: 		static uint8_t _getMISO_1()                         { return DIO_P1IN.B7;   }
0x1B68	0xB081    SUB	SP, SP, #4
0x1B6A	0x4802    LDR	R0, [PC, #8]
0x1B6C	0x7800    LDRB	R0, [R0, #0]
L_end__getMISO_1:
0x1B6E	0xB001    ADD	SP, SP, #4
0x1B70	0x4770    BX	LR
0x1B72	0xBF00    NOP
0x1B74	0x801C4209  	DIO_P1IN+0
; end of clicker_2_MSP432__getMISO_1
clicker_2_MSP432__getMOSI_1:
;__c2_msp432_gpio.c, 36 :: 		static uint8_t _getMOSI_1()                         { return DIO_P1IN.B6;   }
0x1B58	0xB081    SUB	SP, SP, #4
0x1B5A	0x4802    LDR	R0, [PC, #8]
0x1B5C	0x7800    LDRB	R0, [R0, #0]
L_end__getMOSI_1:
0x1B5E	0xB001    ADD	SP, SP, #4
0x1B60	0x4770    BX	LR
0x1B62	0xBF00    NOP
0x1B64	0x80184209  	DIO_P1IN+0
; end of clicker_2_MSP432__getMOSI_1
clicker_2_MSP432__getPWM_1:
;__c2_msp432_gpio.c, 37 :: 		static uint8_t _getPWM_1 ()                         { return DIO_P2IN.B7;   }
0x1B88	0xB081    SUB	SP, SP, #4
0x1B8A	0x4802    LDR	R0, [PC, #8]
0x1B8C	0x7800    LDRB	R0, [R0, #0]
L_end__getPWM_1:
0x1B8E	0xB001    ADD	SP, SP, #4
0x1B90	0x4770    BX	LR
0x1B92	0xBF00    NOP
0x1B94	0x803C4209  	DIO_P2IN+0
; end of clicker_2_MSP432__getPWM_1
clicker_2_MSP432__getINT_1:
;__c2_msp432_gpio.c, 38 :: 		static uint8_t _getINT_1 ()                         { return DIO_P2IN.B4;   }
0x1B78	0xB081    SUB	SP, SP, #4
0x1B7A	0x4802    LDR	R0, [PC, #8]
0x1B7C	0x7800    LDRB	R0, [R0, #0]
L_end__getINT_1:
0x1B7E	0xB001    ADD	SP, SP, #4
0x1B80	0x4770    BX	LR
0x1B82	0xBF00    NOP
0x1B84	0x80304209  	DIO_P2IN+0
; end of clicker_2_MSP432__getINT_1
clicker_2_MSP432__getRX_1:
;__c2_msp432_gpio.c, 39 :: 		static uint8_t _getRX_1  ()                         { return DIO_P3IN.B2;   }
0x1B48	0xB081    SUB	SP, SP, #4
0x1B4A	0x4802    LDR	R0, [PC, #8]
0x1B4C	0x7800    LDRB	R0, [R0, #0]
L_end__getRX_1:
0x1B4E	0xB001    ADD	SP, SP, #4
0x1B50	0x4770    BX	LR
0x1B52	0xBF00    NOP
0x1B54	0x84084209  	DIO_P3IN+0
; end of clicker_2_MSP432__getRX_1
clicker_2_MSP432__getTX_1:
;__c2_msp432_gpio.c, 40 :: 		static uint8_t _getTX_1  ()                         { return DIO_P3IN.B3;   }
0x1BD8	0xB081    SUB	SP, SP, #4
0x1BDA	0x4802    LDR	R0, [PC, #8]
0x1BDC	0x7800    LDRB	R0, [R0, #0]
L_end__getTX_1:
0x1BDE	0xB001    ADD	SP, SP, #4
0x1BE0	0x4770    BX	LR
0x1BE2	0xBF00    NOP
0x1BE4	0x840C4209  	DIO_P3IN+0
; end of clicker_2_MSP432__getTX_1
clicker_2_MSP432__getSCL_1:
;__c2_msp432_gpio.c, 41 :: 		static uint8_t _getSCL_1 ()                         { return DIO_P6IN.B5;   }
0x1BE8	0xB081    SUB	SP, SP, #4
0x1BEA	0x4802    LDR	R0, [PC, #8]
0x1BEC	0x7800    LDRB	R0, [R0, #0]
L_end__getSCL_1:
0x1BEE	0xB001    ADD	SP, SP, #4
0x1BF0	0x4770    BX	LR
0x1BF2	0xBF00    NOP
0x1BF4	0x88344209  	DIO_P6IN+0
; end of clicker_2_MSP432__getSCL_1
clicker_2_MSP432__getSDA_1:
;__c2_msp432_gpio.c, 42 :: 		static uint8_t _getSDA_1 ()                         { return DIO_P6IN.B4;   }
0x1BF8	0xB081    SUB	SP, SP, #4
0x1BFA	0x4802    LDR	R0, [PC, #8]
0x1BFC	0x7800    LDRB	R0, [R0, #0]
L_end__getSDA_1:
0x1BFE	0xB001    ADD	SP, SP, #4
0x1C00	0x4770    BX	LR
0x1C02	0xBF00    NOP
0x1C04	0x88304209  	DIO_P6IN+0
; end of clicker_2_MSP432__getSDA_1
clicker_2_MSP432__getAN_2:
;__c2_msp432_gpio.c, 56 :: 		static uint8_t _getAN_2  ()                         { return DIO_P4IN.B3;   }
0x1BC8	0xB081    SUB	SP, SP, #4
0x1BCA	0x4802    LDR	R0, [PC, #8]
0x1BCC	0x7800    LDRB	R0, [R0, #0]
L_end__getAN_2:
0x1BCE	0xB001    ADD	SP, SP, #4
0x1BD0	0x4770    BX	LR
0x1BD2	0xBF00    NOP
0x1BD4	0x842C4209  	DIO_P4IN+0
; end of clicker_2_MSP432__getAN_2
clicker_2_MSP432__getRST_2:
;__c2_msp432_gpio.c, 57 :: 		static uint8_t _getRST_2 ()                         { return DIO_P6IN.B7;   }
0x1B98	0xB081    SUB	SP, SP, #4
0x1B9A	0x4802    LDR	R0, [PC, #8]
0x1B9C	0x7800    LDRB	R0, [R0, #0]
L_end__getRST_2:
0x1B9E	0xB001    ADD	SP, SP, #4
0x1BA0	0x4770    BX	LR
0x1BA2	0xBF00    NOP
0x1BA4	0x883C4209  	DIO_P6IN+0
; end of clicker_2_MSP432__getRST_2
clicker_2_MSP432__getCS_2:
;__c2_msp432_gpio.c, 58 :: 		static uint8_t _getCS_2  ()                         { return DIO_P5IN.B2;   }
0x1BA8	0xB081    SUB	SP, SP, #4
0x1BAA	0x4802    LDR	R0, [PC, #8]
0x1BAC	0x7800    LDRB	R0, [R0, #0]
L_end__getCS_2:
0x1BAE	0xB001    ADD	SP, SP, #4
0x1BB0	0x4770    BX	LR
0x1BB2	0xBF00    NOP
0x1BB4	0x88084209  	DIO_P5IN+0
; end of clicker_2_MSP432__getCS_2
clicker_2_MSP432__getSCK_2:
;__c2_msp432_gpio.c, 59 :: 		static uint8_t _getSCK_2 ()                         { return DIO_P1IN.B5;   }
0x1BB8	0xB081    SUB	SP, SP, #4
0x1BBA	0x4802    LDR	R0, [PC, #8]
0x1BBC	0x7800    LDRB	R0, [R0, #0]
L_end__getSCK_2:
0x1BBE	0xB001    ADD	SP, SP, #4
0x1BC0	0x4770    BX	LR
0x1BC2	0xBF00    NOP
0x1BC4	0x80144209  	DIO_P1IN+0
; end of clicker_2_MSP432__getSCK_2
clicker_2_MSP432__getMISO_2:
;__c2_msp432_gpio.c, 60 :: 		static uint8_t _getMISO_2()                         { return DIO_P1IN.B7;   }
0x245C	0xB081    SUB	SP, SP, #4
0x245E	0x4802    LDR	R0, [PC, #8]
0x2460	0x7800    LDRB	R0, [R0, #0]
L_end__getMISO_2:
0x2462	0xB001    ADD	SP, SP, #4
0x2464	0x4770    BX	LR
0x2466	0xBF00    NOP
0x2468	0x801C4209  	DIO_P1IN+0
; end of clicker_2_MSP432__getMISO_2
clicker_2_MSP432__getMOSI_2:
;__c2_msp432_gpio.c, 61 :: 		static uint8_t _getMOSI_2()                         { return DIO_P1IN.B6;   }
0x25FC	0xB081    SUB	SP, SP, #4
0x25FE	0x4802    LDR	R0, [PC, #8]
0x2600	0x7800    LDRB	R0, [R0, #0]
L_end__getMOSI_2:
0x2602	0xB001    ADD	SP, SP, #4
0x2604	0x4770    BX	LR
0x2606	0xBF00    NOP
0x2608	0x80184209  	DIO_P1IN+0
; end of clicker_2_MSP432__getMOSI_2
clicker_2_MSP432__getPWM_2:
;__c2_msp432_gpio.c, 62 :: 		static uint8_t _getPWM_2 ()                         { return DIO_P2IN.B6;   }
0x25EC	0xB081    SUB	SP, SP, #4
0x25EE	0x4802    LDR	R0, [PC, #8]
0x25F0	0x7800    LDRB	R0, [R0, #0]
L_end__getPWM_2:
0x25F2	0xB001    ADD	SP, SP, #4
0x25F4	0x4770    BX	LR
0x25F6	0xBF00    NOP
0x25F8	0x80384209  	DIO_P2IN+0
; end of clicker_2_MSP432__getPWM_2
clicker_2_MSP432__getINT_2:
;__c2_msp432_gpio.c, 63 :: 		static uint8_t _getINT_2 ()                         { return DIO_P6IN.B6;   }
0x261C	0xB081    SUB	SP, SP, #4
0x261E	0x4802    LDR	R0, [PC, #8]
0x2620	0x7800    LDRB	R0, [R0, #0]
L_end__getINT_2:
0x2622	0xB001    ADD	SP, SP, #4
0x2624	0x4770    BX	LR
0x2626	0xBF00    NOP
0x2628	0x88384209  	DIO_P6IN+0
; end of clicker_2_MSP432__getINT_2
clicker_2_MSP432__getRX_2:
;__c2_msp432_gpio.c, 64 :: 		static uint8_t _getRX_2  ()                         { return DIO_P2IN.B2;   }
0x260C	0xB081    SUB	SP, SP, #4
0x260E	0x4802    LDR	R0, [PC, #8]
0x2610	0x7800    LDRB	R0, [R0, #0]
L_end__getRX_2:
0x2612	0xB001    ADD	SP, SP, #4
0x2614	0x4770    BX	LR
0x2616	0xBF00    NOP
0x2618	0x80284209  	DIO_P2IN+0
; end of clicker_2_MSP432__getRX_2
clicker_2_MSP432__getTX_2:
;__c2_msp432_gpio.c, 65 :: 		static uint8_t _getTX_2  ()                         { return DIO_P2IN.B3;   }
0x25BC	0xB081    SUB	SP, SP, #4
0x25BE	0x4802    LDR	R0, [PC, #8]
0x25C0	0x7800    LDRB	R0, [R0, #0]
L_end__getTX_2:
0x25C2	0xB001    ADD	SP, SP, #4
0x25C4	0x4770    BX	LR
0x25C6	0xBF00    NOP
0x25C8	0x802C4209  	DIO_P2IN+0
; end of clicker_2_MSP432__getTX_2
clicker_2_MSP432__getSCL_2:
;__c2_msp432_gpio.c, 66 :: 		static uint8_t _getSCL_2 ()                         { return DIO_P6IN.B5;   }
0x25AC	0xB081    SUB	SP, SP, #4
0x25AE	0x4802    LDR	R0, [PC, #8]
0x25B0	0x7800    LDRB	R0, [R0, #0]
L_end__getSCL_2:
0x25B2	0xB001    ADD	SP, SP, #4
0x25B4	0x4770    BX	LR
0x25B6	0xBF00    NOP
0x25B8	0x88344209  	DIO_P6IN+0
; end of clicker_2_MSP432__getSCL_2
clicker_2_MSP432__getSDA_2:
;__c2_msp432_gpio.c, 67 :: 		static uint8_t _getSDA_2 ()                         { return DIO_P6IN.B4;   }
0x25DC	0xB081    SUB	SP, SP, #4
0x25DE	0x4802    LDR	R0, [PC, #8]
0x25E0	0x7800    LDRB	R0, [R0, #0]
L_end__getSDA_2:
0x25E2	0xB001    ADD	SP, SP, #4
0x25E4	0x4770    BX	LR
0x25E6	0xBF00    NOP
0x25E8	0x88304209  	DIO_P6IN+0
; end of clicker_2_MSP432__getSDA_2
clicker_2_MSP432__getAN_3:
;__c2_msp432_gpio.c, 81 :: 		static uint8_t _getAN_3  ()                    { return DIO_P5IN.B1;   }
0x25CC	0xB081    SUB	SP, SP, #4
0x25CE	0x4802    LDR	R0, [PC, #8]
0x25D0	0x7800    LDRB	R0, [R0, #0]
L_end__getAN_3:
0x25D2	0xB001    ADD	SP, SP, #4
0x25D4	0x4770    BX	LR
0x25D6	0xBF00    NOP
0x25D8	0x88044209  	DIO_P5IN+0
; end of clicker_2_MSP432__getAN_3
clicker_2_MSP432__getRST_3:
;__c2_msp432_gpio.c, 82 :: 		static uint8_t _getRST_3 ()                    { return DIO_P4IN.B7;   }
0x267C	0xB081    SUB	SP, SP, #4
0x267E	0x4802    LDR	R0, [PC, #8]
0x2680	0x7800    LDRB	R0, [R0, #0]
L_end__getRST_3:
0x2682	0xB001    ADD	SP, SP, #4
0x2684	0x4770    BX	LR
0x2686	0xBF00    NOP
0x2688	0x843C4209  	DIO_P4IN+0
; end of clicker_2_MSP432__getRST_3
clicker_2_MSP432__getCS_3:
;__c2_msp432_gpio.c, 83 :: 		static uint8_t _getCS_3  ()                    { return DIO_P4IN.B6;   }
0x266C	0xB081    SUB	SP, SP, #4
0x266E	0x4802    LDR	R0, [PC, #8]
0x2670	0x7800    LDRB	R0, [R0, #0]
L_end__getCS_3:
0x2672	0xB001    ADD	SP, SP, #4
0x2674	0x4770    BX	LR
0x2676	0xBF00    NOP
0x2678	0x84384209  	DIO_P4IN+0
; end of clicker_2_MSP432__getCS_3
clicker_2_MSP432__getSCK_3:
;__c2_msp432_gpio.c, 84 :: 		static uint8_t _getSCK_3 ()                    { return DIO_P9IN.B5;   }
0x269C	0xB081    SUB	SP, SP, #4
0x269E	0x4802    LDR	R0, [PC, #8]
0x26A0	0x7800    LDRB	R0, [R0, #0]
L_end__getSCK_3:
0x26A2	0xB001    ADD	SP, SP, #4
0x26A4	0x4770    BX	LR
0x26A6	0xBF00    NOP
0x26A8	0x90144209  	DIO_P9IN+0
; end of clicker_2_MSP432__getSCK_3
clicker_2_MSP432__getMISO_3:
;__c2_msp432_gpio.c, 85 :: 		static uint8_t _getMISO_3()                    { return DIO_P9IN.B6;   }
0x268C	0xB081    SUB	SP, SP, #4
0x268E	0x4802    LDR	R0, [PC, #8]
0x2690	0x7800    LDRB	R0, [R0, #0]
L_end__getMISO_3:
0x2692	0xB001    ADD	SP, SP, #4
0x2694	0x4770    BX	LR
0x2696	0xBF00    NOP
0x2698	0x90184209  	DIO_P9IN+0
; end of clicker_2_MSP432__getMISO_3
clicker_2_MSP432__getMOSI_3:
;__c2_msp432_gpio.c, 86 :: 		static uint8_t _getMOSI_3()                    { return DIO_P9IN.B7;   }
0x263C	0xB081    SUB	SP, SP, #4
0x263E	0x4802    LDR	R0, [PC, #8]
0x2640	0x7800    LDRB	R0, [R0, #0]
L_end__getMOSI_3:
0x2642	0xB001    ADD	SP, SP, #4
0x2644	0x4770    BX	LR
0x2646	0xBF00    NOP
0x2648	0x901C4209  	DIO_P9IN+0
; end of clicker_2_MSP432__getMOSI_3
clicker_2_MSP432__getPWM_3:
;__c2_msp432_gpio.c, 87 :: 		static uint8_t _getPWM_3 ()                    { return DIO_P7IN.B5;   }
0x262C	0xB081    SUB	SP, SP, #4
0x262E	0x4802    LDR	R0, [PC, #8]
0x2630	0x7800    LDRB	R0, [R0, #0]
L_end__getPWM_3:
0x2632	0xB001    ADD	SP, SP, #4
0x2634	0x4770    BX	LR
0x2636	0xBF00    NOP
0x2638	0x8C144209  	DIO_P7IN+0
; end of clicker_2_MSP432__getPWM_3
clicker_2_MSP432__getINT_3:
;__c2_msp432_gpio.c, 88 :: 		static uint8_t _getINT_3 ()                    { return DIO_P2IN.B0;   }
0x265C	0xB081    SUB	SP, SP, #4
0x265E	0x4802    LDR	R0, [PC, #8]
0x2660	0x7800    LDRB	R0, [R0, #0]
L_end__getINT_3:
0x2662	0xB001    ADD	SP, SP, #4
0x2664	0x4770    BX	LR
0x2666	0xBF00    NOP
0x2668	0x80204209  	DIO_P2IN+0
; end of clicker_2_MSP432__getINT_3
clicker_2_MSP432__getRX_3:
;__c2_msp432_gpio.c, 89 :: 		static uint8_t _getRX_3  ()                    { return DIO_P2IN.B2;   }
0x264C	0xB081    SUB	SP, SP, #4
0x264E	0x4802    LDR	R0, [PC, #8]
0x2650	0x7800    LDRB	R0, [R0, #0]
L_end__getRX_3:
0x2652	0xB001    ADD	SP, SP, #4
0x2654	0x4770    BX	LR
0x2656	0xBF00    NOP
0x2658	0x80284209  	DIO_P2IN+0
; end of clicker_2_MSP432__getRX_3
clicker_2_MSP432__getTX_3:
;__c2_msp432_gpio.c, 90 :: 		static uint8_t _getTX_3  ()                    { return DIO_P2IN.B3;   }
0x24BC	0xB081    SUB	SP, SP, #4
0x24BE	0x4802    LDR	R0, [PC, #8]
0x24C0	0x7800    LDRB	R0, [R0, #0]
L_end__getTX_3:
0x24C2	0xB001    ADD	SP, SP, #4
0x24C4	0x4770    BX	LR
0x24C6	0xBF00    NOP
0x24C8	0x802C4209  	DIO_P2IN+0
; end of clicker_2_MSP432__getTX_3
clicker_2_MSP432__getSCL_3:
;__c2_msp432_gpio.c, 91 :: 		static uint8_t _getSCL_3 ()                    { return DIO_P3IN.B7;   }
0x24AC	0xB081    SUB	SP, SP, #4
0x24AE	0x4802    LDR	R0, [PC, #8]
0x24B0	0x7800    LDRB	R0, [R0, #0]
L_end__getSCL_3:
0x24B2	0xB001    ADD	SP, SP, #4
0x24B4	0x4770    BX	LR
0x24B6	0xBF00    NOP
0x24B8	0x841C4209  	DIO_P3IN+0
; end of clicker_2_MSP432__getSCL_3
clicker_2_MSP432__getSDA_3:
;__c2_msp432_gpio.c, 92 :: 		static uint8_t _getSDA_3 ()                    { return DIO_P3IN.B6;   }
0x24DC	0xB081    SUB	SP, SP, #4
0x24DE	0x4802    LDR	R0, [PC, #8]
0x24E0	0x7800    LDRB	R0, [R0, #0]
L_end__getSDA_3:
0x24E2	0xB001    ADD	SP, SP, #4
0x24E4	0x4770    BX	LR
0x24E6	0xBF00    NOP
0x24E8	0x84184209  	DIO_P3IN+0
; end of clicker_2_MSP432__getSDA_3
clicker_2_MSP432__getAN_4:
;__c2_msp432_gpio.c, 106 :: 		static uint8_t _getAN_4  ()                    { return DIO_P9IN.B3;   }
0x24CC	0xB081    SUB	SP, SP, #4
0x24CE	0x4802    LDR	R0, [PC, #8]
0x24D0	0x7800    LDRB	R0, [R0, #0]
L_end__getAN_4:
0x24D2	0xB001    ADD	SP, SP, #4
0x24D4	0x4770    BX	LR
0x24D6	0xBF00    NOP
0x24D8	0x900C4209  	DIO_P9IN+0
; end of clicker_2_MSP432__getAN_4
clicker_2_MSP432__getRST_4:
;__c2_msp432_gpio.c, 107 :: 		static uint8_t _getRST_4 ()                    { return DIO_P4IN.B5;   }
0x247C	0xB081    SUB	SP, SP, #4
0x247E	0x4802    LDR	R0, [PC, #8]
0x2480	0x7800    LDRB	R0, [R0, #0]
L_end__getRST_4:
0x2482	0xB001    ADD	SP, SP, #4
0x2484	0x4770    BX	LR
0x2486	0xBF00    NOP
0x2488	0x84344209  	DIO_P4IN+0
; end of clicker_2_MSP432__getRST_4
clicker_2_MSP432__getCS_4:
;__c2_msp432_gpio.c, 108 :: 		static uint8_t _getCS_4  ()                    { return DIO_P4IN.B4;   }
0x246C	0xB081    SUB	SP, SP, #4
0x246E	0x4802    LDR	R0, [PC, #8]
0x2470	0x7800    LDRB	R0, [R0, #0]
L_end__getCS_4:
0x2472	0xB001    ADD	SP, SP, #4
0x2474	0x4770    BX	LR
0x2476	0xBF00    NOP
0x2478	0x84304209  	DIO_P4IN+0
; end of clicker_2_MSP432__getCS_4
clicker_2_MSP432__getSCK_4:
;__c2_msp432_gpio.c, 109 :: 		static uint8_t _getSCK_4 ()                    { return DIO_P9IN.B5;   }
0x249C	0xB081    SUB	SP, SP, #4
0x249E	0x4802    LDR	R0, [PC, #8]
0x24A0	0x7800    LDRB	R0, [R0, #0]
L_end__getSCK_4:
0x24A2	0xB001    ADD	SP, SP, #4
0x24A4	0x4770    BX	LR
0x24A6	0xBF00    NOP
0x24A8	0x90144209  	DIO_P9IN+0
; end of clicker_2_MSP432__getSCK_4
clicker_2_MSP432__getMISO_4:
;__c2_msp432_gpio.c, 110 :: 		static uint8_t _getMISO_4()                    { return DIO_P9IN.B6;   }
0x248C	0xB081    SUB	SP, SP, #4
0x248E	0x4802    LDR	R0, [PC, #8]
0x2490	0x7800    LDRB	R0, [R0, #0]
L_end__getMISO_4:
0x2492	0xB001    ADD	SP, SP, #4
0x2494	0x4770    BX	LR
0x2496	0xBF00    NOP
0x2498	0x90184209  	DIO_P9IN+0
; end of clicker_2_MSP432__getMISO_4
clicker_2_MSP432__getMOSI_4:
;__c2_msp432_gpio.c, 111 :: 		static uint8_t _getMOSI_4()                    { return DIO_P9IN.B7;   }
0x257C	0xB081    SUB	SP, SP, #4
0x257E	0x4802    LDR	R0, [PC, #8]
0x2580	0x7800    LDRB	R0, [R0, #0]
L_end__getMOSI_4:
0x2582	0xB001    ADD	SP, SP, #4
0x2584	0x4770    BX	LR
0x2586	0xBF00    NOP
0x2588	0x901C4209  	DIO_P9IN+0
; end of clicker_2_MSP432__getMOSI_4
clicker_2_MSP432__getPWM_4:
;__c2_msp432_gpio.c, 112 :: 		static uint8_t _getPWM_4 ()                    { return DIO_P2IN.B5;   }
0x256C	0xB081    SUB	SP, SP, #4
0x256E	0x4802    LDR	R0, [PC, #8]
0x2570	0x7800    LDRB	R0, [R0, #0]
L_end__getPWM_4:
0x2572	0xB001    ADD	SP, SP, #4
0x2574	0x4770    BX	LR
0x2576	0xBF00    NOP
0x2578	0x80344209  	DIO_P2IN+0
; end of clicker_2_MSP432__getPWM_4
clicker_2_MSP432__getINT_4:
;__c2_msp432_gpio.c, 113 :: 		static uint8_t _getINT_4 ()                    { return DIO_P2IN.B1;   }
0x259C	0xB081    SUB	SP, SP, #4
0x259E	0x4802    LDR	R0, [PC, #8]
0x25A0	0x7800    LDRB	R0, [R0, #0]
L_end__getINT_4:
0x25A2	0xB001    ADD	SP, SP, #4
0x25A4	0x4770    BX	LR
0x25A6	0xBF00    NOP
0x25A8	0x80244209  	DIO_P2IN+0
; end of clicker_2_MSP432__getINT_4
clicker_2_MSP432__getRX_4:
;__c2_msp432_gpio.c, 114 :: 		static uint8_t _getRX_4  ()                    { return DIO_P2IN.B2;   }
0x258C	0xB081    SUB	SP, SP, #4
0x258E	0x4802    LDR	R0, [PC, #8]
0x2590	0x7800    LDRB	R0, [R0, #0]
L_end__getRX_4:
0x2592	0xB001    ADD	SP, SP, #4
0x2594	0x4770    BX	LR
0x2596	0xBF00    NOP
0x2598	0x80284209  	DIO_P2IN+0
; end of clicker_2_MSP432__getRX_4
clicker_2_MSP432__getTX_4:
;__c2_msp432_gpio.c, 115 :: 		static uint8_t _getTX_4  ()                    { return DIO_P2IN.B3;   }
0x24FC	0xB081    SUB	SP, SP, #4
0x24FE	0x4802    LDR	R0, [PC, #8]
0x2500	0x7800    LDRB	R0, [R0, #0]
L_end__getTX_4:
0x2502	0xB001    ADD	SP, SP, #4
0x2504	0x4770    BX	LR
0x2506	0xBF00    NOP
0x2508	0x802C4209  	DIO_P2IN+0
; end of clicker_2_MSP432__getTX_4
clicker_2_MSP432__getSCL_4:
;__c2_msp432_gpio.c, 116 :: 		static uint8_t _getSCL_4 ()                    { return DIO_P3IN.B7;   }
0x24EC	0xB081    SUB	SP, SP, #4
0x24EE	0x4802    LDR	R0, [PC, #8]
0x24F0	0x7800    LDRB	R0, [R0, #0]
L_end__getSCL_4:
0x24F2	0xB001    ADD	SP, SP, #4
0x24F4	0x4770    BX	LR
0x24F6	0xBF00    NOP
0x24F8	0x841C4209  	DIO_P3IN+0
; end of clicker_2_MSP432__getSCL_4
clicker_2_MSP432__getSDA_4:
;__c2_msp432_gpio.c, 117 :: 		static uint8_t _getSDA_4 ()                    { return DIO_P3IN.B6;   }
0x255C	0xB081    SUB	SP, SP, #4
0x255E	0x4802    LDR	R0, [PC, #8]
0x2560	0x7800    LDRB	R0, [R0, #0]
L_end__getSDA_4:
0x2562	0xB001    ADD	SP, SP, #4
0x2564	0x4770    BX	LR
0x2566	0xBF00    NOP
0x2568	0x84184209  	DIO_P3IN+0
; end of clicker_2_MSP432__getSDA_4
_gyro2_getAxisraw:
;__gyro2_driver.c, 228 :: 		void gyro2_getAxisraw(int16_t *axisData)
0x2C60	0xB086    SUB	SP, SP, #24
0x2C62	0xF8CDE000  STR	LR, [SP, #0]
0x2C66	0x9005    STR	R0, [SP, #20]
;__gyro2_driver.c, 234 :: 		addrData[0] = GYRO2_OUT_X_MSB;
0x2C68	0xF10D020B  ADD	R2, SP, #11
0x2C6C	0x493C    LDR	R1, [PC, #240]
0x2C6E	0x7809    LDRB	R1, [R1, #0]
0x2C70	0x7011    STRB	R1, [R2, #0]
;__gyro2_driver.c, 235 :: 		if (dirverUsed == GYRO2_SPI_PROTO)
0x2C72	0x493C    LDR	R1, [PC, #240]
0x2C74	0x780A    LDRB	R2, [R1, #0]
0x2C76	0x493C    LDR	R1, [PC, #240]
0x2C78	0x7809    LDRB	R1, [R1, #0]
0x2C7A	0x4291    CMP	R1, R2
0x2C7C	0xD119    BNE	L_gyro2_getAxisraw10
;__gyro2_driver.c, 237 :: 		addrData[0] |= 0x80;
0x2C7E	0xF10D020B  ADD	R2, SP, #11
0x2C82	0x7811    LDRB	R1, [R2, #0]
0x2C84	0xF0410180  ORR	R1, R1, #128
0x2C88	0x7011    STRB	R1, [R2, #0]
;__gyro2_driver.c, 238 :: 		hal_gpio_csSet(0);
0x2C8A	0x2000    MOVS	R0, #0
0x2C8C	0x4C37    LDR	R4, [PC, #220]
0x2C8E	0x6824    LDR	R4, [R4, #0]
0x2C90	0x47A0    BLX	R4
;__gyro2_driver.c, 239 :: 		hal_spiTransfer(&addrData[0],&reg_data[0],7);
0x2C92	0xAA01    ADD	R2, SP, #4
0x2C94	0xF10D010B  ADD	R1, SP, #11
0x2C98	0x4608    MOV	R0, R1
0x2C9A	0x4611    MOV	R1, R2
0x2C9C	0x2207    MOVS	R2, #7
0x2C9E	0xF7FEFDFF  BL	__gyro2_driver_hal_spiTransfer+0
;__gyro2_driver.c, 240 :: 		hal_gpio_csSet(1);
0x2CA2	0x2001    MOVS	R0, #1
0x2CA4	0x4C31    LDR	R4, [PC, #196]
0x2CA6	0x6824    LDR	R4, [R4, #0]
0x2CA8	0x47A0    BLX	R4
;__gyro2_driver.c, 241 :: 		addOne = 1;
0x2CAA	0x2101    MOVS	R1, #1
0x2CAC	0xF88D1012  STRB	R1, [SP, #18]
;__gyro2_driver.c, 242 :: 		}
0x2CB0	0xE01C    B	L_gyro2_getAxisraw11
L_gyro2_getAxisraw10:
;__gyro2_driver.c, 243 :: 		else if (dirverUsed == GYRO2_I2C_PROTO)
0x2CB2	0x492F    LDR	R1, [PC, #188]
0x2CB4	0x780A    LDRB	R2, [R1, #0]
0x2CB6	0x492C    LDR	R1, [PC, #176]
0x2CB8	0x7809    LDRB	R1, [R1, #0]
0x2CBA	0x4291    CMP	R1, R2
0x2CBC	0xD116    BNE	L_gyro2_getAxisraw12
;__gyro2_driver.c, 245 :: 		hal_i2cStart();
0x2CBE	0xF7FEFDB1  BL	__gyro2_driver_hal_i2cStart+0
;__gyro2_driver.c, 246 :: 		hal_i2cWrite( _slaveAddress, &reg_data[0], 1, END_MODE_RESTART );
0x2CC2	0xAA01    ADD	R2, SP, #4
0x2CC4	0x492B    LDR	R1, [PC, #172]
0x2CC6	0x7809    LDRB	R1, [R1, #0]
0x2CC8	0x2300    MOVS	R3, #0
0x2CCA	0xB2C8    UXTB	R0, R1
0x2CCC	0x4611    MOV	R1, R2
0x2CCE	0x2201    MOVS	R2, #1
0x2CD0	0xF7FEFD94  BL	__gyro2_driver_hal_i2cWrite+0
;__gyro2_driver.c, 247 :: 		hal_i2cRead( _slaveAddress, &reg_data[0], 6, END_MODE_STOP );
0x2CD4	0xAA01    ADD	R2, SP, #4
0x2CD6	0x4927    LDR	R1, [PC, #156]
0x2CD8	0x7809    LDRB	R1, [R1, #0]
0x2CDA	0x2301    MOVS	R3, #1
0x2CDC	0xB2C8    UXTB	R0, R1
0x2CDE	0x4611    MOV	R1, R2
0x2CE0	0x2206    MOVS	R2, #6
0x2CE2	0xF7FEFDCB  BL	__gyro2_driver_hal_i2cRead+0
;__gyro2_driver.c, 248 :: 		addOne = 0;
0x2CE6	0x2100    MOVS	R1, #0
0x2CE8	0xF88D1012  STRB	R1, [SP, #18]
;__gyro2_driver.c, 249 :: 		}
L_gyro2_getAxisraw12:
L_gyro2_getAxisraw11:
;__gyro2_driver.c, 250 :: 		axisData[0] = (uint16_t)(reg_data[0+addOne]<<8) | reg_data[1+addOne];
0x2CEC	0xF89D1012  LDRB	R1, [SP, #18]
0x2CF0	0xAC01    ADD	R4, SP, #4
0x2CF2	0x1861    ADDS	R1, R4, R1
0x2CF4	0x7809    LDRB	R1, [R1, #0]
0x2CF6	0x020A    LSLS	R2, R1, #8
0x2CF8	0xB292    UXTH	R2, R2
0x2CFA	0xF89D1012  LDRB	R1, [SP, #18]
0x2CFE	0x1C49    ADDS	R1, R1, #1
0x2D00	0xB209    SXTH	R1, R1
0x2D02	0x1861    ADDS	R1, R4, R1
0x2D04	0x7809    LDRB	R1, [R1, #0]
0x2D06	0x430A    ORRS	R2, R1
0x2D08	0x9905    LDR	R1, [SP, #20]
0x2D0A	0x800A    STRH	R2, [R1, #0]
;__gyro2_driver.c, 251 :: 		axisData[1] = (uint16_t)(reg_data[2+addOne]<<8) | reg_data[3+addOne];
0x2D0C	0x9905    LDR	R1, [SP, #20]
0x2D0E	0x1C8B    ADDS	R3, R1, #2
0x2D10	0xF89D1012  LDRB	R1, [SP, #18]
0x2D14	0x1C89    ADDS	R1, R1, #2
0x2D16	0xB209    SXTH	R1, R1
0x2D18	0x1861    ADDS	R1, R4, R1
0x2D1A	0x7809    LDRB	R1, [R1, #0]
0x2D1C	0x020A    LSLS	R2, R1, #8
0x2D1E	0xB292    UXTH	R2, R2
0x2D20	0xF89D1012  LDRB	R1, [SP, #18]
0x2D24	0x1CC9    ADDS	R1, R1, #3
0x2D26	0xB209    SXTH	R1, R1
0x2D28	0x1861    ADDS	R1, R4, R1
0x2D2A	0x7809    LDRB	R1, [R1, #0]
0x2D2C	0xEA420101  ORR	R1, R2, R1, LSL #0
0x2D30	0x8019    STRH	R1, [R3, #0]
;__gyro2_driver.c, 252 :: 		axisData[2] = (uint16_t)(reg_data[4+addOne]<<8) | reg_data[5+addOne];
0x2D32	0x9905    LDR	R1, [SP, #20]
0x2D34	0x1D0B    ADDS	R3, R1, #4
0x2D36	0xF89D1012  LDRB	R1, [SP, #18]
0x2D3A	0x1D09    ADDS	R1, R1, #4
0x2D3C	0xB209    SXTH	R1, R1
0x2D3E	0x1861    ADDS	R1, R4, R1
0x2D40	0x7809    LDRB	R1, [R1, #0]
0x2D42	0x020A    LSLS	R2, R1, #8
0x2D44	0xB292    UXTH	R2, R2
0x2D46	0xF89D1012  LDRB	R1, [SP, #18]
0x2D4A	0x1D49    ADDS	R1, R1, #5
0x2D4C	0xB209    SXTH	R1, R1
0x2D4E	0x1861    ADDS	R1, R4, R1
0x2D50	0x7809    LDRB	R1, [R1, #0]
0x2D52	0xEA420101  ORR	R1, R2, R1, LSL #0
0x2D56	0x8019    STRH	R1, [R3, #0]
;__gyro2_driver.c, 253 :: 		}
L_end_gyro2_getAxisraw:
0x2D58	0xF8DDE000  LDR	LR, [SP, #0]
0x2D5C	0xB006    ADD	SP, SP, #24
0x2D5E	0x4770    BX	LR
0x2D60	0x005A2000  	_GYRO2_OUT_X_MSB+0
0x2D64	0x00532000  	__gyro2_driver_GYRO2_SPI_PROTO+0
0x2D68	0x006D2000  	__gyro2_driver_dirverUsed+0
0x2D6C	0x00A02000  	__gyro2_driver_hal_gpio_csSet+0
0x2D70	0x00542000  	__gyro2_driver_GYRO2_I2C_PROTO+0
0x2D74	0x006E2000  	__gyro2_driver__slaveAddress+0
; end of _gyro2_getAxisraw
_gyro2_calcAxis:
;__gyro2_driver.c, 254 :: 		void gyro2_calcAxis(int16_t *axisData)
; axisData start address is: 0 (R0)
0x313C	0xB081    SUB	SP, SP, #4
; axisData end address is: 0 (R0)
; axisData start address is: 0 (R0)
;__gyro2_driver.c, 256 :: 		axisData[0] = ( axisData[0] * 0.015625 / 88 * 3.0 );
0x313E	0xF9B01000  LDRSH	R1, [R0, #0]
0x3142	0xEE001A90  VMOV	S1, R1
0x3146	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x314A	0xF04F5172  MOV	R1, #1015021568
0x314E	0xEE001A10  VMOV	S0, R1
0x3152	0xEE600A80  VMUL.F32	S1, S1, S0
0x3156	0x4925    LDR	R1, [PC, #148]
0x3158	0xEE001A10  VMOV	S0, R1
0x315C	0xEEC00A80  VDIV.F32	S1, S1, S0
0x3160	0xEEB00A08  VMOV.F32	S0, #3
0x3164	0xEE200A80  VMUL.F32	S0, S1, S0
0x3168	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x316C	0xEE101A10  VMOV	R1, S0
0x3170	0xB209    SXTH	R1, R1
0x3172	0x8001    STRH	R1, [R0, #0]
;__gyro2_driver.c, 257 :: 		axisData[1] = ( axisData[1] * 0.015625 / 88 * 3.0 );
0x3174	0x1C82    ADDS	R2, R0, #2
0x3176	0x1C81    ADDS	R1, R0, #2
0x3178	0xF9B11000  LDRSH	R1, [R1, #0]
0x317C	0xEE001A90  VMOV	S1, R1
0x3180	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x3184	0xF04F5172  MOV	R1, #1015021568
0x3188	0xEE001A10  VMOV	S0, R1
0x318C	0xEE600A80  VMUL.F32	S1, S1, S0
0x3190	0x4916    LDR	R1, [PC, #88]
0x3192	0xEE001A10  VMOV	S0, R1
0x3196	0xEEC00A80  VDIV.F32	S1, S1, S0
0x319A	0xEEB00A08  VMOV.F32	S0, #3
0x319E	0xEE200A80  VMUL.F32	S0, S1, S0
0x31A2	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x31A6	0xEE101A10  VMOV	R1, S0
0x31AA	0xB209    SXTH	R1, R1
0x31AC	0x8011    STRH	R1, [R2, #0]
;__gyro2_driver.c, 258 :: 		axisData[2] = ( axisData[2] * 0.015625 / 88 * 3.0 );
0x31AE	0x1D02    ADDS	R2, R0, #4
0x31B0	0x1D01    ADDS	R1, R0, #4
; axisData end address is: 0 (R0)
0x31B2	0xF9B11000  LDRSH	R1, [R1, #0]
0x31B6	0xEE001A90  VMOV	S1, R1
0x31BA	0xEEF80AE0  VCVT.F32.S32	S1, S1
0x31BE	0xF04F5172  MOV	R1, #1015021568
0x31C2	0xEE001A10  VMOV	S0, R1
0x31C6	0xEE600A80  VMUL.F32	S1, S1, S0
0x31CA	0x4908    LDR	R1, [PC, #32]
0x31CC	0xEE001A10  VMOV	S0, R1
0x31D0	0xEEC00A80  VDIV.F32	S1, S1, S0
0x31D4	0xEEB00A08  VMOV.F32	S0, #3
0x31D8	0xEE200A80  VMUL.F32	S0, S1, S0
0x31DC	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x31E0	0xEE101A10  VMOV	R1, S0
0x31E4	0xB209    SXTH	R1, R1
0x31E6	0x8011    STRH	R1, [R2, #0]
;__gyro2_driver.c, 259 :: 		}
L_end_gyro2_calcAxis:
0x31E8	0xB001    ADD	SP, SP, #4
0x31EA	0x4770    BX	LR
0x31EC	0x000042B0  	#1118830592
; end of _gyro2_calcAxis
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x30CC	0xB081    SUB	SP, SP, #4
0x30CE	0xF8CDE000  STR	LR, [SP, #0]
0x30D2	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x30D4	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x30D6	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x30D8	0x2800    CMP	R0, #0
0x30DA	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x30DC	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x30DE	0x4240    RSBS	R0, R0, #0
0x30E0	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x30E2	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x30E4	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x30E6	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x30E8	0xB298    UXTH	R0, R3
0x30EA	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x30EC	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x30EE	0xF7FFFA0D  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x30F2	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x30F4	0x4634    MOV	R4, R6
0x30F6	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x30F8	0x2900    CMP	R1, #0
0x30FA	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x30FC	0x1863    ADDS	R3, R4, R1
0x30FE	0x1E4A    SUBS	R2, R1, #1
0x3100	0xB292    UXTH	R2, R2
0x3102	0x18A2    ADDS	R2, R4, R2
0x3104	0x7812    LDRB	R2, [R2, #0]
0x3106	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x3108	0x1E49    SUBS	R1, R1, #1
0x310A	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x310C	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x310E	0x2220    MOVS	R2, #32
0x3110	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x3112	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x3114	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x3116	0xB281    UXTH	R1, R0
0x3118	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x311A	0x1842    ADDS	R2, R0, R1
0x311C	0x7812    LDRB	R2, [R2, #0]
0x311E	0x2A20    CMP	R2, #32
0x3120	0xD102    BNE	L_IntToStr42
0x3122	0x1C49    ADDS	R1, R1, #1
0x3124	0xB289    UXTH	R1, R1
0x3126	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x3128	0x1E4A    SUBS	R2, R1, #1
0x312A	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x312C	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x312E	0x222D    MOVS	R2, #45
0x3130	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x3132	0xF8DDE000  LDR	LR, [SP, #0]
0x3136	0xB001    ADD	SP, SP, #4
0x3138	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x250C	0xB081    SUB	SP, SP, #4
0x250E	0x460A    MOV	R2, R1
0x2510	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x2512	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x2514	0xB28D    UXTH	R5, R1
0x2516	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x2518	0x2805    CMP	R0, #5
0x251A	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x251C	0x180B    ADDS	R3, R1, R0
0x251E	0x2220    MOVS	R2, #32
0x2520	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x2522	0x1C40    ADDS	R0, R0, #1
0x2524	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x2526	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x2528	0x180B    ADDS	R3, R1, R0
0x252A	0x2200    MOVS	R2, #0
0x252C	0x701A    STRB	R2, [R3, #0]
0x252E	0x1E40    SUBS	R0, R0, #1
0x2530	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x2532	0x180C    ADDS	R4, R1, R0
0x2534	0x230A    MOVS	R3, #10
0x2536	0xFBB5F2F3  UDIV	R2, R5, R3
0x253A	0xFB035212  MLS	R2, R3, R2, R5
0x253E	0xB292    UXTH	R2, R2
0x2540	0x3230    ADDS	R2, #48
0x2542	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x2544	0x220A    MOVS	R2, #10
0x2546	0xFBB5F2F2  UDIV	R2, R5, R2
0x254A	0xB292    UXTH	R2, R2
0x254C	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x254E	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x2550	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x2552	0x1E40    SUBS	R0, R0, #1
0x2554	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x2556	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x2558	0xB001    ADD	SP, SP, #4
0x255A	0x4770    BX	LR
; end of _WordToStr
_Ltrim:
;__Lib_Conversions.c, 531 :: 		
; string start address is: 0 (R0)
0x3238	0xB081    SUB	SP, SP, #4
0x323A	0x4601    MOV	R1, R0
; string end address is: 0 (R0)
; string start address is: 4 (R1)
;__Lib_Conversions.c, 535 :: 		
; trimmed start address is: 20 (R5)
0x323C	0xF2400500  MOVW	R5, #0
0x3240	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 536 :: 		
; original start address is: 0 (R0)
0x3242	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 537 :: 		
; p start address is: 16 (R4)
0x3244	0x460C    MOV	R4, R1
; string end address is: 4 (R1)
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
0x3246	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 538 :: 		
0x3248	0xE7FF    B	L_Ltrim111
L__Ltrim175:
;__Lib_Conversions.c, 544 :: 		
;__Lib_Conversions.c, 538 :: 		
L_Ltrim111:
;__Lib_Conversions.c, 539 :: 		
; p start address is: 16 (R4)
; string start address is: 12 (R3)
; original start address is: 0 (R0)
; trimmed start address is: 20 (R5)
; string start address is: 12 (R3)
; string end address is: 12 (R3)
0x324A	0x7801    LDRB	R1, [R0, #0]
0x324C	0x2920    CMP	R1, #32
0x324E	0xD101    BNE	L__Ltrim174
; string end address is: 12 (R3)
; string start address is: 12 (R3)
0x3250	0xB905    CBNZ	R5, L__Ltrim173
; trimmed end address is: 20 (R5)
0x3252	0xE004    B	L_Ltrim116
L__Ltrim174:
L__Ltrim173:
;__Lib_Conversions.c, 540 :: 		
; trimmed start address is: 20 (R5)
0x3254	0x2501    MOVS	R5, #1
0x3256	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 541 :: 		
0x3258	0x7801    LDRB	R1, [R0, #0]
0x325A	0x7021    STRB	R1, [R4, #0]
0x325C	0x1C64    ADDS	R4, R4, #1
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
;__Lib_Conversions.c, 542 :: 		
L_Ltrim116:
;__Lib_Conversions.c, 544 :: 		
; p start address is: 16 (R4)
; trimmed start address is: 20 (R5)
0x325E	0x4602    MOV	R2, R0
0x3260	0x1C40    ADDS	R0, R0, #1
0x3262	0x7811    LDRB	R1, [R2, #0]
0x3264	0x2900    CMP	R1, #0
0x3266	0xD1F0    BNE	L__Ltrim175
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
;__Lib_Conversions.c, 545 :: 		
0x3268	0x4618    MOV	R0, R3
; string end address is: 12 (R3)
;__Lib_Conversions.c, 546 :: 		
L_end_Ltrim:
0x326A	0xB001    ADD	SP, SP, #4
0x326C	0x4770    BX	LR
; end of _Ltrim
__Lib_System_MSP432P_InitialSetUpRCCRCC2:
;__Lib_System_MSP432P.c, 344 :: 		
0x3580	0xB083    SUB	SP, SP, #12
0x3582	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_MSP432P.c, 348 :: 		
; ulCSCTL0 start address is: 12 (R3)
0x3586	0x4B37    LDR	R3, [PC, #220]
;__Lib_System_MSP432P.c, 349 :: 		
; ulCSCTL1 start address is: 16 (R4)
0x3588	0x4C37    LDR	R4, [PC, #220]
;__Lib_System_MSP432P.c, 350 :: 		
; ulCSCTL2 start address is: 20 (R5)
0x358A	0x4D38    LDR	R5, [PC, #224]
;__Lib_System_MSP432P.c, 351 :: 		
; ulWDTCTL start address is: 24 (R6)
0x358C	0x4E38    LDR	R6, [PC, #224]
;__Lib_System_MSP432P.c, 352 :: 		
; ulFLCTL_BANK0_RDCTL start address is: 28 (R7)
0x358E	0x4F39    LDR	R7, [PC, #228]
;__Lib_System_MSP432P.c, 354 :: 		
; Fosc_kHz start address is: 0 (R0)
0x3590	0x4839    LDR	R0, [PC, #228]
; Fosc_kHz end address is: 0 (R0)
;__Lib_System_MSP432P.c, 356 :: 		
0x3592	0xF6452180  MOVW	R1, #23168
0x3596	0x4839    LDR	R0, [PC, #228]
0x3598	0x8001    STRH	R1, [R0, #0]
;__Lib_System_MSP432P.c, 359 :: 		
0x359A	0xF0040007  AND	R0, R4, #7
0x359E	0x2805    CMP	R0, #5
0x35A0	0xD004    BEQ	L___Lib_System_MSP432P_InitialSetUpRCCRCC269
0x35A2	0xF0040070  AND	R0, R4, #112
0x35A6	0x2850    CMP	R0, #80
0x35A8	0xD000    BEQ	L___Lib_System_MSP432P_InitialSetUpRCCRCC268
0x35AA	0xE00B    B	L___Lib_System_MSP432P_InitialSetUpRCCRCC230
L___Lib_System_MSP432P_InitialSetUpRCCRCC269:
L___Lib_System_MSP432P_InitialSetUpRCCRCC268:
;__Lib_System_MSP432P.c, 360 :: 		
0x35AC	0x2201    MOVS	R2, #1
0x35AE	0xB252    SXTB	R2, R2
0x35B0	0x4833    LDR	R0, [PC, #204]
0x35B2	0x8002    STRH	R2, [R0, #0]
;__Lib_System_MSP432P.c, 361 :: 		
0x35B4	0x2100    MOVS	R1, #0
0x35B6	0xB249    SXTB	R1, R1
0x35B8	0x4832    LDR	R0, [PC, #200]
0x35BA	0x8001    STRH	R1, [R0, #0]
;__Lib_System_MSP432P.c, 362 :: 		
0x35BC	0x4832    LDR	R0, [PC, #200]
0x35BE	0x8002    STRH	R2, [R0, #0]
;__Lib_System_MSP432P.c, 363 :: 		
0x35C0	0x4832    LDR	R0, [PC, #200]
0x35C2	0x8001    STRH	R1, [R0, #0]
;__Lib_System_MSP432P.c, 364 :: 		
L___Lib_System_MSP432P_InitialSetUpRCCRCC230:
;__Lib_System_MSP432P.c, 366 :: 		
0x35C4	0x2180    MOVS	R1, #128
0x35C6	0x4832    LDR	R0, [PC, #200]
0x35C8	0x6001    STR	R1, [R0, #0]
; ulCSCTL0 end address is: 12 (R3)
; ulCSCTL1 end address is: 16 (R4)
; ulCSCTL2 end address is: 20 (R5)
; ulWDTCTL end address is: 24 (R6)
; ulFLCTL_BANK0_RDCTL end address is: 28 (R7)
0x35CA	0x9501    STR	R5, [SP, #4]
0x35CC	0x9602    STR	R6, [SP, #8]
0x35CE	0x461E    MOV	R6, R3
0x35D0	0x4625    MOV	R5, R4
0x35D2	0x463A    MOV	R2, R7
0x35D4	0x9B02    LDR	R3, [SP, #8]
0x35D6	0x9C01    LDR	R4, [SP, #4]
;__Lib_System_MSP432P.c, 369 :: 		
L___Lib_System_MSP432P_InitialSetUpRCCRCC231:
; ulFLCTL_BANK0_RDCTL start address is: 8 (R2)
; ulWDTCTL start address is: 12 (R3)
; ulCSCTL2 start address is: 16 (R4)
; ulCSCTL1 start address is: 20 (R5)
; ulCSCTL0 start address is: 24 (R6)
0x35D8	0x482E    LDR	R0, [PC, #184]
0x35DA	0x6800    LDR	R0, [R0, #0]
0x35DC	0xF4007080  AND	R0, R0, #256
0x35E0	0xB100    CBZ	R0, L___Lib_System_MSP432P_InitialSetUpRCCRCC232
0x35E2	0xE7F9    B	L___Lib_System_MSP432P_InitialSetUpRCCRCC231
L___Lib_System_MSP432P_InitialSetUpRCCRCC232:
;__Lib_System_MSP432P.c, 370 :: 		
0x35E4	0x492C    LDR	R1, [PC, #176]
0x35E6	0x482D    LDR	R0, [PC, #180]
0x35E8	0x6001    STR	R1, [R0, #0]
; ulFLCTL_BANK0_RDCTL end address is: 8 (R2)
; ulWDTCTL end address is: 12 (R3)
; ulCSCTL1 end address is: 20 (R5)
; ulCSCTL0 end address is: 24 (R6)
; ulCSCTL2 end address is: 16 (R4)
0x35EA	0x9501    STR	R5, [SP, #4]
0x35EC	0x4611    MOV	R1, R2
0x35EE	0x4632    MOV	R2, R6
0x35F0	0x461D    MOV	R5, R3
0x35F2	0x9B01    LDR	R3, [SP, #4]
;__Lib_System_MSP432P.c, 371 :: 		
L___Lib_System_MSP432P_InitialSetUpRCCRCC233:
; ulCSCTL0 start address is: 8 (R2)
; ulCSCTL1 start address is: 12 (R3)
; ulCSCTL2 start address is: 16 (R4)
; ulWDTCTL start address is: 20 (R5)
; ulFLCTL_BANK0_RDCTL start address is: 4 (R1)
0x35F4	0x4827    LDR	R0, [PC, #156]
0x35F6	0x6800    LDR	R0, [R0, #0]
0x35F8	0xF4007080  AND	R0, R0, #256
0x35FC	0xB100    CBZ	R0, L___Lib_System_MSP432P_InitialSetUpRCCRCC234
0x35FE	0xE7F9    B	L___Lib_System_MSP432P_InitialSetUpRCCRCC233
L___Lib_System_MSP432P_InitialSetUpRCCRCC234:
;__Lib_System_MSP432P.c, 373 :: 		
0x3600	0x4827    LDR	R0, [PC, #156]
0x3602	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 374 :: 		
0x3604	0x4827    LDR	R0, [PC, #156]
0x3606	0x6001    STR	R1, [R0, #0]
; ulFLCTL_BANK0_RDCTL end address is: 4 (R1)
;__Lib_System_MSP432P.c, 376 :: 		
0x3608	0x4927    LDR	R1, [PC, #156]
0x360A	0x4828    LDR	R0, [PC, #160]
0x360C	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 377 :: 		
0x360E	0x4828    LDR	R0, [PC, #160]
0x3610	0x6002    STR	R2, [R0, #0]
; ulCSCTL0 end address is: 8 (R2)
;__Lib_System_MSP432P.c, 378 :: 		
0x3612	0x4828    LDR	R0, [PC, #160]
0x3614	0x6003    STR	R3, [R0, #0]
; ulCSCTL1 end address is: 12 (R3)
;__Lib_System_MSP432P.c, 381 :: 		
0x3616	0x0D20    LSRS	R0, R4, #20
0x3618	0xF0000007  AND	R0, R0, #7
0x361C	0xB928    CBNZ	R0, L___Lib_System_MSP432P_InitialSetUpRCCRCC235
;__Lib_System_MSP432P.c, 382 :: 		
0x361E	0xF0440103  ORR	R1, R4, #3
; ulCSCTL2 end address is: 16 (R4)
0x3622	0x4825    LDR	R0, [PC, #148]
0x3624	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 383 :: 		
0x3626	0x462A    MOV	R2, R5
0x3628	0xE010    B	L___Lib_System_MSP432P_InitialSetUpRCCRCC236
L___Lib_System_MSP432P_InitialSetUpRCCRCC235:
;__Lib_System_MSP432P.c, 384 :: 		
; ulCSCTL2 start address is: 16 (R4)
0x362A	0xF4443080  ORR	R0, R4, #65536
; ulCSCTL2 end address is: 16 (R4)
0x362E	0xF0400103  ORR	R1, R0, #3
0x3632	0x4821    LDR	R0, [PC, #132]
0x3634	0x6001    STR	R1, [R0, #0]
; ulWDTCTL end address is: 20 (R5)
0x3636	0x462A    MOV	R2, R5
;__Lib_System_MSP432P.c, 386 :: 		
L___Lib_System_MSP432P_InitialSetUpRCCRCC237:
; ulWDTCTL start address is: 8 (R2)
0x3638	0x4820    LDR	R0, [PC, #128]
0x363A	0x6800    LDR	R0, [R0, #0]
0x363C	0xB130    CBZ	R0, L___Lib_System_MSP432P_InitialSetUpRCCRCC238
;__Lib_System_MSP432P.c, 387 :: 		
0x363E	0xF7FFFE17  BL	_Delay_1us+0
;__Lib_System_MSP432P.c, 388 :: 		
0x3642	0x2101    MOVS	R1, #1
0x3644	0xB249    SXTB	R1, R1
0x3646	0x481E    LDR	R0, [PC, #120]
0x3648	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 389 :: 		
0x364A	0xE7F5    B	L___Lib_System_MSP432P_InitialSetUpRCCRCC237
L___Lib_System_MSP432P_InitialSetUpRCCRCC238:
;__Lib_System_MSP432P.c, 390 :: 		
L___Lib_System_MSP432P_InitialSetUpRCCRCC236:
; ulWDTCTL end address is: 8 (R2)
;__Lib_System_MSP432P.c, 393 :: 		
; ulWDTCTL start address is: 8 (R2)
0x364C	0x2100    MOVS	R1, #0
0x364E	0x4817    LDR	R0, [PC, #92]
0x3650	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 396 :: 		
0x3652	0xF44241B4  ORR	R1, R2, #23040
; ulWDTCTL end address is: 8 (R2)
0x3656	0x4809    LDR	R0, [PC, #36]
0x3658	0x8001    STRH	R1, [R0, #0]
;__Lib_System_MSP432P.c, 397 :: 		
L_end_InitialSetUpRCCRCC2:
0x365A	0xF8DDE000  LDR	LR, [SP, #0]
0x365E	0xB003    ADD	SP, SP, #12
0x3660	0x4770    BX	LR
0x3662	0xBF00    NOP
0x3664	0x00000005  	#327680
0x3668	0x00330000  	#51
0x366C	0x00030001  	#65539
0x3670	0x00840000  	#132
0x3674	0x10000000  	#4096
0x3678	0xBB800000  	#48000
0x367C	0x480C4000  	WDT_A_WDTCTL+0
0x3680	0xA54C4209  	DIO_PJSEL0+0
0x3684	0xA58C4209  	DIO_PJSEL1+0
0x3688	0xA5484209  	DIO_PJSEL0+0
0x368C	0xA5884209  	DIO_PJSEL1+0
0x3690	0x3014E004  	SYSCTL_SYS_SRAM_BANKEN+0
0x3694	0x00044001  	PCM_PCMCTL1+0
0x3698	0x0001695A  	#1767505921
0x369C	0x00004001  	PCM_PCMCTL0+0
0x36A0	0x10104001  	FLCTL_FLCTL_BANK0_RDCTL+0
0x36A4	0x10144001  	FLCTL_FLCTL_BANK1_RDCTL+0
0x36A8	0x695A0000  	#26970
0x36AC	0x04004001  	CS_CSKEY+0
0x36B0	0x04044001  	CS_CSCTL0+0
0x36B4	0x04084001  	CS_CSCTL1+0
0x36B8	0x040C4001  	CS_CSCTL2+0
0x36BC	0x89044220  	CS_CSIFGbits+0
0x36C0	0x8A044220  	CS_CSCLRIFGbits+0
; end of __Lib_System_MSP432P_InitialSetUpRCCRCC2
_Delay_1us:
;__Lib_Delays_MSP432.c, 13 :: 		void Delay_1us() {
0x3270	0xB081    SUB	SP, SP, #4
;__Lib_Delays_MSP432.c, 14 :: 		Delay_us(1);
0x3272	0xF2400709  MOVW	R7, #9
0x3276	0xF2C00700  MOVT	R7, #0
0x327A	0xBF00    NOP
L_Delay_1us0:
0x327C	0x1E7F    SUBS	R7, R7, #1
0x327E	0xD1FD    BNE	L_Delay_1us0
0x3280	0xBF00    NOP
0x3282	0xBF00    NOP
0x3284	0xBF00    NOP
0x3286	0xBF00    NOP
;__Lib_Delays_MSP432.c, 15 :: 		}
L_end_Delay_1us:
0x3288	0xB001    ADD	SP, SP, #4
0x328A	0x4770    BX	LR
; end of _Delay_1us
__Lib_System_MSP432P_InitialSetUpFosc:
;__Lib_System_MSP432P.c, 335 :: 		
0x3544	0xB081    SUB	SP, SP, #4
;__Lib_System_MSP432P.c, 336 :: 		
0x3546	0x4902    LDR	R1, [PC, #8]
0x3548	0x4802    LDR	R0, [PC, #8]
0x354A	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 337 :: 		
L_end_InitialSetUpFosc:
0x354C	0xB001    ADD	SP, SP, #4
0x354E	0x4770    BX	LR
0x3550	0xBB800000  	#48000
0x3554	0x00E42000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_MSP432P_InitialSetUpFosc
___GenExcept:
;__Lib_System_MSP432P.c, 303 :: 		
0x3510	0xB081    SUB	SP, SP, #4
;__Lib_System_MSP432P.c, 304 :: 		
L___GenExcept24:
;__Lib_System_MSP432P.c, 305 :: 		
0x3512	0xE7FE    B	L___GenExcept24
;__Lib_System_MSP432P.c, 306 :: 		
L_end___GenExcept:
0x3514	0xB001    ADD	SP, SP, #4
0x3516	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_MSP432P.c, 107 :: 		
0x3518	0xB081    SUB	SP, SP, #4
;__Lib_System_MSP432P.c, 110 :: 		
0x351A	0xF64E5088  MOVW	R0, #60808
;__Lib_System_MSP432P.c, 111 :: 		
0x351E	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_MSP432P.c, 113 :: 		
0x3522	0x6801    LDR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 115 :: 		
0x3524	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_MSP432P.c, 117 :: 		
0x3528	0x6001    STR	R1, [R0, #0]
;__Lib_System_MSP432P.c, 119 :: 		
0x352A	0xBF00    NOP
;__Lib_System_MSP432P.c, 120 :: 		
0x352C	0xBF00    NOP
;__Lib_System_MSP432P.c, 121 :: 		
0x352E	0xBF00    NOP
;__Lib_System_MSP432P.c, 122 :: 		
0x3530	0xBF00    NOP
;__Lib_System_MSP432P.c, 124 :: 		
0x3532	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_MSP432P.c, 125 :: 		
0x3536	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_MSP432P.c, 126 :: 		
0x353A	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_MSP432P.c, 127 :: 		
L_end___EnableFPU:
0x353E	0xB001    ADD	SP, SP, #4
0x3540	0x4770    BX	LR
; end of ___EnableFPU
0x3C80	0xB500    PUSH	(R14)
0x3C82	0xF8DFB024  LDR	R11, [PC, #36]
0x3C86	0xF8DFA024  LDR	R10, [PC, #36]
0x3C8A	0xF8DFC024  LDR	R12, [PC, #36]
0x3C8E	0xF7FFFAFD  BL	12940
0x3C92	0xF8DFB020  LDR	R11, [PC, #32]
0x3C96	0xF8DFA020  LDR	R10, [PC, #32]
0x3C9A	0xF8DFC020  LDR	R12, [PC, #32]
0x3C9E	0xF7FFFAF5  BL	12940
0x3CA2	0xBD00    POP	(R15)
0x3CA4	0x4770    BX	LR
0x3CA6	0xBF00    NOP
0x3CA8	0x00002000  	#536870912
0x3CAC	0x006D2000  	#536871021
0x3CB0	0x3B100000  	#15120
0x3CB4	0x00702000  	#536871024
0x3CB8	0x00782000  	#536871032
0x3CBC	0x3C780000  	#15480
0x3D1C	0xB500    PUSH	(R14)
0x3D1E	0xF8DFB010  LDR	R11, [PC, #16]
0x3D22	0xF8DFA010  LDR	R10, [PC, #16]
0x3D26	0xF7FFFB13  BL	13136
0x3D2A	0xBD00    POP	(R15)
0x3D2C	0x4770    BX	LR
0x3D2E	0xBF00    NOP
0x3D30	0x00002000  	#536870912
0x3D34	0x00F82000  	#536871160
;Click_Gyro2_MSP.c,17 :: __GYRO2_I2C_CFG [4]
0x338C	0x000186A0 ;__GYRO2_I2C_CFG+0
; end of __GYRO2_I2C_CFG
;__Lib_GPIO_MSP_Defs.c,135 :: __GPIO_MODULE_UARTA2_B23 [220]
0x36C4	0x40004C20 ;__GPIO_MODULE_UARTA2_B23+0
0x36C8	0x05050004 ;__GPIO_MODULE_UARTA2_B23+4
0x36CC	0x00000000 ;__GPIO_MODULE_UARTA2_B23+8
0x36D0	0x40004C20 ;__GPIO_MODULE_UARTA2_B23+12
0x36D4	0x05050008 ;__GPIO_MODULE_UARTA2_B23+16
0x36D8	0x00000000 ;__GPIO_MODULE_UARTA2_B23+20
0x36DC	0x00000000 ;__GPIO_MODULE_UARTA2_B23+24
0x36E0	0x00000000 ;__GPIO_MODULE_UARTA2_B23+28
0x36E4	0x00000000 ;__GPIO_MODULE_UARTA2_B23+32
0x36E8	0x00000000 ;__GPIO_MODULE_UARTA2_B23+36
0x36EC	0x00000000 ;__GPIO_MODULE_UARTA2_B23+40
0x36F0	0x00000000 ;__GPIO_MODULE_UARTA2_B23+44
0x36F4	0x00000000 ;__GPIO_MODULE_UARTA2_B23+48
0x36F8	0x00000000 ;__GPIO_MODULE_UARTA2_B23+52
0x36FC	0x00000000 ;__GPIO_MODULE_UARTA2_B23+56
0x3700	0x00000000 ;__GPIO_MODULE_UARTA2_B23+60
0x3704	0x00000000 ;__GPIO_MODULE_UARTA2_B23+64
0x3708	0x00000000 ;__GPIO_MODULE_UARTA2_B23+68
0x370C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+72
0x3710	0x00000000 ;__GPIO_MODULE_UARTA2_B23+76
0x3714	0x00000000 ;__GPIO_MODULE_UARTA2_B23+80
0x3718	0x00000000 ;__GPIO_MODULE_UARTA2_B23+84
0x371C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+88
0x3720	0x00000000 ;__GPIO_MODULE_UARTA2_B23+92
0x3724	0x00000000 ;__GPIO_MODULE_UARTA2_B23+96
0x3728	0x00000000 ;__GPIO_MODULE_UARTA2_B23+100
0x372C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+104
0x3730	0x00000000 ;__GPIO_MODULE_UARTA2_B23+108
0x3734	0x00000000 ;__GPIO_MODULE_UARTA2_B23+112
0x3738	0x00000000 ;__GPIO_MODULE_UARTA2_B23+116
0x373C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+120
0x3740	0x00000000 ;__GPIO_MODULE_UARTA2_B23+124
0x3744	0x00000000 ;__GPIO_MODULE_UARTA2_B23+128
0x3748	0x00000000 ;__GPIO_MODULE_UARTA2_B23+132
0x374C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+136
0x3750	0x00000000 ;__GPIO_MODULE_UARTA2_B23+140
0x3754	0x00000000 ;__GPIO_MODULE_UARTA2_B23+144
0x3758	0x00000000 ;__GPIO_MODULE_UARTA2_B23+148
0x375C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+152
0x3760	0x00000000 ;__GPIO_MODULE_UARTA2_B23+156
0x3764	0x00000000 ;__GPIO_MODULE_UARTA2_B23+160
0x3768	0x00000000 ;__GPIO_MODULE_UARTA2_B23+164
0x376C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+168
0x3770	0x00000000 ;__GPIO_MODULE_UARTA2_B23+172
0x3774	0x00000000 ;__GPIO_MODULE_UARTA2_B23+176
0x3778	0x00000000 ;__GPIO_MODULE_UARTA2_B23+180
0x377C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+184
0x3780	0x00000000 ;__GPIO_MODULE_UARTA2_B23+188
0x3784	0x00000000 ;__GPIO_MODULE_UARTA2_B23+192
0x3788	0x00000000 ;__GPIO_MODULE_UARTA2_B23+196
0x378C	0x00000000 ;__GPIO_MODULE_UARTA2_B23+200
0x3790	0x00000000 ;__GPIO_MODULE_UARTA2_B23+204
0x3794	0x00000000 ;__GPIO_MODULE_UARTA2_B23+208
0x3798	0x00000000 ;__GPIO_MODULE_UARTA2_B23+212
0x379C	0x00000002 ;__GPIO_MODULE_UARTA2_B23+216
; end of __GPIO_MODULE_UARTA2_B23
;__Lib_GPIO_MSP_Defs.c,193 :: __GPIO_MODULE_I2CB1_C1213 [220]
0x37A0	0x40004C40 ;__GPIO_MODULE_I2CB1_C1213+0
0x37A4	0x05001000 ;__GPIO_MODULE_I2CB1_C1213+4
0x37A8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+8
0x37AC	0x40004C40 ;__GPIO_MODULE_I2CB1_C1213+12
0x37B0	0x05002000 ;__GPIO_MODULE_I2CB1_C1213+16
0x37B4	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+20
0x37B8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+24
0x37BC	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+28
0x37C0	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+32
0x37C4	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+36
0x37C8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+40
0x37CC	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+44
0x37D0	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+48
0x37D4	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+52
0x37D8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+56
0x37DC	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+60
0x37E0	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+64
0x37E4	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+68
0x37E8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+72
0x37EC	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+76
0x37F0	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+80
0x37F4	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+84
0x37F8	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+88
0x37FC	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+92
0x3800	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+96
0x3804	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+100
0x3808	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+104
0x380C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+108
0x3810	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+112
0x3814	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+116
0x3818	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+120
0x381C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+124
0x3820	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+128
0x3824	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+132
0x3828	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+136
0x382C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+140
0x3830	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+144
0x3834	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+148
0x3838	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+152
0x383C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+156
0x3840	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+160
0x3844	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+164
0x3848	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+168
0x384C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+172
0x3850	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+176
0x3854	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+180
0x3858	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+184
0x385C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+188
0x3860	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+192
0x3864	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+196
0x3868	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+200
0x386C	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+204
0x3870	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+208
0x3874	0x00000000 ;__GPIO_MODULE_I2CB1_C1213+212
0x3878	0x00000002 ;__GPIO_MODULE_I2CB1_C1213+216
; end of __GPIO_MODULE_I2CB1_C1213
;__Lib_GPIO_MSP_Defs.c,134 :: __GPIO_MODULE_UARTA1_A1011 [220]
0x387C	0x40004C00 ;__GPIO_MODULE_UARTA1_A1011+0
0x3880	0x05050400 ;__GPIO_MODULE_UARTA1_A1011+4
0x3884	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+8
0x3888	0x40004C00 ;__GPIO_MODULE_UARTA1_A1011+12
0x388C	0x05050800 ;__GPIO_MODULE_UARTA1_A1011+16
0x3890	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+20
0x3894	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+24
0x3898	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+28
0x389C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+32
0x38A0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+36
0x38A4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+40
0x38A8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+44
0x38AC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+48
0x38B0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+52
0x38B4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+56
0x38B8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+60
0x38BC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+64
0x38C0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+68
0x38C4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+72
0x38C8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+76
0x38CC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+80
0x38D0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+84
0x38D4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+88
0x38D8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+92
0x38DC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+96
0x38E0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+100
0x38E4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+104
0x38E8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+108
0x38EC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+112
0x38F0	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+116
0x38F4	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+120
0x38F8	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+124
0x38FC	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+128
0x3900	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+132
0x3904	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+136
0x3908	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+140
0x390C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+144
0x3910	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+148
0x3914	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+152
0x3918	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+156
0x391C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+160
0x3920	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+164
0x3924	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+168
0x3928	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+172
0x392C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+176
0x3930	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+180
0x3934	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+184
0x3938	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+188
0x393C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+192
0x3940	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+196
0x3944	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+200
0x3948	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+204
0x394C	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+208
0x3950	0x00000000 ;__GPIO_MODULE_UARTA1_A1011+212
0x3954	0x00000002 ;__GPIO_MODULE_UARTA1_A1011+216
; end of __GPIO_MODULE_UARTA1_A1011
;__Lib_GPIO_MSP_Defs.c,133 :: __GPIO_MODULE_UARTA0_A23 [220]
0x3958	0x40004C00 ;__GPIO_MODULE_UARTA0_A23+0
0x395C	0x05050004 ;__GPIO_MODULE_UARTA0_A23+4
0x3960	0x00000000 ;__GPIO_MODULE_UARTA0_A23+8
0x3964	0x40004C00 ;__GPIO_MODULE_UARTA0_A23+12
0x3968	0x05050008 ;__GPIO_MODULE_UARTA0_A23+16
0x396C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+20
0x3970	0x00000000 ;__GPIO_MODULE_UARTA0_A23+24
0x3974	0x00000000 ;__GPIO_MODULE_UARTA0_A23+28
0x3978	0x00000000 ;__GPIO_MODULE_UARTA0_A23+32
0x397C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+36
0x3980	0x00000000 ;__GPIO_MODULE_UARTA0_A23+40
0x3984	0x00000000 ;__GPIO_MODULE_UARTA0_A23+44
0x3988	0x00000000 ;__GPIO_MODULE_UARTA0_A23+48
0x398C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+52
0x3990	0x00000000 ;__GPIO_MODULE_UARTA0_A23+56
0x3994	0x00000000 ;__GPIO_MODULE_UARTA0_A23+60
0x3998	0x00000000 ;__GPIO_MODULE_UARTA0_A23+64
0x399C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+68
0x39A0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+72
0x39A4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+76
0x39A8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+80
0x39AC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+84
0x39B0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+88
0x39B4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+92
0x39B8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+96
0x39BC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+100
0x39C0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+104
0x39C4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+108
0x39C8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+112
0x39CC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+116
0x39D0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+120
0x39D4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+124
0x39D8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+128
0x39DC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+132
0x39E0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+136
0x39E4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+140
0x39E8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+144
0x39EC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+148
0x39F0	0x00000000 ;__GPIO_MODULE_UARTA0_A23+152
0x39F4	0x00000000 ;__GPIO_MODULE_UARTA0_A23+156
0x39F8	0x00000000 ;__GPIO_MODULE_UARTA0_A23+160
0x39FC	0x00000000 ;__GPIO_MODULE_UARTA0_A23+164
0x3A00	0x00000000 ;__GPIO_MODULE_UARTA0_A23+168
0x3A04	0x00000000 ;__GPIO_MODULE_UARTA0_A23+172
0x3A08	0x00000000 ;__GPIO_MODULE_UARTA0_A23+176
0x3A0C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+180
0x3A10	0x00000000 ;__GPIO_MODULE_UARTA0_A23+184
0x3A14	0x00000000 ;__GPIO_MODULE_UARTA0_A23+188
0x3A18	0x00000000 ;__GPIO_MODULE_UARTA0_A23+192
0x3A1C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+196
0x3A20	0x00000000 ;__GPIO_MODULE_UARTA0_A23+200
0x3A24	0x00000000 ;__GPIO_MODULE_UARTA0_A23+204
0x3A28	0x00000000 ;__GPIO_MODULE_UARTA0_A23+208
0x3A2C	0x00000000 ;__GPIO_MODULE_UARTA0_A23+212
0x3A30	0x00000002 ;__GPIO_MODULE_UARTA0_A23+216
; end of __GPIO_MODULE_UARTA0_A23
;__Lib_GPIO_MSP_Defs.c,194 :: __GPIO_MODULE_I2CB2_B67 [220]
0x3A34	0x40004C20 ;__GPIO_MODULE_I2CB2_B67+0
0x3A38	0x05000040 ;__GPIO_MODULE_I2CB2_B67+4
0x3A3C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+8
0x3A40	0x40004C20 ;__GPIO_MODULE_I2CB2_B67+12
0x3A44	0x05000080 ;__GPIO_MODULE_I2CB2_B67+16
0x3A48	0x00000000 ;__GPIO_MODULE_I2CB2_B67+20
0x3A4C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+24
0x3A50	0x00000000 ;__GPIO_MODULE_I2CB2_B67+28
0x3A54	0x00000000 ;__GPIO_MODULE_I2CB2_B67+32
0x3A58	0x00000000 ;__GPIO_MODULE_I2CB2_B67+36
0x3A5C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+40
0x3A60	0x00000000 ;__GPIO_MODULE_I2CB2_B67+44
0x3A64	0x00000000 ;__GPIO_MODULE_I2CB2_B67+48
0x3A68	0x00000000 ;__GPIO_MODULE_I2CB2_B67+52
0x3A6C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+56
0x3A70	0x00000000 ;__GPIO_MODULE_I2CB2_B67+60
0x3A74	0x00000000 ;__GPIO_MODULE_I2CB2_B67+64
0x3A78	0x00000000 ;__GPIO_MODULE_I2CB2_B67+68
0x3A7C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+72
0x3A80	0x00000000 ;__GPIO_MODULE_I2CB2_B67+76
0x3A84	0x00000000 ;__GPIO_MODULE_I2CB2_B67+80
0x3A88	0x00000000 ;__GPIO_MODULE_I2CB2_B67+84
0x3A8C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+88
0x3A90	0x00000000 ;__GPIO_MODULE_I2CB2_B67+92
0x3A94	0x00000000 ;__GPIO_MODULE_I2CB2_B67+96
0x3A98	0x00000000 ;__GPIO_MODULE_I2CB2_B67+100
0x3A9C	0x00000000 ;__GPIO_MODULE_I2CB2_B67+104
0x3AA0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+108
0x3AA4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+112
0x3AA8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+116
0x3AAC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+120
0x3AB0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+124
0x3AB4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+128
0x3AB8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+132
0x3ABC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+136
0x3AC0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+140
0x3AC4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+144
0x3AC8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+148
0x3ACC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+152
0x3AD0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+156
0x3AD4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+160
0x3AD8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+164
0x3ADC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+168
0x3AE0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+172
0x3AE4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+176
0x3AE8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+180
0x3AEC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+184
0x3AF0	0x00000000 ;__GPIO_MODULE_I2CB2_B67+188
0x3AF4	0x00000000 ;__GPIO_MODULE_I2CB2_B67+192
0x3AF8	0x00000000 ;__GPIO_MODULE_I2CB2_B67+196
0x3AFC	0x00000000 ;__GPIO_MODULE_I2CB2_B67+200
0x3B00	0x00000000 ;__GPIO_MODULE_I2CB2_B67+204
0x3B04	0x00000000 ;__GPIO_MODULE_I2CB2_B67+208
0x3B08	0x00000000 ;__GPIO_MODULE_I2CB2_B67+212
0x3B0C	0x00000002 ;__GPIO_MODULE_I2CB2_B67+216
; end of __GPIO_MODULE_I2CB2_B67
;,0 :: _initBlock_6 [28]
; Containing: ?ICS_GYRO2_ADDR1 [1]
;             ?ICS?lstr1_Click_Gyro2_MSP [27]
0x3B10	0x2B2B2B21 ;_initBlock_6+0 : ?ICS_GYRO2_ADDR1 at 0x3B10 : ?ICS?lstr1_Click_Gyro2_MSP at 0x3B11
0x3B14	0x73795320 ;_initBlock_6+4
0x3B18	0x206D6574 ;_initBlock_6+8
0x3B1C	0x74696E49 ;_initBlock_6+12
0x3B20	0x696C6169 ;_initBlock_6+16
0x3B24	0x2064657A ;_initBlock_6+20
0x3B28	0x002B2B2B ;_initBlock_6+24
; end of _initBlock_6
;,0 :: _initBlock_7 [22]
; Containing: ?ICS?lstr2_Click_Gyro2_MSP [21]
;             ?ICS_GYRO2_RT_CFG_ZTEFE [1]
0x3B2C	0x6F727947 ;_initBlock_7+0 : ?ICS?lstr2_Click_Gyro2_MSP at 0x3B2C
0x3B30	0x63203220 ;_initBlock_7+4
0x3B34	0x6B63696C ;_initBlock_7+8
0x3B38	0x65727020 ;_initBlock_7+12
0x3B3C	0x746E6573 ;_initBlock_7+16
0x3B40	0x0400 ;_initBlock_7+20 : ?ICS_GYRO2_RT_CFG_ZTEFE at 0x3B41
; end of _initBlock_7
;,0 :: _initBlock_8 [2]
; Containing: ?ICS_GYRO2_RT_CFG_YTEFE [1]
;             ?ICS_GYRO2_RT_CFG_XTEFE [1]
0x3B42	0x0102 ;_initBlock_8+0 : ?ICS_GYRO2_RT_CFG_YTEFE at 0x3B42 : ?ICS_GYRO2_RT_CFG_XTEFE at 0x3B43
; end of _initBlock_8
;,0 :: _initBlock_9 [2]
; Containing: ?ICS_GYRO2_Active [1]
;             ?ICS_GYRO2_DR_100Hz [1]
0x3B44	0x0303 ;_initBlock_9+0 : ?ICS_GYRO2_Active at 0x3B44 : ?ICS_GYRO2_DR_100Hz at 0x3B45
; end of _initBlock_9
;,0 :: _initBlock_10 [2]
; Containing: ?ICS_GYRO2_INT_CFG_FIFO_INT1 [1]
;             ?ICS_GYRO2_INT_EN_FIFO [1]
0x3B46	0x4080 ;_initBlock_10+0 : ?ICS_GYRO2_INT_CFG_FIFO_INT1 at 0x3B46 : ?ICS_GYRO2_INT_EN_FIFO at 0x3B47
; end of _initBlock_10
;,0 :: _initBlock_11 [2]
; Containing: ?ICS_GYRO2_INT_EN_DRDY [1]
;             ?ICS_GYRO2_IPOL_ACTIVE_HI [1]
0x3B48	0x0204 ;_initBlock_11+0 : ?ICS_GYRO2_INT_EN_DRDY at 0x3B48 : ?ICS_GYRO2_IPOL_ACTIVE_HI at 0x3B49
; end of _initBlock_11
;,0 :: _initBlock_12 [2]
; Containing: ?ICS_GYRO2_LO_PASS_MOD2 [1]
;             ?ICS_GYRO2_HI_PASS_OFF [1]
0x3B4A	0x00E0 ;_initBlock_12+0 : ?ICS_GYRO2_LO_PASS_MOD2 at 0x3B4A : ?ICS_GYRO2_HI_PASS_OFF at 0x3B4B
; end of _initBlock_12
;,0 :: _initBlock_13 [24]
; Containing: ?ICS_GYRO2_SCALE_3 [1]
;             ?ICS?lstr3_Click_Gyro2_MSP [6]
;             ?ICS?lstr4_Click_Gyro2_MSP [4]
;             ?ICS?lstr5_Click_Gyro2_MSP [4]
;             ?ICS?lstr6_Click_Gyro2_MSP [4]
;             ?ICS?lstr7_Click_Gyro2_MSP [4]
;             ?ICS__gyro2_driver_GYRO2_SPI_PROTO [1]
0x3B4C	0x72726503 ;_initBlock_13+0 : ?ICS_GYRO2_SCALE_3 at 0x3B4C : ?ICS?lstr3_Click_Gyro2_MSP at 0x3B4D
0x3B50	0x5800726F ;_initBlock_13+4 : ?ICS?lstr4_Click_Gyro2_MSP at 0x3B53
0x3B54	0x5900203A ;_initBlock_13+8 : ?ICS?lstr5_Click_Gyro2_MSP at 0x3B57
0x3B58	0x5A00203A ;_initBlock_13+12 : ?ICS?lstr6_Click_Gyro2_MSP at 0x3B5B
0x3B5C	0x2D00203A ;_initBlock_13+16 : ?ICS?lstr7_Click_Gyro2_MSP at 0x3B5F
0x3B60	0x00002D2D ;_initBlock_13+20 : ?ICS__gyro2_driver_GYRO2_SPI_PROTO at 0x3B63
; end of _initBlock_13
;,0 :: _initBlock_14 [2]
; Containing: ?ICS__gyro2_driver_GYRO2_I2C_PROTO [1]
;             ?ICS_GYRO2_RT_CFG [1]
0x3B64	0x0E01 ;_initBlock_14+0 : ?ICS__gyro2_driver_GYRO2_I2C_PROTO at 0x3B64 : ?ICS_GYRO2_RT_CFG at 0x3B65
; end of _initBlock_14
;,0 :: _initBlock_15 [2]
; Containing: ?ICS_GYRO2_CTRL_REG1 [1]
;             ?ICS_GYRO2_RT_THS [1]
0x3B66	0x1013 ;_initBlock_15+0 : ?ICS_GYRO2_CTRL_REG1 at 0x3B66 : ?ICS_GYRO2_RT_THS at 0x3B67
; end of _initBlock_15
;,0 :: _initBlock_16 [2]
; Containing: ?ICS_GYRO2_CTRL_REG2 [1]
;             ?ICS_GYRO2_CTRL_REG0 [1]
0x3B68	0x0D14 ;_initBlock_16+0 : ?ICS_GYRO2_CTRL_REG2 at 0x3B68 : ?ICS_GYRO2_CTRL_REG0 at 0x3B69
; end of _initBlock_16
;,0 :: _initBlock_17 [2]
; Containing: ?ICS_GYRO2_OUT_X_MSB [1]
;             ?ICS_GYRO2_WHO_AM_I [1]
0x3B6A	0x0C01 ;_initBlock_17+0 : ?ICS_GYRO2_OUT_X_MSB at 0x3B6A : ?ICS_GYRO2_WHO_AM_I at 0x3B6B
; end of _initBlock_17
;__Lib_I2C_MSP.c,0 :: ?ICS__Lib_I2C_MSP__I2C0_TIMEOUT [4]
0x3B6C	0x00000000 ;?ICS__Lib_I2C_MSP__I2C0_TIMEOUT+0
; end of ?ICS__Lib_I2C_MSP__I2C0_TIMEOUT
;__Lib_I2C_MSP.c,0 :: ?ICS__Lib_I2C_MSP__I2C1_TIMEOUT [4]
0x3B70	0x00000000 ;?ICS__Lib_I2C_MSP__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_MSP__I2C1_TIMEOUT
;__Lib_I2C_MSP.c,0 :: ?ICS__Lib_I2C_MSP__I2C2_TIMEOUT [4]
0x3B74	0x00000000 ;?ICS__Lib_I2C_MSP__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_MSP__I2C2_TIMEOUT
;__Lib_I2C_MSP.c,0 :: ?ICS__Lib_I2C_MSP__I2C3_TIMEOUT [4]
0x3B78	0x00000000 ;?ICS__Lib_I2C_MSP__I2C3_TIMEOUT+0
; end of ?ICS__Lib_I2C_MSP__I2C3_TIMEOUT
;__Lib_I2C_MSP.c,0 :: ?ICS__Lib_I2C_MSP__DELAY_RESTART [1]
0x3B7C	0x00 ;?ICS__Lib_I2C_MSP__DELAY_RESTART+0
; end of ?ICS__Lib_I2C_MSP__DELAY_RESTART
;clicker_2_MSP432.c,47 :: __MIKROBUS1_GPIO [96]
0x3B80	0x00002981 ;__MIKROBUS1_GPIO+0
0x3B84	0x00002971 ;__MIKROBUS1_GPIO+4
0x3B88	0x00002991 ;__MIKROBUS1_GPIO+8
0x3B8C	0x000029B1 ;__MIKROBUS1_GPIO+12
0x3B90	0x000029A1 ;__MIKROBUS1_GPIO+16
0x3B94	0x00002B35 ;__MIKROBUS1_GPIO+20
0x3B98	0x00002B15 ;__MIKROBUS1_GPIO+24
0x3B9C	0x00002B25 ;__MIKROBUS1_GPIO+28
0x3BA0	0x00002B45 ;__MIKROBUS1_GPIO+32
0x3BA4	0x00002B85 ;__MIKROBUS1_GPIO+36
0x3BA8	0x00002B75 ;__MIKROBUS1_GPIO+40
0x3BAC	0x00002B55 ;__MIKROBUS1_GPIO+44
0x3BB0	0x00002009 ;__MIKROBUS1_GPIO+48
0x3BB4	0x00002019 ;__MIKROBUS1_GPIO+52
0x3BB8	0x00002029 ;__MIKROBUS1_GPIO+56
0x3BBC	0x00001C09 ;__MIKROBUS1_GPIO+60
0x3BC0	0x00001B69 ;__MIKROBUS1_GPIO+64
0x3BC4	0x00001B59 ;__MIKROBUS1_GPIO+68
0x3BC8	0x00001B89 ;__MIKROBUS1_GPIO+72
0x3BCC	0x00001B79 ;__MIKROBUS1_GPIO+76
0x3BD0	0x00001B49 ;__MIKROBUS1_GPIO+80
0x3BD4	0x00001BD9 ;__MIKROBUS1_GPIO+84
0x3BD8	0x00001BE9 ;__MIKROBUS1_GPIO+88
0x3BDC	0x00001BF9 ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__Lib_UART_MSP.c,49 :: __Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE [72]
0x3BE0	0x02110000 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+0
0x3BE4	0x034302CB ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+4
0x3BE8	0x04E403E9 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+8
0x3BEC	0x06860596 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+12
0x3BF0	0x08B00863 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+16
0x3BF4	0x0BB809C7 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+20
0x3BF8	0x0DF70D07 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+24
0x3BFC	0x0FA30EA9 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+28
0x3C00	0x111A10BE ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+32
0x3C04	0x1653138A ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+36
0x3C08	0x186E1773 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+40
0x3C0C	0x1A0B1920 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+44
0x3C10	0x1BEB1B59 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+48
0x3C14	0x1EB51D4F ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+52
0x3C18	0x208D1F44 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+56
0x3C1C	0x217C2110 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+60
0x3C20	0x232C222F ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+64
0x3C24	0x244823D2 ;__Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE+68
; end of __Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE
;__Lib_UART_MSP.c,44 :: __Lib_UART_MSP__UART_UCBRSx_TABLE [72]
0x3C28	0x00010000 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+0
0x3C2C	0x00040002 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+4
0x3C30	0x00100008 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+8
0x3C34	0x00110020 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+12
0x3C38	0x00220021 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+16
0x3C3C	0x00250044 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+20
0x3C40	0x004A0049 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+24
0x3C44	0x00920052 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+28
0x3C48	0x00550053 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+32
0x3C4C	0x006B00AA ;__Lib_UART_MSP__UART_UCBRSx_TABLE+36
0x3C50	0x00B500AD ;__Lib_UART_MSP__UART_UCBRSx_TABLE+40
0x3C54	0x00D600B6 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+44
0x3C58	0x00BB00B7 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+48
0x3C5C	0x00ED00DD ;__Lib_UART_MSP__UART_UCBRSx_TABLE+52
0x3C60	0x00BF00EE ;__Lib_UART_MSP__UART_UCBRSx_TABLE+56
0x3C64	0x00EF00DF ;__Lib_UART_MSP__UART_UCBRSx_TABLE+60
0x3C68	0x00FB00F7 ;__Lib_UART_MSP__UART_UCBRSx_TABLE+64
0x3C6C	0x00FE00FD ;__Lib_UART_MSP__UART_UCBRSx_TABLE+68
; end of __Lib_UART_MSP__UART_UCBRSx_TABLE
;clicker_2_MSP432.c,15 :: __MIKROBUS1_I2C [8]
0x3C70	0x0000142D ;__MIKROBUS1_I2C+0
0x3C74	0x0000112D ;__MIKROBUS1_I2C+4
; end of __MIKROBUS1_I2C
;__Lib_System_MSP432P.c,0 :: ?ICS__Lib_System_MSP432P_CS_VLOCLK_FREQUENCY [4]
0x3C78	0x00002710 ;?ICS__Lib_System_MSP432P_CS_VLOCLK_FREQUENCY+0
; end of ?ICS__Lib_System_MSP432P_CS_VLOCLK_FREQUENCY
;__Lib_System_MSP432P.c,0 :: ?ICS__Lib_System_MSP432P_CS_MODCLK_FREQUENCY [4]
0x3C7C	0x016E3600 ;?ICS__Lib_System_MSP432P_CS_MODCLK_FREQUENCY+0
; end of ?ICS__Lib_System_MSP432P_CS_MODCLK_FREQUENCY
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0100      [24]    __Lib_I2C_MSP_I2Cx_Is_Idle
0x0118     [216]    __Lib_I2C_MSP_I2Cx_Wait_For_Idle
0x01F0      [16]    __Lib_System_MSP432P_CS_GetDividerValue
0x0200     [124]    __Lib_System_MSP432P_CS_getDCOFrequency
0x027C      [44]    __Lib_System_MSP432P_CS_ClearInterruptFlag
0x02A8     [272]    __Lib_I2C_MSP_I2Cx_WriteByte
0x03B8      [36]    __Lib_I2C_MSP_I2Cx_Stop
0x03DC     [308]    __Lib_System_MSP432P_CS_ComputeClockFrequency
0x0510     [344]    __Lib_I2C_MSP_I2Cx_Start
0x0668      [56]    __Lib_UART_MSP_UARTx_GetFreq
0x06A0      [56]    __Lib_I2C_MSP_I2C_setSlaveAddress
0x06D8     [176]    __Lib_UART_MSP__modf
0x0788      [32]    __Lib_UART_MSP_UARTx_SetStopBits
0x07A8      [74]    __Lib_UART_MSP_UARTx_SetParity
0x07F4      [40]    __Lib_SPI_MSP_SPI1_Read_Static
0x081C     [388]    __Lib_I2C_MSP_I2Cx_Write
0x09A0      [40]    __Lib_SPI_MSP_SPI8_Read_Static
0x09C8      [14]    __Lib_UART_MSP_UARTx_Disable
0x09D8      [28]    __Lib_UART_MSP_UARTx_SetSB
0x09F4      [24]    __Lib_UART_MSP_UARTx_SetClockSource
0x0A0C      [40]    __Lib_SPI_MSP_SPI2_Read_Static
0x0A34      [18]    __Lib_UART_MSP_UARTx_Enable
0x0A48     [352]    __Lib_UART_MSP_UARTx_SetBaudRate
0x0BA8      [40]    __Lib_SPI_MSP_SPI6_Read_Static
0x0BD0      [40]    __Lib_SPI_MSP_SPI7_Read_Static
0x0BF8      [40]    __Lib_SPI_MSP_SPI5_Read_Static
0x0C20      [34]    __Lib_UART_MSP_UARTx_SetMode
0x0C44      [40]    __Lib_SPI_MSP_SPI3_Read_Static
0x0C6C      [40]    __Lib_SPI_MSP_SPI4_Read_Static
0x0C94      [32]    __Lib_UART_MSP_UARTx_SetDataLength
0x0CB4      [16]    __Lib_I2C_MSP_I2C_disableModule
0x0CC4      [24]    __Lib_I2C_MSP_I2C_SetClockSource
0x0CDC      [16]    __Lib_I2C_MSP_I2C_setMode
0x0CEC     [148]    _GPIO_Alternate_Function_Enable
0x0D80     [568]    __Lib_I2C_MSP_I2Cx_Read
0x0FB8      [28]    __Lib_GPIO_MSP_GPIO_PMAP_Unlock
0x0FD4     [176]    _CS_GetClocksFrequency
0x1084      [16]    __Lib_I2C_MSP_I2C_enableModule
0x1094      [20]    __Lib_I2C_MSP_I2C_clearInterruptFlag
0x10A8      [16]    __Lib_I2C_MSP_I2C_enableInterrupt
0x10B8      [36]    _I2C3_Read
0x10DC      [18]    _SPI1_Read
0x10F0      [38]    __Lib_UART_MSP_UARTx_Write
0x1118      [18]    _SPI2_Read
0x112C      [36]    _I2C1_Read
0x1150      [18]    _SPI3_Read
0x1164      [36]    _I2C2_Read
0x1188      [36]    __Lib_SPI_MSP_SPI3_Write_Static
0x11AC      [36]    __Lib_SPI_MSP_SPI2_Write_Static
0x11D0      [36]    __Lib_SPI_MSP_SPI5_Write_Static
0x11F4      [36]    __Lib_SPI_MSP_SPI4_Write_Static
0x1218      [36]    __Lib_SPI_MSP_SPI8_Write_Static
0x123C      [36]    __Lib_SPI_MSP_SPI1_Write_Static
0x1260      [36]    __Lib_SPI_MSP_SPI6_Write_Static
0x1284      [36]    __Lib_SPI_MSP_SPI7_Write_Static
0x12A8      [18]    _SPI4_Read
0x12BC      [18]    _SPI8_Read
0x12D0     [276]    __Lib_I2C_MSP_I2Cx_Init_Advanced
0x13E4      [36]    _I2C0_Write
0x1408      [36]    _I2C2_Write
0x142C      [36]    _I2C1_Write
0x1450     [628]    _GPIO_Config
0x16C4      [18]    _SPI6_Read
0x16D8      [36]    _I2C0_Read
0x16FC      [18]    _SPI5_Read
0x1710      [98]    __Lib_UART_MSP_UARTx_Init
0x1774      [36]    _I2C3_Write
0x1798      [18]    _SPI7_Read
0x17AC      [18]    _SPI5_Write
0x17C0      [18]    _SPI4_Write
0x17D4      [18]    _SPI2_Write
0x17E8      [18]    _SPI1_Write
0x17FC      [40]    __gyro2_driver_hal_i2cWrite
0x1824      [12]    __gyro2_driver_hal_i2cStart
0x1830      [18]    _SPI3_Write
0x1844      [28]    _UART3_Write
0x1860      [28]    _UART2_Write
0x187C      [36]    __gyro2_driver_hal_i2cRead
0x18A0      [76]    __gyro2_driver_hal_spiTransfer
0x18EC      [28]    _UART1_Write
0x1908      [18]    _SPI7_Write
0x191C      [18]    _SPI6_Write
0x1930      [28]    _UART0_Write
0x194C      [18]    _SPI8_Write
0x1960      [96]    _UART1_Init
0x19C0      [40]    _I2C1_Init
0x19E8      [96]    _UART0_Init
0x1A48      [58]    _GPIO_Digital_Input
0x1A84      [40]    _I2C2_Init
0x1AAC      [58]    _GPIO_Digital_Output
0x1AE8      [96]    _UART2_Init
0x1B48      [16]    clicker_2_MSP432__getRX_1
0x1B58      [16]    clicker_2_MSP432__getMOSI_1
0x1B68      [16]    clicker_2_MSP432__getMISO_1
0x1B78      [16]    clicker_2_MSP432__getINT_1
0x1B88      [16]    clicker_2_MSP432__getPWM_1
0x1B98      [16]    clicker_2_MSP432__getRST_2
0x1BA8      [16]    clicker_2_MSP432__getCS_2
0x1BB8      [16]    clicker_2_MSP432__getSCK_2
0x1BC8      [16]    clicker_2_MSP432__getAN_2
0x1BD8      [16]    clicker_2_MSP432__getTX_1
0x1BE8      [16]    clicker_2_MSP432__getSCL_1
0x1BF8      [16]    clicker_2_MSP432__getSDA_1
0x1C08      [16]    clicker_2_MSP432__getSCK_1
0x1C18      [20]    clicker_2_MSP432__i2cInit_1
0x1C2C     [456]    clicker_2_MSP432__gpioInit_4
0x1DF4     [472]    clicker_2_MSP432__gpioInit_3
0x1FCC      [20]    clicker_2_MSP432__i2cInit_4
0x1FE0      [20]    clicker_2_MSP432__i2cInit_3
0x1FF4      [20]    clicker_2_MSP432__i2cInit_2
0x2008      [16]    clicker_2_MSP432__getAN_1
0x2018      [16]    clicker_2_MSP432__getRST_1
0x2028      [16]    clicker_2_MSP432__getCS_1
0x2038     [464]    clicker_2_MSP432__gpioInit_2
0x2208     [464]    clicker_2_MSP432__gpioInit_1
0x23D8     [132]    _gyro2_singleWrite
0x245C      [16]    clicker_2_MSP432__getMISO_2
0x246C      [16]    clicker_2_MSP432__getCS_4
0x247C      [16]    clicker_2_MSP432__getRST_4
0x248C      [16]    clicker_2_MSP432__getMISO_4
0x249C      [16]    clicker_2_MSP432__getSCK_4
0x24AC      [16]    clicker_2_MSP432__getSCL_3
0x24BC      [16]    clicker_2_MSP432__getTX_3
0x24CC      [16]    clicker_2_MSP432__getAN_4
0x24DC      [16]    clicker_2_MSP432__getSDA_3
0x24EC      [16]    clicker_2_MSP432__getSCL_4
0x24FC      [16]    clicker_2_MSP432__getTX_4
0x250C      [80]    _WordToStr
0x255C      [16]    clicker_2_MSP432__getSDA_4
0x256C      [16]    clicker_2_MSP432__getPWM_4
0x257C      [16]    clicker_2_MSP432__getMOSI_4
0x258C      [16]    clicker_2_MSP432__getRX_4
0x259C      [16]    clicker_2_MSP432__getINT_4
0x25AC      [16]    clicker_2_MSP432__getSCL_2
0x25BC      [16]    clicker_2_MSP432__getTX_2
0x25CC      [16]    clicker_2_MSP432__getAN_3
0x25DC      [16]    clicker_2_MSP432__getSDA_2
0x25EC      [16]    clicker_2_MSP432__getPWM_2
0x25FC      [16]    clicker_2_MSP432__getMOSI_2
0x260C      [16]    clicker_2_MSP432__getRX_2
0x261C      [16]    clicker_2_MSP432__getINT_2
0x262C      [16]    clicker_2_MSP432__getPWM_3
0x263C      [16]    clicker_2_MSP432__getMOSI_3
0x264C      [16]    clicker_2_MSP432__getRX_3
0x265C      [16]    clicker_2_MSP432__getINT_3
0x266C      [16]    clicker_2_MSP432__getCS_3
0x267C      [16]    clicker_2_MSP432__getRST_3
0x268C      [16]    clicker_2_MSP432__getMISO_3
0x269C      [16]    clicker_2_MSP432__getSCK_3
0x26AC      [16]    clicker_2_MSP432__setRST_3
0x26BC      [16]    clicker_2_MSP432__setCS_3
0x26CC      [16]    clicker_2_MSP432__setSDA_2
0x26DC      [16]    clicker_2_MSP432__setAN_3
0x26EC      [16]    clicker_2_MSP432__setSCK_3
0x26FC      [28]    __gyro2_driver_hal_i2cMap
0x2718      [16]    clicker_2_MSP432__setSDA_4
0x2728      [32]    clicker_2_MSP432__log_write
0x2748      [88]    __gyro2_driver_hal_gpioMap
0x27A0      [16]    clicker_2_MSP432__setMISO_2
0x27B0      [16]    clicker_2_MSP432__setMOSI_2
0x27C0      [16]    clicker_2_MSP432__setCS_2
0x27D0      [16]    clicker_2_MSP432__setSCK_2
0x27E0      [16]    clicker_2_MSP432__setPWM_2
0x27F0      [16]    clicker_2_MSP432__setTX_2
0x2800      [16]    clicker_2_MSP432__setSCL_2
0x2810      [16]    clicker_2_MSP432__setINT_2
0x2820      [16]    clicker_2_MSP432__setRX_2
0x2830      [16]    clicker_2_MSP432__setSCL_4
0x2840      [16]    clicker_2_MSP432__setSCL_3
0x2850      [16]    clicker_2_MSP432__setTX_3
0x2860      [16]    clicker_2_MSP432__setAN_4
0x2870      [16]    clicker_2_MSP432__setSDA_3
0x2880      [16]    clicker_2_MSP432__setRX_3
0x2890      [16]    clicker_2_MSP432__setMOSI_3
0x28A0      [16]    clicker_2_MSP432__setMISO_3
0x28B0      [16]    clicker_2_MSP432__setINT_3
0x28C0      [16]    clicker_2_MSP432__setPWM_3
0x28D0      [16]    clicker_2_MSP432__setINT_4
0x28E0      [16]    clicker_2_MSP432__setPWM_4
0x28F0      [16]    clicker_2_MSP432__setTX_4
0x2900      [16]    clicker_2_MSP432__setRX_4
0x2910      [16]    clicker_2_MSP432__setMOSI_4
0x2920      [16]    clicker_2_MSP432__setCS_4
0x2930      [16]    clicker_2_MSP432__setRST_4
0x2940      [16]    clicker_2_MSP432__setMISO_4
0x2950      [16]    clicker_2_MSP432__setSCK_4
0x2960      [16]    clicker_2_MSP432__setRST_2
0x2970      [16]    clicker_2_MSP432__setRST_1
0x2980      [16]    clicker_2_MSP432__setAN_1
0x2990      [16]    clicker_2_MSP432__setCS_1
0x29A0      [16]    clicker_2_MSP432__setMISO_1
0x29B0      [16]    clicker_2_MSP432__setSCK_1
0x29C0      [36]    clicker_2_MSP432__log_init2
0x29E4      [36]    clicker_2_MSP432__log_init1
0x2A08      [36]    clicker_2_MSP432__log_init3
0x2A2C      [36]    clicker_2_MSP432__log_initUart
0x2A50      [36]    clicker_2_MSP432__log_init4
0x2A74     [160]    _gyro2_singleRead
0x2B14      [16]    clicker_2_MSP432__setPWM_1
0x2B24      [16]    clicker_2_MSP432__setINT_1
0x2B34      [16]    clicker_2_MSP432__setMOSI_1
0x2B44      [16]    clicker_2_MSP432__setRX_1
0x2B54      [16]    clicker_2_MSP432__setSDA_1
0x2B64      [16]    clicker_2_MSP432__setAN_2
0x2B74      [16]    clicker_2_MSP432__setSCL_1
0x2B84      [16]    clicker_2_MSP432__setTX_1
0x2B94     [102]    _mikrobus_gpioInit
0x2BFC      [28]    _gyro2_getID
0x2C18      [70]    _mikrobus_i2cInit
0x2C60     [280]    _gyro2_getAxisraw
0x2D78      [88]    _gyro2_i2cDriverInit
0x2DD0      [92]    _gyro2_setDR
0x2E2C     [112]    _mikrobus_logWrite
0x2E9C      [88]    _gyro2_setOpmode
0x2EF4      [24]    _gyro2_pwmPin
0x2F0C      [56]    _gyro2_frSetup
0x2F44     [308]    _gyro2_interruptCfg
0x3078      [82]    _mikrobus_logInit
0x30CC     [110]    _IntToStr
0x313C     [180]    _gyro2_calcAxis
0x31F0      [36]    _gyro2_sensitivity
0x3214      [36]    _gyro2_interruptEventgeneration
0x3238      [54]    _Ltrim
0x3270      [28]    _Delay_1us
0x328C      [20]    ___CC2DW
0x32A0     [176]    _applicationTask
0x3350      [58]    ___FillZeros
0x3390     [268]    _applicationInit
0x34A0     [112]    _systemInit
0x3510       [8]    ___GenExcept
0x3518      [42]    ___EnableFPU
0x3544      [20]    __Lib_System_MSP432P_InitialSetUpFosc
0x3558      [38]    _main
0x3580     [324]    __Lib_System_MSP432P_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG___Lib_UART_MSP__modf_val
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x20000000       [1]    _GYRO2_ADDR1
0x20000001      [27]    ?lstr1_Click_Gyro2_MSP
0x2000001C      [21]    ?lstr2_Click_Gyro2_MSP
0x20000031       [1]    _GYRO2_RT_CFG_ZTEFE
0x20000032       [1]    _GYRO2_RT_CFG_YTEFE
0x20000033       [1]    _GYRO2_RT_CFG_XTEFE
0x20000034       [1]    _GYRO2_Active
0x20000035       [1]    _GYRO2_DR_100Hz
0x20000036       [1]    _GYRO2_INT_CFG_FIFO_INT1
0x20000037       [1]    _GYRO2_INT_EN_FIFO
0x20000038       [1]    _GYRO2_INT_EN_DRDY
0x20000039       [1]    _GYRO2_IPOL_ACTIVE_HI
0x2000003A       [1]    _GYRO2_LO_PASS_MOD2
0x2000003B       [1]    _GYRO2_HI_PASS_OFF
0x2000003C       [1]    _GYRO2_SCALE_3
0x2000003D       [6]    ?lstr3_Click_Gyro2_MSP
0x20000043       [4]    ?lstr4_Click_Gyro2_MSP
0x20000047       [4]    ?lstr5_Click_Gyro2_MSP
0x2000004B       [4]    ?lstr6_Click_Gyro2_MSP
0x2000004F       [4]    ?lstr7_Click_Gyro2_MSP
0x20000053       [1]    __gyro2_driver_GYRO2_SPI_PROTO
0x20000054       [1]    __gyro2_driver_GYRO2_I2C_PROTO
0x20000055       [1]    _GYRO2_RT_CFG
0x20000056       [1]    _GYRO2_CTRL_REG1
0x20000057       [1]    _GYRO2_RT_THS
0x20000058       [1]    _GYRO2_CTRL_REG2
0x20000059       [1]    _GYRO2_CTRL_REG0
0x2000005A       [1]    _GYRO2_OUT_X_MSB
0x2000005B       [1]    _GYRO2_WHO_AM_I
0x2000005C       [4]    __Lib_I2C_MSP__I2C0_TIMEOUT
0x20000060       [4]    __Lib_I2C_MSP__I2C1_TIMEOUT
0x20000064       [4]    __Lib_I2C_MSP__I2C2_TIMEOUT
0x20000068       [4]    __Lib_I2C_MSP__I2C3_TIMEOUT
0x2000006C       [1]    __Lib_I2C_MSP__DELAY_RESTART
0x2000006D       [1]    __gyro2_driver_dirverUsed
0x2000006E       [1]    __gyro2_driver__slaveAddress
0x2000006F       [1]    __gyro2_driver__tmp_ctrl_reg1
0x20000070       [4]    __Lib_System_MSP432P_CS_VLOCLK_FREQUENCY
0x20000074       [4]    __Lib_System_MSP432P_CS_MODCLK_FREQUENCY
0x20000078       [4]    _logger
0x2000007C       [8]    _axisDatatmp
0x20000084      [20]    _text
0x20000098       [4]    __gyro2_driver_fp_spiRead
0x2000009C       [4]    __gyro2_driver_hal_gpio_pwmGet
0x200000A0       [4]    __gyro2_driver_hal_gpio_csSet
0x200000A4       [1]    __gyro2_driver__tmp_ctrl_reg2
0x200000A8       [4]    __gyro2_driver_fp_i2cRead
0x200000AC       [4]    __gyro2_driver_fp_i2cWrite
0x200000B0       [4]    __gyro2_driver_hal_gpio_intGet
0x200000B4       [4]    __gyro2_driver_hal_gpio_anSet
0x200000B8       [4]    __gyro2_driver_hal_gpio_rstSet
0x200000BC       [4]    __gyro2_driver_hal_gpio_pwmSet
0x200000C0       [4]    __Lib_I2C_MSP_I2C_Timeout_Ptr
0x200000C4       [4]    _I2C0_timeout_Ptr
0x200000C8       [4]    _I2C1_timeout_Ptr
0x200000CC       [4]    _I2C2_timeout_Ptr
0x200000D0       [4]    _I2C3_timeout_Ptr
0x200000D4       [4]    _I2C_Read_Ptr
0x200000D8       [4]    _I2C_Write_Ptr
0x200000DC       [4]    __Lib_System_MSP432P_lfxtFreq
0x200000E0       [4]    __Lib_System_MSP432P_hfxtFreq
0x200000E4       [4]    ___System_CLOCK_IN_KHZ
0x200000E8       [4]    _UART_Wr_Ptr
0x200000EC       [4]    _UART_Rd_Ptr
0x200000F0       [4]    _UART_Rdy_Ptr
0x200000F4       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x338C       [4]    __GYRO2_I2C_CFG
0x36C4     [220]    __GPIO_MODULE_UARTA2_B23
0x37A0     [220]    __GPIO_MODULE_I2CB1_C1213
0x387C     [220]    __GPIO_MODULE_UARTA1_A1011
0x3958     [220]    __GPIO_MODULE_UARTA0_A23
0x3A34     [220]    __GPIO_MODULE_I2CB2_B67
0x3B10       [1]    ?ICS_GYRO2_ADDR1
0x3B11      [27]    ?ICS?lstr1_Click_Gyro2_MSP
0x3B2C      [21]    ?ICS?lstr2_Click_Gyro2_MSP
0x3B41       [1]    ?ICS_GYRO2_RT_CFG_ZTEFE
0x3B42       [1]    ?ICS_GYRO2_RT_CFG_YTEFE
0x3B43       [1]    ?ICS_GYRO2_RT_CFG_XTEFE
0x3B44       [1]    ?ICS_GYRO2_Active
0x3B45       [1]    ?ICS_GYRO2_DR_100Hz
0x3B46       [1]    ?ICS_GYRO2_INT_CFG_FIFO_INT1
0x3B47       [1]    ?ICS_GYRO2_INT_EN_FIFO
0x3B48       [1]    ?ICS_GYRO2_INT_EN_DRDY
0x3B49       [1]    ?ICS_GYRO2_IPOL_ACTIVE_HI
0x3B4A       [1]    ?ICS_GYRO2_LO_PASS_MOD2
0x3B4B       [1]    ?ICS_GYRO2_HI_PASS_OFF
0x3B4C       [1]    ?ICS_GYRO2_SCALE_3
0x3B4D       [6]    ?ICS?lstr3_Click_Gyro2_MSP
0x3B53       [4]    ?ICS?lstr4_Click_Gyro2_MSP
0x3B57       [4]    ?ICS?lstr5_Click_Gyro2_MSP
0x3B5B       [4]    ?ICS?lstr6_Click_Gyro2_MSP
0x3B5F       [4]    ?ICS?lstr7_Click_Gyro2_MSP
0x3B63       [1]    ?ICS__gyro2_driver_GYRO2_SPI_PROTO
0x3B64       [1]    ?ICS__gyro2_driver_GYRO2_I2C_PROTO
0x3B65       [1]    ?ICS_GYRO2_RT_CFG
0x3B66       [1]    ?ICS_GYRO2_CTRL_REG1
0x3B67       [1]    ?ICS_GYRO2_RT_THS
0x3B68       [1]    ?ICS_GYRO2_CTRL_REG2
0x3B69       [1]    ?ICS_GYRO2_CTRL_REG0
0x3B6A       [1]    ?ICS_GYRO2_OUT_X_MSB
0x3B6B       [1]    ?ICS_GYRO2_WHO_AM_I
0x3B6C       [4]    ?ICS__Lib_I2C_MSP__I2C0_TIMEOUT
0x3B70       [4]    ?ICS__Lib_I2C_MSP__I2C1_TIMEOUT
0x3B74       [4]    ?ICS__Lib_I2C_MSP__I2C2_TIMEOUT
0x3B78       [4]    ?ICS__Lib_I2C_MSP__I2C3_TIMEOUT
0x3B7C       [1]    ?ICS__Lib_I2C_MSP__DELAY_RESTART
0x3B80      [96]    __MIKROBUS1_GPIO
0x3BE0      [72]    __Lib_UART_MSP__UART_UCBRSx_FRACTIONAL_TABLE
0x3C28      [72]    __Lib_UART_MSP__UART_UCBRSx_TABLE
0x3C70       [8]    __MIKROBUS1_I2C
0x3C78       [4]    ?ICS__Lib_System_MSP432P_CS_VLOCLK_FREQUENCY
0x3C7C       [4]    ?ICS__Lib_System_MSP432P_CS_MODCLK_FREQUENCY
